<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo语法</title>
    <url>/2019/12/hexo%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h2 id="写作"><a class="header-anchor" href="#写作">.</a>写作</h2>
<h3 id="新建一篇文章"><a class="header-anchor" href="#新建一篇文章">.</a>新建一篇文章</h3>
<blockquote>
<p>你可以执行下列命令来创建一篇新文章或者新的页面：</p>
<p><code>hexo new [layout] [title]</code></p>
<p>您可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布&gt;局。</p>
</blockquote>
<span id="more"></span>
<h3 id="文件名称"><a class="header-anchor" href="#文件名称">.</a>文件名称</h3>
<blockquote>
<p>Hexo 默认以标题做为文件名称，但您也可以在_config.yml中编辑 new_post_name 参数来改变默认的文件名称，举例来说，设为 :year-:month-:day-:title.md 可让您更方便的通过日期来管理文章。</p>
</blockquote>
<h3 id="模版（Scaffold）"><a class="header-anchor" href="#模版（Scaffold）">.</a>模版（Scaffold）</h3>
<blockquote>
<p>在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件，例如：</p>
<p><code>hexo new yun &quot;My first article&quot;</code></p>
<p>在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 yun.md 文件，并根据其内容建立文章</p>
</blockquote>
<hr />
<h2 id="Front-matter-前页"><a class="header-anchor" href="#Front-matter-前页">.</a>Front-matter(前页)</h2>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/Front-matter.png?x-oss-process=style/yunying61" alt="Front-matter 摘自hexo" title="Front-matter(前页)" /><br />
此处有个注意事项：github库 图片引用中，把地址中的blob改成raw,否则可能不能使用。</p>
<h3 id="分类和标签"><a class="header-anchor" href="#分类和标签">.</a>分类和标签</h3>
<blockquote>
<p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 Foo, Bar 不等于 Bar, Foo；而标签没有顺序和层次。例如：</p>
<blockquote>
<p>categories:<br />
- Diary<br />
tags:<br />
- PS3<br />
- Games</p>
</blockquote>
</blockquote>
<blockquote>
<p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p>
<blockquote>
<p>categories:<br />
- [Diary, PlayStation]<br />
- [Diary, Games]<br />
- [Life]<br />
此时这篇文章同时包括三个分类： PlayStation 和 Games 分别都是父分类 Diary 的子分类，同时 Life 是一个没有子分类的分类。</p>
</blockquote>
</blockquote>
<blockquote>
<p><b>JSON Front-matter</b></p>
<blockquote>
<p>除了 YAML 外，你也可以使用 JSON 来编写 Front-matter，只要将 <code>---</code> 代换成 <code>;;;</code> 即可。</p>
<p>;;;</p>
<p>“title”: “Hello World”,<br />
“date”: “2013/7/13 20:46:25”<br />
;;;</p>
</blockquote>
</blockquote>
<hr />
<h2 id="标签插件（Tag-Plugins）"><a class="header-anchor" href="#标签插件（Tag-Plugins）">.</a>标签插件（Tag Plugins）</h2>
<p>标签插件和 Front-matter 中的标签不同，它们是用于在文章中快速插入特定内容的插件。</p>
<h3 id="引用块"><a class="header-anchor" href="#引用块">.</a>引用块</h3>
<p>在文章中插入引言，可包含作者、来源和标题。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote author, - source [link] [source_link_title] %&#125;</span><br><span class="line">content  </span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<blockquote><p>content</p>
<footer><strong>author</strong><cite>- source link source_link_title</cite></footer></blockquote>  
<h4 id="样例"><a class="header-anchor" href="#样例">.</a>样例</h4>
<p><b>没有提供参数，则只输出普通的 blockquote</b></p>
<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>
</blockquote>  
<p><b>引用书上的句子</b></p>
<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>
<footer><strong>David Levithan</strong><cite>- Wide Awake</cite></footer></blockquote>  
<p><b>引用 Twitter</b></p>
<blockquote><p>NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</p>
<footer><strong>@DevDocs, -</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>
<p><b>引用网络上的文章</b></p>
<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin, -</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html">Welcome to Island Marketing</a></cite></footer></blockquote>
<h3 id="代码块"><a class="header-anchor" href="#代码块">.</a>代码块</h3>
<p>在文章中插入代码。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;  </span><br><span class="line">code snippet  </span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code snippet</span><br></pre></td></tr></table></figure>
<h4 id="样例-2"><a class="header-anchor" href="#样例-2">.</a>样例</h4>
<p><b>普通的代码块</b></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alert(&#x27;Hello World!&#x27;);</span><br></pre></td></tr></table></figure> 
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock %&#125;</span><br><span class="line">alert(&#x27;Hello World!&#x27;);</span><br><span class="line">&#123;% endcodeblock %&#125;  </span><br></pre></td></tr></table></figure>
<p><b>指定语言</b></p>
<figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">[rectangle setX: <span class="number">10</span> y: <span class="number">10</span> width: <span class="number">20</span> height: <span class="number">20</span>];</span><br></pre></td></tr></table></figure> 
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock lang:objc %&#125;</span><br><span class="line">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class="line">&#123;% endcodeblock %&#125; </span><br></pre></td></tr></table></figure>
<p><b>附加说明</b></p>
<figure class="highlight plaintext"><figcaption><span>Array.map</span></figcaption><table><tr><td class="code"><pre><span class="line">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock Array.map %&#125;</span><br><span class="line">array.map(callback[, thisArg])</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>
<p><b>附加说明和网址</b></p>
<figure class="highlight plaintext"><figcaption><span>_.compact</span><a href="http://underscorejs.org/#compact">Underscore.js</a></figcaption><table><tr><td class="code"><pre><span class="line">_.compact([0, 1, false, 2, &#x27;&#x27;, 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock _.compact http://underscorejs.org/#compact  Underscore.js %&#125;</span><br><span class="line">_.compact([0, 1, false, 2, &#x27;&#x27;, 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://hexo.io/zh-cn/docs/tag-plugins#%E4%BB%A3%E7%A0%81%E5%9D%97">hexo官方文档</a>的展示：<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/%E4%BB%A3%E7%A0%81%E6%A0%B7%E4%BE%8B.png" alt="代码样例" /></p>
<h3 id="Pull-Quote"><a class="header-anchor" href="#Pull-Quote">.</a>Pull Quote</h3>
<p>在文章中插入 Pull quote。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% pullquote [class] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="jsFiddle"><a class="header-anchor" href="#jsFiddle">.</a>jsFiddle</h3>
<p>在文章中嵌入 jsFiddle。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Gist"><a class="header-anchor" href="#Gist">.</a>Gist</h3>
<p>在文章中嵌入 Gist。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="iframe"><a class="header-anchor" href="#iframe">.</a>iframe</h3>
<p>在文章中插入 iframe。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Image"><a class="header-anchor" href="#Image">.</a>Image</h3>
<p>在文章中插入指定大小的图片。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% img [class names] /path/to/image [width] [height] &#x27;&quot;title text&quot; &quot;alt text&quot;&#x27; %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Link"><a class="header-anchor" href="#Link">.</a>Link</h3>
<p>在文章中插入链接，并自动给外部链接添加 target=“_blank” 属性。（这个链接是在本网页进行跳转）</p>
<a href="https://www.runoob.com/" title="学的不仅是技术，更是梦想！" target="">菜鸟教程</a> 
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% link 菜鸟教程 https://www.runoob.com/ 学的不仅是技术，更是梦想！ %&#125; </span><br></pre></td></tr></table></figure>
<h3 id="插入视频"><a class="header-anchor" href="#插入视频">.</a>插入视频</h3>
<p><img data-src="https://img-61.oss-cn-shanghai.aliyuncs.com/img/hexo/%E6%8F%92%E5%85%A5%E8%A7%86%E9%A2%91.png" alt="插入视频 摘自hexo" title="视频插入" /></p>
<h3 id="插入代码文件"><a class="header-anchor" href="#插入代码文件">.</a>插入代码文件</h3>
<p>插入 <code>source/downloads/code</code> 文件夹内的代码文件。<code>source/downloads/code</code> 不是固定的，取决于你在配置文件中 <code>code_dir</code> 的配置。</p>
<pre><code>&#123;% include_code [title] [lang:language] [from:line] [to:line] path/to/file %&#125;
</code></pre>
<figure class="highlight python"><figcaption><span>Hello</span><a href="/downloads/code/hello.py">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% include_code Hello.p lang:python hello.py %&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/Include%20Code.png" alt="插入(代码文件)中的代码 摘自hexo" title="代码插入" /></p>
<h3 id="引用资源-和-Raw"><a class="header-anchor" href="#引用资源-和-Raw">.</a>引用资源 和 Raw</h3>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/%E5%BC%95%E7%94%A8%E8%B5%84%E6%BA%90%20%E5%92%8C%20Raw.png" alt="引用资源 和 Raw 摘自hexo" title="引用资源" /></p>
<h3 id="引用博客文章"><a class="header-anchor" href="#引用博客文章">.</a>引用博客文章</h3>
<p>这里的引用文章，是指引用你博客下的文章，把链接指向你的另一篇文章。<br />
基本使用方法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% post_link 这里填写你的另一篇文章名称 %&#125;</span><br><span class="line">&#123;% post_link 这里填写你的另一篇文章名称 &#x27;这里是自定义链接的名称&#x27; %&#125;</span><br></pre></td></tr></table></figure>
<a href="/2019/11/markdown%E8%AF%AD%E6%B3%95/" title="markdwon笔记">markdwon笔记</a>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% post_link markdown语法 markdwon笔记 %&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/%E5%BC%95%E7%94%A8%E6%96%87%E7%AB%A0.png" alt="引用文章 摘自hexo" title="引用文章" /></p>
<h3 id="文章摘要和截断"><a class="header-anchor" href="#文章摘要和截断">.</a>文章摘要和截断</h3>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81%E5%92%8C%E6%88%AA%E6%96%AD.png" alt="文章摘要和截断 摘自hexo" title="文章摘要和截断" /></p>
<hr />
<h2 id="资源文件夹"><a class="header-anchor" href="#资源文件夹">.</a>资源文件夹</h2>
<blockquote>
<p>资源（Asset）代表 source 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 source/images 文件夹中。然后通过类似于 ![](/images/image.jpg) 的方法访问它们。</p>
</blockquote>
<h3 id="直接引用"><a class="header-anchor" href="#直接引用">.</a>直接引用</h3>
<p>如果 Hexo 项目中只有少量图片，那最简单的方法就是将它们放在 source/images 文件夹中，然后通过以下方法引用：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">NP15</span>](<span class="link">/images/NP15.jpg</span>)</span><br></pre></td></tr></table></figure>
<h3 id="文章资源文件夹"><a class="header-anchor" href="#文章资源文件夹">.</a>文章资源文件夹</h3>
<blockquote>
<p>对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 config.yml 文件中的 post_asset_folder 选项设为 true 来打开。<br />
当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new layout title </code>命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p>
</blockquote>
<h4 id="引用的代码"><a class="header-anchor" href="#引用的代码">.</a>引用的代码</h4>
<p>在不使用插件的情况下进行引用(开启了“post_asset_folder”文章资源文件夹)</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">patch 3</span>](<span class="link">./NP15.jpg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% asset<span class="emphasis">_img &quot;patch 2.jpg&quot; %&#125;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里要注意，(./NP15.jpg)这种格式不能使用空格，空格会导致无法识别，图片无法加载。例如：(./patch 2.jpg)这是错误的。</p>
</blockquote>
<p>在使用hexo-asset-image<a href="https://blog.csdn.net/xjm850552586/article/details/84101345">参考链接1</a><a href="https://blog.csdn.net/Strong997/article/details/97767929">参考链接2</a>插件的情况下进行引用(开启了“post_asset_folder”文章资源文件夹)</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">NP15</span>](<span class="link">2020-02-16-试验组-1/NP15.jpg</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里同样要注意，(2020-02-16-试验组-1/NP15.jpg)这种格式也不能使用空格，空格会导致无法识别，图片无法加载。例如：(2020-02-16-试验组-1/patch 2.jpg)这是错误的。</p>
</blockquote>
<p>总结：既然加了插件也就增加了一种引用的方法，那还不如少加个插件，只用剩下的两种。当然，还可以使用外链，那就另算了。</p>
<h4 id="使用相对路径进行引用"><a class="header-anchor" href="#使用相对路径进行引用">.</a>使用相对路径进行引用</h4>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%BC%95%E7%94%A8%E7%9A%84%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6.png" alt="相对路径引用的标签插件 摘自hexo" title="相对路径引用" /></p>
<h2 id="数据文件夹"><a class="header-anchor" href="#数据文件夹">.</a>数据文件夹</h2>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6.png" alt="数据文件夹 摘自hexo" title="数据文件夹" /></p>
<h2 id="hexo-server"><a class="header-anchor" href="#hexo-server">.</a>hexo server</h2>
<h3 id="使用服务器"><a class="header-anchor" href="#使用服务器">.</a>使用服务器</h3>
<ul>
<li>
<p>Hexo 3.0 把服务器独立成了个别模块，您必须先安装 hexo-server 才能使用。在命令提示符（cmd）中输入：</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-server --save</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>安装完成后，输入以下命令以启动服务器，您的网站会在 http://localhost:4000 下启动。<strong>在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。</strong></p>
<p><code>hexo server</code></p>
<p>简写：</p>
<p><code>hexo s</code></p>
</li>
<li>
<p>如果您想要更改端口，或是在执行时遇到了 EADDRINUSE 错误，可以在执行时使用 -p 选项指定其他端口，如下：</p>
<p><code>hexo server -p 5000</code></p>
</li>
</ul>
<h3 id="静态模式"><a class="header-anchor" href="#静态模式">.</a>静态模式</h3>
<blockquote>
<p>在静态模式下，服务器只处理 public 文件夹内的文件，而不会处理文件变动，在执行时，您应该先自行执行 hexo generate，此模式通常用于生产环境（production mode）下。</p>
</blockquote>
<h3 id="自定义-IP"><a class="header-anchor" href="#自定义-IP">.</a>自定义 IP</h3>
<ul>
<li>服务器默认运行在 0.0.0.0，您可以覆盖默认的 IP 设置，如下：<br />
<code>hexo server -i 192.168.1.1</code></li>
<li>指定这个参数后，您就只能通过该IP才能访问站点。例如，对于一台使用无线网络的笔记本电脑，除了指向本机的127.0.0.1外，通常还有一个192.168.*.*的局域网IP，如果像上面那样使用-i参数，就不能用127.0.0.1来访问站点了。对于有公网IP的主机，如果您指定一个局域网IP作为-i参数的值，那么就无法通过公网来访问站点。</li>
</ul>
<h3 id="Pow"><a class="header-anchor" href="#Pow">.</a>Pow</h3>
<p>Pow 是一个<strong>Mac</strong>系统上的零配置 Rack 服务器，它也可以作为一个简单易用的静态文件服务器来使用。</p>
<h4 id="安装"><a class="header-anchor" href="#安装">.</a>安装</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl get.pow.cx | sh</span><br></pre></td></tr></table></figure>
<h4 id="设置"><a class="header-anchor" href="#设置">.</a>设置</h4>
<ul>
<li>
<p>在 ~/.pow 文件夹建立链接（symlink）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/.pow</span><br><span class="line">ln -s /path/to/myapp</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>您的网站将会在 http://myapp.dev 下运行，网址根据链接名称而定。</p>
</li>
</ul>
<h2 id="hexo-generate"><a class="header-anchor" href="#hexo-generate">.</a>hexo generate</h2>
<p>使用 Hexo 生成静态文件快速而且简单。</p>
<p><code>hexo generate</code></p>
<h3 id="监视文件变动"><a class="header-anchor" href="#监视文件变动">.</a>监视文件变动</h3>
<p>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。</p>
<p><code>hexo generate --watch</code></p>
<h3 id="完成后部署"><a class="header-anchor" href="#完成后部署">.</a>完成后部署</h3>
<p>您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo generate --deploy</span><br><span class="line">hexo deploy --generate</span><br></pre></td></tr></table></figure>
<h3 id="简写"><a class="header-anchor" href="#简写">.</a>简写</h3>
<p>上面两个命令可以简写为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g -d</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>
<h2 id="hexo-功能扩展（插件）"><a class="header-anchor" href="#hexo-功能扩展（插件）">.</a>hexo 功能扩展（插件）</h2>
<h3 id="文章标题锚点"><a class="header-anchor" href="#文章标题锚点">.</a>文章标题锚点</h3>
<p>隶属于<code>hexo-renderer-markdown-it</code>插件下的anchors配置栏</p>
<p><a href="https://github.com/hexojs/hexo-renderer-markdown-it">Github</a> <a href="https://blog.bugimg.com/works/hexo-renderer-markdown-it_and_plugins_config.html">hexo-renderer-markdown-it 的配置</a> <a href="https://blog.bugimg.com/works/markdown_anchor.html">深究 Markdown 的锚点与使用方法</a></p>
<p>效果：在标题的左边或右边出现链接至该标题的永久链接</p>
<p>使用：</p>
<ul>
<li>
<p>直接点击即可复制链接</p>
</li>
<li>
<p>通过<code>[名称](#标题名)</code> 跳转到该标题处</p>
</li>
</ul>
]]></content>
      <categories>
        <category>IT</category>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>笔记</tag>
        <tag>语法</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown语法</title>
    <url>/2019/11/markdown%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<blockquote>
<p>以下所有演示，后面紧接的都是它们的代码行。</p>
</blockquote>
<h1 id="一级标题"><a class="header-anchor" href="#一级标题">.</a>一级标题</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br></pre></td></tr></table></figure>
<h2 id="二级标题"><a class="header-anchor" href="#二级标题">.</a>二级标题</h2>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## 二级标题</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="三级标题"><a class="header-anchor" href="#三级标题">.</a>三级标题</h3>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">### 三级标题</span></span><br></pre></td></tr></table></figure>
<h4 id="四级标题"><a class="header-anchor" href="#四级标题">.</a>四级标题</h4>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#### 四级标题</span></span><br></pre></td></tr></table></figure>
<h5 id="五级标题"><a class="header-anchor" href="#五级标题">.</a>五级标题</h5>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">##### 五级标题</span></span><br></pre></td></tr></table></figure>
<h6 id="六级标题"><a class="header-anchor" href="#六级标题">.</a>六级标题</h6>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure>
<h2 id="段落格式"><a class="header-anchor" href="#段落格式">.</a>段落格式</h2>
<h3 id="分割线（水平线）"><a class="header-anchor" href="#分割线（水平线）">.</a>分割线（水平线）</h3>
<hr />
<hr />
<hr />
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">__<span class="emphasis">_</span></span></span><br><span class="line"><span class="emphasis"><span class="strong"></span></span></span><br><span class="line"><span class="emphasis"><span class="strong">---</span></span></span><br><span class="line"><span class="emphasis"><span class="strong"></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="strong">**<span class="emphasis">*</span></span></span></span></span><br></pre></td></tr></table></figure>
<h3 id="文本样式"><a class="header-anchor" href="#文本样式">.</a>文本样式</h3>
<p><strong>This is bold text 加粗</strong></p>
<p><strong>This is bold text 加粗</strong></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**This is bold text 加粗**</span></span><br><span class="line"><span class="strong">__This is bold text 加粗__</span></span><br></pre></td></tr></table></figure>
<p><em>This is italic text 斜体</em></p>
<p><em>This is italic text 斜体</em></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*This is italic text 斜体*</span></span><br><span class="line"><span class="emphasis">_This is italic text 斜体_</span></span><br></pre></td></tr></table></figure>
<p><em><strong>粗斜体文本</strong></em></p>
<p><em><strong>粗斜体文本</strong></em></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*粗斜体文本<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="strong">__<span class="emphasis">_粗斜体文本<span class="strong">__<span class="emphasis">_</span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure>
<p><s>Strikethrough 删除线</s></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">~~Strikethrough 删除线~~ </span><br></pre></td></tr></table></figure>
<p><u>xiahuaxian 下划线</u></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>xiahuaxian 下划线<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span>  </span><br></pre></td></tr></table></figure>
<p>Markdown 扩展语法<br />
内联公式（例：$\LaTeX$​）</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\LaTeX</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p>下标（例：H<sub>2</sub>0）</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">H~2~0</span><br></pre></td></tr></table></figure>
<p>上标（例：X<sup>2</sup>）</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">X^2^</span><br></pre></td></tr></table></figure>
<p>高亮（例：==key==）</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">==key==</span><br></pre></td></tr></table></figure>
<h3 id="脚注"><a class="header-anchor" href="#脚注">.</a>脚注</h3>
<p>创建脚注:<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">创建脚注:[^脚注]</span><br><span class="line">// RUNOOB是突显的内容</span><br><span class="line">// 而下面这个是脚注的内容</span><br><span class="line">[<span class="symbol">^脚注</span>]: <span class="link">在文章末尾对特定名词进行解释说明</span></span><br></pre></td></tr></table></figure>
<p>不同于HTML语法中的 <abbr title="全写">缩写</abbr></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">&quot;全写&quot;</span>&gt;</span>缩写<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="判断框"><a class="header-anchor" href="#判断框">.</a>判断框</h3>
<ul>
<li>[x]</li>
<li>[ ]</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> [x] </span><br><span class="line"><span class="bullet">-</span> [ ] </span><br></pre></td></tr></table></figure>
<h2 id="方框"><a class="header-anchor" href="#方框">.</a>方框</h2>
<pre>使用HTML的<b>pre标签</b>可以实现圆角方框的高亮提示。pre标签原本的使用是可以实现对空行和空格的控制，
如：
此例演示如何使用 pre 标签
	对空行
和    空格
		进行控制</pre>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span>使用HTML的<span class="tag">&lt;<span class="name">b</span>&gt;</span>pre标签<span class="tag">&lt;/<span class="name">b</span>&gt;</span>可以实现圆角方框的高亮提示。pre标签原本的使用是可以实现对空行和空格的控制，</span><br><span class="line">如：</span><br><span class="line">此例演示如何使用 pre 标签</span><br><span class="line">	对空行</span><br><span class="line">和    空格</span><br><span class="line">		进行控制<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="列表"><a class="header-anchor" href="#列表">.</a>列表</h2>
<h3 id="无序列表"><a class="header-anchor" href="#无序列表">.</a>无序列表</h3>
<p>​		无序列表使用星号(<strong>*</strong>)、加号(<strong>+</strong>)或是减号(<strong>-</strong>)作为列表标记，标记后跟一个<strong>空格</strong>，然后再填写内容。无序列表可以嵌套，通过 <strong>tab键</strong> 建立层次关系：</p>
<ul>
<li>第一层1
<ul>
<li>第二层1</li>
<li>第二层2
<ul>
<li>第三层1
<ul>
<li>第四层1</li>
</ul>
</li>
</ul>
</li>
<li>第二层3</li>
</ul>
</li>
<li>第一层2</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">+</span> 第一层1</span><br><span class="line"><span class="bullet">	+</span> 第二层1</span><br><span class="line"><span class="bullet">	+</span> 第二层2</span><br><span class="line"><span class="bullet">		+</span> 第三层1</span><br><span class="line"><span class="bullet">			+</span> 第四层1</span><br><span class="line"><span class="bullet">	+</span> 第二层3</span><br><span class="line"><span class="bullet">+</span> 第一层2</span><br></pre></td></tr></table></figure>
<h3 id="有序列表"><a class="header-anchor" href="#有序列表">.</a>有序列表</h3>
<p>在每行代码的最前面输入序号如（1. ），注意 <code>.</code> 后面有空格，有序列表同样可以嵌套。<br />
注意：只要有了第一个序号的开始，后面的编号会依次开始排序，如（5. ，接下来的将会是6. ）</p>
<ol>
<li>
<p>Lorem ipsum dolor sit amet</p>
</li>
<li>
<p>Consectetur adipiscing elit</p>
<ol>
<li>here</li>
<li>there</li>
</ol>
</li>
<li>
<p>Integer molestie lorem at massa</p>
</li>
<li>
<p>You can use sequential numbers…</p>
</li>
<li>
<p>…or keep all the numbers as <code>1.</code></p>
</li>
</ol>
<p>按打头的编号开始排序:</p>
<ol start="57">
<li>从57开始</li>
<li>即使为 <code>1. </code> ，显示的序号也为58</li>
</ol>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> Lorem ipsum dolor sit amet</span><br><span class="line"><span class="bullet">2.</span> Consectetur adipiscing elit</span><br><span class="line"><span class="bullet">	1.</span> here</span><br><span class="line"><span class="bullet">	2.</span> there</span><br><span class="line"><span class="bullet">3.</span> Integer molestie lorem at massa</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> You can use sequential numbers...</span><br><span class="line"><span class="bullet">1.</span> ...or keep all the numbers as <span class="code">`1.`</span></span><br><span class="line"></span><br><span class="line">按打头的编号开始排序:</span><br><span class="line"></span><br><span class="line"><span class="bullet">57.</span> 从57开始</span><br><span class="line"><span class="bullet">1.</span> 即使为 <span class="code">`1. `</span> ，显示的序号也为58</span><br></pre></td></tr></table></figure>
<h2 id="区块"><a class="header-anchor" href="#区块">.</a>区块</h2>
<p>在段落开头使用 <code>&gt; </code> 符号 ，然后跟一个空格：</p>
<blockquote>
<p>区块引用</p>
<p>区块衔接</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 区块引用</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; 区块衔接</span></span><br></pre></td></tr></table></figure>
<p>区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推退：</p>
<blockquote>
<p>最外层<br />
最外层</p>
<blockquote>
<p>第一层嵌套<br />
第一层嵌套</p>
<blockquote>
<p>第二层嵌套<br />
第二层嵌套</p>
</blockquote>
</blockquote>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 最外层  </span></span><br><span class="line"><span class="quote">&gt; &gt; 第一层嵌套  </span></span><br><span class="line"><span class="quote">&gt; &gt; &gt; 第二层嵌套  </span></span><br></pre></td></tr></table></figure>
<h3 id="区块中使用列表"><a class="header-anchor" href="#区块中使用列表">.</a>区块中使用列表</h3>
<blockquote>
<p>注意空行！</p>
</blockquote>
<blockquote>
<p>区块中使用列表</p>
<ol>
<li>
<p>第一项</p>
</li>
<li>
<p>第二项</p>
</li>
</ol>
<ul>
<li>第一项</li>
<li>第二项</li>
</ul>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 区块中使用列表</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; 1. 第一项</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; 2. 第二项</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; + 第一项</span></span><br><span class="line"><span class="quote">&gt; + 第二项</span></span><br></pre></td></tr></table></figure>
<h3 id="列表中使用区块"><a class="header-anchor" href="#列表中使用区块">.</a>列表中使用区块</h3>
<p><strong>如果要在列表项目内放进区块，那么就需要先<code>空一行</code>，然后在 &gt; 前添加四个空格的缩进。</strong></p>
<blockquote>
<p>注意空行！</p>
</blockquote>
<p>区块中使用列表实例如下：</p>
<ul>
<li>
<p>第一项</p>
<blockquote>
<p>区块引用</p>
<p>区块衔接</p>
</blockquote>
</li>
<li>
<p>第二项</p>
</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span> 第一项</span><br><span class="line"><span class="code">	</span></span><br><span class="line"><span class="code">	&gt; 区块引用</span></span><br><span class="line"><span class="code">	&gt;</span></span><br><span class="line"><span class="code">	&gt; 区块衔接</span></span><br><span class="line"><span class="code">* 第二项</span></span><br></pre></td></tr></table></figure>
<h2 id="代码"><a class="header-anchor" href="#代码">.</a>代码</h2>
<h3 id="高亮代码"><a class="header-anchor" href="#高亮代码">.</a>高亮代码</h3>
<p><code>code</code></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">`code`</span></span><br></pre></td></tr></table></figure>
<h3 id="代码块-2"><a class="header-anchor" href="#代码块-2">.</a>代码块</h3>
<h4 id="空行式代码块"><a class="header-anchor" href="#空行式代码块">.</a>空行式代码块</h4>
<blockquote>
<p>在Hexo-Next主题下，空行式代码块将不会显示代码行号，且没有复制按钮。类似于使用<code>&lt;pre&gt;</code>标签</p>
</blockquote>
<pre><code>line 1 of code
line 2 of code
line 3 of code
</code></pre>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">该种代码行的格式：  </span><br><span class="line"><span class="code">`该段空行`</span></span><br><span class="line"><span class="code">	前面空4格（一个tab的长度），该段开始为代码行</span></span><br><span class="line"><span class="code">`结尾再空行，该段为结束`</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">演示如下：</span><br><span class="line"></span><br><span class="line"><span class="code">	line 1 of code</span></span><br><span class="line"><span class="code">	line 2 of code</span></span><br><span class="line"><span class="code">	line 3 of code</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure>
<h4 id="反引号式代码块"><a class="header-anchor" href="#反引号式代码块">.</a>反引号式代码块</h4>
<blockquote>
<p>如果你在代码块里使用了3个反引号（```），则代码块本身要用4个反引号！</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">line 1 of code</span><br><span class="line">line 2 of code</span><br><span class="line">line 3 of code</span><br></pre></td></tr></table></figure>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">该种代码行的格式：</span><br><span class="line"><span class="code">`3个反引号`</span></span><br><span class="line">该段开始为代码行</span><br><span class="line"><span class="code">`3个反引号`</span></span><br><span class="line">演示如下：</span><br><span class="line"></span><br><span class="line"><span class="code">```</span></span><br><span class="line"><span class="code">line 1 of code</span></span><br><span class="line"><span class="code">line 2 of code</span></span><br><span class="line"><span class="code">line 3 of code</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure>
<h5 id="代码语法高亮"><a class="header-anchor" href="#代码语法高亮">.</a>代码语法高亮</h5>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">该种代码行的格式：</span><br><span class="line"><span class="string">`3个反引号`</span> <span class="string">`所使用的编程语言`</span></span><br><span class="line">该段开始为代码行</span><br><span class="line"><span class="string">`3个反引号`</span></span><br><span class="line"></span><br><span class="line">演示如下：</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> foo = <span class="keyword">function</span> (<span class="params">bar</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> bar++;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">foo</span>(<span class="number">5</span>));</span><br></pre></td></tr></table></figure>
<h2 id="链接"><a class="header-anchor" href="#链接">.</a>链接</h2>
<p>这是一个链接 <a href="https://www.runoob.com">菜鸟教程</a></p>
<p>或者 <a href="https://www.runoob.com">https://www.runoob.com</a></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一个链接 [<span class="string">菜鸟教程</span>](<span class="link">https://www.runoob.com</span>)</span><br><span class="line"></span><br><span class="line"><span class="language-xml">&lt;https://www.runoob.com&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="高级链接"><a class="header-anchor" href="#高级链接">.</a>高级链接</h3>
<p>链接也可以用变量来代替，文档末尾附带变量地址：<br />
这个链接用 1 作为网址变量 <a href="http://www.google.com/">Google</a><br />
这个链接用 runoob 作为网址变量 <a href="http://www.runoob.com/">Runoob</a><br />
然后在文档的结尾为变量赋值（网址）</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">Google</span>][<span class="symbol">1</span>]</span><br><span class="line">[<span class="string">Runoob</span>][<span class="symbol">2</span>]  </span><br><span class="line">[<span class="symbol">1</span>]: <span class="link">http://www.google.com/  </span></span><br><span class="line">[<span class="symbol">2</span>]: <span class="link">http://www.runoob.com/</span></span><br></pre></td></tr></table></figure>
<h2 id="图片"><a class="header-anchor" href="#图片">.</a>图片</h2>
<p>语法格式如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">图片名称</span>](<span class="link">图片地址</span>)</span><br><span class="line">![<span class="string">RUNOOB 图标</span>](<span class="link">http://static.runoob.com/images/runoob-logo.png</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">图片名称</span>](<span class="link">图片地址 &quot;可选标题&quot;</span>)  </span><br><span class="line">![<span class="string">RUNOOB 图标</span>](<span class="link">http://static.runoob.com/images/runoob-logo.png &quot;RUNOOB&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://static.runoob.com/images/runoob-logo.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>使用实例：<br />
<img data-src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标" /></p>
<p><img data-src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标" title="RUNOOB" /><br />
当然，你也可以像网址那样对图片网址使用<strong>变量</strong></p>
<p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用<strong>HTML</strong>的 <img> 标签。<br />
<img data-src="http://static.runoob.com/images/runoob-logo.png" width="50%"></p>
<h2 id="表格"><a class="header-anchor" href="#表格">.</a>表格</h2>
<p>使用 <code>|</code> 来分隔不同的单元格，使用 <code>-</code> 来分隔表头和其他行。</p>
<table>
<thead>
<tr>
<th>表头</th>
<th>表头</th>
</tr>
</thead>
<tbody>
<tr>
<td>单元格</td>
<td>单元格</td>
</tr>
<tr>
<td>单元格</td>
<td>单元格</td>
</tr>
</tbody>
</table>
<p>语法格式如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure>
<h4 id="对齐方式"><a class="header-anchor" href="#对齐方式">.</a>对齐方式</h4>
<p>我们可以设置表格的对齐方式：<br />
–: 	设置内容和标题栏居右对齐。<br />
:-- 	设置内容和标题栏居左对齐。<br />
:–: 	设置内容和标题栏居中对齐。<br />
实例如下：</p>
<table>
<thead>
<tr>
<th style="text-align:left">左对齐</th>
<th style="text-align:right">右对齐</th>
<th style="text-align:center">居中对齐</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">单元格</td>
<td style="text-align:right">单元格</td>
<td style="text-align:center">单元格</td>
</tr>
<tr>
<td style="text-align:left">单元格</td>
<td style="text-align:right">单元格</td>
<td style="text-align:center">单元格</td>
</tr>
</tbody>
</table>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 左对齐 | 居中对齐 | 右对齐 |</span><br><span class="line">| :----- | :----: | ----:  |</span><br><span class="line">| 单元格 | 单元格 | 单元格   |</span><br><span class="line">| 单元格 | 单元格 | 单元格   |</span><br></pre></td></tr></table></figure>
<h2 id="支持的-HTML-元素"><a class="header-anchor" href="#支持的-HTML-元素">.</a>支持的 HTML 元素</h2>
<p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p>
<p>目前支持的 HTML 元素有：&lt;kbd&gt;\ &lt;b&gt;\ &lt;i&gt;\ &lt;em&gt;\ &lt;sup&gt;\ &lt;sub&gt;\ &lt;br&gt;\等 ，如：</p>
<p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">使用 <span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Ctrl<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span>+<span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Alt<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span>+<span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Del<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> 重启电脑</span><br></pre></td></tr></table></figure>
<h2 id="转义"><a class="header-anchor" href="#转义">.</a>转义</h2>
<p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符（\），Markdown 使用反斜杠转义特殊字符：<br />
<strong>文本加粗</strong><br />
** 正常显示星号 **</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**文本加粗**</span> </span><br><span class="line">\<span class="emphasis">*\*</span> 正常显示星号 \<span class="emphasis">*\*</span></span><br></pre></td></tr></table></figure>
<p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>
<p>\   反斜线<br />
`   反引号<br />
*   星号<br />
_   下划线<br />
{}  花括号<br />
[]  方括号<br />
()  小括号<br />
#井字号<br />
+   加号<br />
-   减号<br />
.   英文句点<br />
!   感叹号</p>
<h2 id="公式"><a class="header-anchor" href="#公式">.</a>公式</h2>
<p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：<br />
$$<br />
\int \frac{1}{\sqrt{x^{2} \pm a^{2}}} d x=\ln |x+\sqrt{x^{2} \pm a^{2}}|+C<br />
$$</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>在文章末尾对特定名词进行解释说明 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>语法</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>FTP服务器搭建</title>
    <url>/2019/12/FTP%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="什么是FTP服务器"><a class="header-anchor" href="#什么是FTP服务器">.</a>什么是FTP服务器</h2>
<p>FTP服务器(File Transfer Protocol Server)是在互联网上提供文件存储和访问服务的计算机，它们依照FTP协议提供服务。 FTP是File Transfer Protocol(文件传输协议)。顾名思义，就是专门用来传输文件的协议。简单地说，支持FTP协议的服务器就是FTP服务器。</p>
<span id="more"></span>
<h3 id="软件种类"><a class="header-anchor" href="#软件种类">.</a>软件种类</h3>
<ol>
<li>Server-U</li>
<li>FileZilla</li>
<li>VsFTP</li>
<li>IIS FTP</li>
</ol>
<h3 id="工作模式"><a class="header-anchor" href="#工作模式">.</a>工作模式</h3>
<p>FTP是仅基于TCP的服务，不支持UDP。与众不同的是FTP使用2个端口，一个数据端口和一个命令端口(也可叫做控制端口)。通常来说这两个端口是21(命令端口)和20(数据端口)。但FTP 工作方式的不同，数据端口并不总是20。这就是主动与被动FTP的最大不同之处。主要有两种工作模式:</p>
<ol>
<li>
<p>主动模式(<strong>PORT</strong>)<br />
主动模式下，客户端随机打开一个大于1024 的端口向服务器的命令端口 P，即 21 端口，发起连接，同时开放N +1 端口监听，并向服务器发出 “port N+1” 命令，由服务器从它自己的数据端口 (20) 主动连接到客户端指定的数据端口 (N+1)。<br />
FTP 的客户端只是告诉服务器自己的端口号，让服务器来连接客户端指定的端口。对于客户端的防火墙来说，这是从外部到内部的连接，可能会被阻塞。</p>
</li>
<li>
<p>被动模式(<strong>PASV</strong>)<br />
为了解决服务器发起到客户的连接问题，有了另一种 FTP 连接方式，即被动方式。命令连接和数据连接都由客户端发起，这样就解决了从服务器到客户端的数据端口的连接被防火墙过滤的问题。<br />
被动模式下，当开启一个 FTP 连接时，客户端打开两个任意的本地端口 (N &gt; 1024 和 N+1) 。</p>
</li>
</ol>
<h3 id="总结"><a class="header-anchor" href="#总结">.</a>总结</h3>
<p>在主动模式下:FTP服务器的控制端口是21，数据端口是20，所以在做静态映射的时候只需要开放21端口即可，他会用20端口和客户端主动的发起连接。</p>
<p>在被动模式下:FTP服务器的控制端口是21，数据端口是随机的，且是客户端去连接对应的数据端口，所以在做静态的映射话只开放21端口是不可以的。此时需要做DMZ。</p>
<h2 id="本地FTP服务器搭建（简易版）"><a class="header-anchor" href="#本地FTP服务器搭建（简易版）">.</a>本地FTP服务器搭建（简易版）</h2>
<p>参考资料：<a href="https://www.cnblogs.com/popfisher/p/7992036.html">https://www.cnblogs.com/popfisher/p/7992036.html</a></p>
<h3 id="第一步：配置IIS-Web服务器"><a class="header-anchor" href="#第一步：配置IIS-Web服务器">.</a>第一步：配置IIS Web服务器</h3>
<ul>
<li>
<p>1.1 控制面板中找到“程序”并打开</p>
</li>
<li>
<p>1.2 “程序”界面找到“启用或关闭Windows功能”并打开</p>
<blockquote>
<p>上面两步也可以简化为一步：按【Win + R】快捷键打开运行对话框，输入“optionalfeatures”后，按回车键</p>
</blockquote>
</li>
<li>
<p>1.3 从“启用或关闭Windows功能”弹窗中找到Internet Information Services(或者中文版Internet信息服务)并打开</p>
</li>
<li>
<p>1.4 配置IIS并点击确定<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/win-IIS.png?x-oss-process=style/yunying61" alt="win功能中配置IIS" /></p>
</li>
</ul>
<h3 id="第二步：配置IIS-Web站点"><a class="header-anchor" href="#第二步：配置IIS-Web站点">.</a>第二步：配置IIS Web站点</h3>
<ul>
<li>
<p>2.1 开始菜单搜索“IIS”并点击进入IIS管理器(Internet Information Services (IIS)管理器)</p>
<blockquote>
<p>简化操作：按【Win + R】快捷键打开运行对话框，输入“inetMgr.exe”后，按回车键</p>
</blockquote>
</li>
<li>
<p>2.2 新建FTP站点</p>
<ul>
<li>2.2.1 新建FTP服务器 根目录文件夹</li>
</ul>
<blockquote>
<p>这步就是你随便找个位置新建一个文件夹，这个文件夹可以随意放置，没有特定需要，当然，尽量不要放在系统盘。</p>
</blockquote>
<ul>
<li>2.2.2 查看本机ip地址，后续访问Ftp地址需要用到（打开cmd输入ipconfig）</li>
</ul>
<blockquote>
<p>本机ip地址是IPv4 地址，当然，可能有些人的电脑连接了很多地址，那就要看你当前用的是无线局域网适配器还是以太网，以及更加细致的分类。</p>
</blockquote>
<ul>
<li>
<p>2.2.3 IIS网站管理器界面左边导航栏找到“网站”，右键弹出菜单，在弹出菜单中点击“添加FTP站点”</p>
</li>
<li>
<p>2.2.4 配置网站（网站名称：FtpSite 物理路径：E:\ftpserver）</p>
</li>
</ul>
<blockquote>
<p>这里，名称随意，物理路径就是刚才你的新建文件夹的路径。</p>
</blockquote>
<ul>
<li>2.2.5 IP 端口号 SSL设置</li>
</ul>
<blockquote>
<p>本机IP地址(从下拉菜单选择)：<s>此处是你的IP地址</s><br />
端口号是21，要不要自动启动（开机就启动）看你自己<br />
SSL设置为无SSL，除非你有SSL，并且知道怎么用了。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/IP%20%E7%AB%AF%E5%8F%A3%20SSL%E8%AE%BE%E7%BD%AE.png" alt="IP 端口 SSL设置" /></p>
</blockquote>
<ul>
<li>2.2.6 身份验证和授权信息设置</li>
</ul>
<blockquote>
<p>为了方便测试，此处身份验证先设置为匿名（以后可以更改），授权 允许所有用户，权限 读写都打勾。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83%E4%BF%A1%E6%81%AF%E8%AE%BE%E7%BD%AE.png?x-oss-process=style/yunying61" alt="身份验证和授权信息设置" /></p>
</blockquote>
</li>
</ul>
<h3 id="第三步：测试FTP站点（先在-根目录文件夹，随便放一个文件）"><a class="header-anchor" href="#第三步：测试FTP站点（先在-根目录文件夹，随便放一个文件）">.</a>第三步：测试FTP站点（先在 根目录文件夹，随便放一个文件）</h3>
<ul>
<li>
<p>3.1 浏览器或者<strong>文件管理器</strong>地址栏输入ftp地址（ftp://192.168.0.105） ，别傻傻地复制粘贴，输入你自己的IP，注意前缀<u>ftp://</u></p>
</li>
<li>
<p>3.2 IIS管理器中的FTP身份验证里面配置身份认证<br />
在FTP的管理栏中，打开FTP身份验证</p>
</li>
</ul>
<blockquote>
<p>此处根据你自己的需要进行设置，<strong>基本身份验证</strong>是根据你电脑中的用户访问的，<strong>匿名身份验证</strong>是指任何人都可以访问。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/FTP%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81.png" alt="FTP身份验证" /></p>
</blockquote>
<ul>
<li>
<p>3.3 IIS管理器中的FTP授权规则</p>
<blockquote>
<p>在FTP的管理栏中，打开FTP授权规则<br />
在右边操作栏里，<strong>添加允许规则</strong> 和 <strong>添加拒绝规则</strong>，根据自己需要，设置相应规则。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/FTP%E6%8E%88%E6%9D%83%E8%A7%84%E5%88%99%E4%B8%BE%E4%BE%8B.png?x-oss-process=style/yunying61" alt="FTP授权规则举例" /></p>
</blockquote>
</li>
<li>
<p>3.4 配置FTP站点用户名和密码</p>
<ul>
<li>3.4.1 此电脑（桌面计算机图标右键）—&gt;管理-&gt;本地用户和组-&gt;用户-&gt;新建一个用户，并设置密码<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/%E7%AE%A1%E7%90%86.png" alt="计算机管理" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/%E6%96%B0%E7%94%A8%E6%88%B7.png" alt="新用户" /></li>
</ul>
<blockquote>
<p>细心的你可能已经发现这里的账户就是我们计算机的账户，所以说访问你的FTP服务器的账号实际上是你的电脑用户账号。</p>
<p>我们使用自己登录电脑的用户名和密码来登录FTP站点，不用新建这个test用户都可以。</p>
</blockquote>
</li>
</ul>
<h3 id="结语"><a class="header-anchor" href="#结语">.</a>结语</h3>
<p>到此一个简单的FTP服务器搭建成功，同一个<strong>局域网</strong>内其他人可以访问到你的电脑了，可以相互传输文件。当然这只是局限于局域网，如果想要在任何一台联网的电脑上访问到这个FTP文件服务器，那紧接着下面的教程吧！</p>
<h2 id="FTP服务器发布至外网（Serv-u版）"><a class="header-anchor" href="#FTP服务器发布至外网（Serv-u版）">.</a>FTP服务器发布至外网（Serv-u版）</h2>
<p>参考资料：</p>
<p><a href="https://blog.csdn.net/suliang5158/article/details/79273099">https://blog.csdn.net/suliang5158/article/details/79273099</a><br />
<a href="https://jingyan.baidu.com/article/e75aca85634b68142edac6f2.html">https://jingyan.baidu.com/article/e75aca85634b68142edac6f2.html</a><br />
<a href="https://blog.csdn.net/wz947324/article/details/80063061">https://blog.csdn.net/wz947324/article/details/80063061</a><br />
<a href="https://blog.csdn.net/superdog007/article/details/48787049">https://blog.csdn.net/superdog007/article/details/48787049</a></p>
<h3 id="工具及环境："><a class="header-anchor" href="#工具及环境：">.</a>工具及环境：</h3>
<ol>
<li>
<p>系统：Windows Server2012R2</p>
</li>
<li>
<p>软件：Serv-u(MFT Server 15.1.2)</p>
<blockquote>
<p>百度云 链接: <a href="https://pan.baidu.com/s/1QrqlfzFIcP-y1YD6981CbQ">https://pan.baidu.com/s/1QrqlfzFIcP-y1YD6981CbQ</a> 提取码: kja7</p>
</blockquote>
</li>
<li>
<p>环境配置：</p>
</li>
</ol>
<ul>
<li>
<p>如果是购买阿里云的服务器的话，必须还得在阿里云后台开放指定端口！</p>
<ol>
<li>
<p>登录阿里云，知道服务器控制台页面，左侧菜单栏有个 安全组 的子菜单</p>
</li>
<li>
<p>安全组中添加两个规则：</p>
<blockquote>
<p>开放20-21端口</p>
<p>开放13001-13003端口</p>
</blockquote>
</li>
</ol>
</li>
<li>
<p>目前（2019/12/14），我在腾讯云上没遇到这个问题，是可以直接使用的。</p>
</li>
</ul>
<h3 id="Serv-U的安装与配置"><a class="header-anchor" href="#Serv-U的安装与配置">.</a>Serv-U的安装与配置</h3>
<ol>
<li>
<p>打开SU-FTP-Server-Windows-v15.1.2执行安装,选择中文（简体）<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/1.jpg" alt="安装1" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/2.jpg" alt="安装2" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/3.jpg" alt="安装3" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/4.jpg" alt="安装4" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/5.jpg" alt="安装5" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/6.jpg" alt="安装6" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/7.jpg" alt="安装7" /></p>
</li>
<li>
<p>启动Serv-U管理控制台，进行域配置<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/11.jpg?x-oss-process=style/yunying61" alt="域配置1" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/22.jpg" alt="域配置2" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/33.jpg" alt="域配置3" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/44.jpg" alt="域配置4" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/55.jpg" alt="域配置5" /></p>
</li>
</ol>
<blockquote>
<p>注意这里的IPv4地址填写你自己FTP服务器所在的内网IP</p>
</blockquote>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/66.jpg?x-oss-process=style/yunying61" alt="域配置6" /></p>
<ol start="3">
<li>
<p>使用向导创建匿名用户<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/111.jpg" alt="使用向导0" /><br />
这里点击<code>是</code>后，会跳转到使用向导创建，然后同意使用向导创建，进入下图的界面。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/1111.jpg?x-oss-process=style/yunying61" alt="使用向导1" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/2222.jpg?x-oss-process=style/yunying61" alt="使用向导2" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/3333.jpg?x-oss-process=style/yunying61" alt="使用向导3" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/4444.jpg?x-oss-process=style/yunying61" alt="使用向导4" /></p>
</li>
<li>
<p>新建域用户，添加域管理员<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/222.jpg" alt="域管理员1" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/333.jpg" alt="域管理员2" /><br />
选择域管理员用户，双击编辑该用户，进入’目录访问’标签，添加如图(域管理员3)两个路径。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/444.jpg?x-oss-process=style/yunying61" alt="域管理员3" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/a.jpg" alt="域管理员4" /><br />
同理，也可以设置匿名用户的目录访问权限</p>
</li>
<li>
<p>解决FTP服务器在浏览时出现中文乱码的问题</p>
</li>
</ol>
<blockquote>
<ol>
<li>在<strong>域</strong>下面选择“限制和设置”——“FTP设置”——“用户默认设置”中找到OPTS UTF8命令，右击禁用此命令。</li>
<li>点击下面的“全局属性”——高级选项”里，把“对所有已收发的路径和文件名使用UFT-8编码”前面的钩去掉。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/g.jpg" alt="解决中文乱码1" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/h.jpg" alt="解决中文乱码2" /><br />
这样，在上传或浏览FTP服务器时就不会出现中文乱码了。</li>
</ol>
</blockquote>
<h3 id="发布至外网（云服务器）"><a class="header-anchor" href="#发布至外网（云服务器）">.</a>发布至外网（云服务器）</h3>
<ol>
<li>配置监听器，指向公网IP<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/fb1.png?x-oss-process=style/yunying61" alt="监听器" /></li>
<li>对ftp服务器下的监听器进行修改<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/fb2.png?x-oss-process=style/yunying61" alt="监听器修改" /></li>
<li>设置PASV端口范围（就是服务器向外发送数据用端口）<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/fb3.png?x-oss-process=style/yunying61" alt="配置端口" /></li>
</ol>
<blockquote>
<p>到这里，应该是可以让你在其他电脑上访问你搭建的FTP服务器了，访问路径是ftp://<s>此处填写你的公网IP</s></p>
</blockquote>
<h3 id="FTP绑定域名"><a class="header-anchor" href="#FTP绑定域名">.</a>FTP绑定域名</h3>
<p><strong>添加域名解析</strong><br />
进入你购买域名的服务商控制台，在域名管理中添加一个域名解析。选择A记录，填写二级域名前缀，记录值为你的公网ip。<br />
然后在ftp服务器空间后台绑定这个域名，这样的话等域名解析生效了，那么就可以用域名访问ftp服务器以及里面的内容了。<br />
访问地址为：ftp://<s>此处填写你的域名</s></p>
<p>有可能出现访问不到的情况，可能是你的云服务器还没备案，先去备案吧。</p>
<h2 id="总结-2"><a class="header-anchor" href="#总结-2">.</a>总结</h2>
<ol>
<li>
<p>PASV端口范围<br />
被动模式（PASV）下，有数据要传输时，服务器会打开一个数据端口（并处于监听状态），然后告知客户端，客户端连接这个数据端口发送数据。但是数据端口是随机的，那么服务器该如何将这些随机数据端口映射到公网的路由器上呢？总不能让内部网的一台机器完全暴露到公网上吧，虽然确实有这样的方案（称之为DMZ主机），但这绝对是最愚蠢的选择。<br />
虽然数据端口是随机的，但Serv-U可以指定随机的范围。打开Serv-U管理控制台 &gt; 管理服务器 &gt; 服务器限制和设置 &gt; 服务器设置 。在“设置”选项卡里找到“PASV端口范围”，就是上面的配置端口那张图。只需要把这些指定的端口映射出去就可以了。</p>
</li>
<li>
<p>PASV IP地址<br />
<u>这是全文中想要发布至外网的关键所在。</u>打开Serv-U管理控制台 &gt; 你自定义的域名 &gt; 域详细信息 &gt; 监听器 &gt; 编辑 ，在PASV IP地址或域名中设置公网IP即可。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>网络</category>
        <category>软件</category>
        <category>服务器</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>FTP</tag>
        <tag>服务器</tag>
        <tag>文件服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言的笔记</title>
    <url>/2019/12/C-note/</url>
    <content><![CDATA[<h1 id="C语言-（Windows）环境配置"><a class="header-anchor" href="#C语言-（Windows）环境配置">.</a>C语言 （Windows）环境配置</h1>
<h2 id="代码编辑器"><a class="header-anchor" href="#代码编辑器">.</a>代码编辑器</h2>
<ul>
<li>
<p>首推<abbr title="Visual Studio Code"><b>VS Code</b></abbr>,这是一款由微软开发的免费开源的现代化轻量级代码编辑器，支持几乎所有主流的编程语言的开发、语法高亮、智能代码补全、自定义热键、括号匹配、代码片段、代码对比 Diff、GIT 等特性，支持插件扩展，并针对网页开发和云端应用开发做了优化。软件跨平台支持 Win、Mac 以及 Linux，运行流畅，软件小巧精致。</p>
<blockquote>
<p>安装地址：<a href="https://code.visualstudio.com/Download">VS Code官网下载</a><br />
百度云（版本：win64位-1.40.2）链接: <a href="https://pan.baidu.com/s/1lkAnve07Zk0pDGXMtJ8HSw">https://pan.baidu.com/s/1lkAnve07Zk0pDGXMtJ8HSw</a> 提取码: rh99</p>
</blockquote>
</li>
<li>
<p>其次就是学生党们可能还在用的<strong>Visual C++ 6.0</strong></p>
<span id="more"></span>
<blockquote>
<p>百度云 链接: <a href="https://pan.baidu.com/s/10-YF4j3q5-1ElOBiKOM-tg">https://pan.baidu.com/s/10-YF4j3q5-1ElOBiKOM-tg</a> 提取码: rdqq</p>
</blockquote>
</li>
<li>
<p>GCC的话。。。有点麻烦不推荐，为了在 Windows 上安装 GCC，您需要安装 MinGW。为了安装 MinGW，请访问 MinGW 的主页 <a href="https://www.mingw.org">https://www.mingw.org</a>，进入 MinGW 下载页面，下载最新版本的 MinGW 安装程序。如果想弄的话下面这个链接</p>
<blockquote><p>windows下安装MinGW及C++的环境配置</p>
<footer><strong>啊sir_,</strong><cite><a href="https://blog.csdn.net/u013171283/article/details/80898442">地址</a></cite></footer></blockquote>
</li>
</ul>
<h1 id="C-程序结构"><a class="header-anchor" href="#C-程序结构">.</a>C 程序结构</h1>
<p>其实刚学C语言的时候，不要觉得这串代码很奇怪，那串代码也很奇怪。每当遇到一个陌生代码的时候，我会先假设它有一个特殊用途，然后忽略掉它的陌生感带来的恐惧。随着学习的深入，你迟早会学到这个曾经陌生的代码的用处。</p>
<ol>
<li>首先先了解以下C程序的结构</li>
</ol>
<ul>
<li>C 程序主要包括以下部分：</li>
<li>预处理器指令</li>
<li>函数</li>
<li>变量</li>
<li>语句 &amp; 表达式</li>
<li>注释（这个看你需不需要注释）</li>
</ul>
<ol start="2">
<li>再看一下一个简单的C程序长什么样</li>
</ol>
  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>它的作用很简单，就是在屏幕上输出Hello, World!</p>
<p>由于过于简单吗，我就不贴图片了（贴图片都更复杂）。</p>
<ol start="3">
<li>接下来我讲解一下上面这段程序：
<ul>
<li>程序的第一行 #include &lt;stdio.h&gt; 是预处理器指令，告诉 C 编译器在实际编译之前要包含 stdio.h 文件。</li>
<li>void main() 是主函数，程序从这里开始执行。</li>
<li>printf(“…”) 是 C 中另一个可用的函数（它被包含在stdio.h 文件），会在屏幕上显示消息 “Hello, World!”。</li>
</ul>
</li>
</ol>
<h1 id="C-基本语法"><a class="header-anchor" href="#C-基本语法">.</a>C 基本语法</h1>
<h2 id="C-的令牌（Tokens）"><a class="header-anchor" href="#C-的令牌（Tokens）">.</a>C 的令牌（Tokens）</h2>
<p>C 程序由各种令牌组成，令牌可以是关键字、标识符、常量、字符串值，或者是一个符号。例如，下面的 C 语句包括五个令牌：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello, World! \n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>这五个令牌分别是：</p>
<pre><code>printf
(
&quot;Hello, World! \n&quot;
)
;
</code></pre>
<h2 id="分号-😉"><a class="header-anchor" href="#分号-😉">.</a>分号(😉</h2>
<p>在 C 程序中，分号是语句结束符。也就是说，每个语句必须以分号结束。它表明一个逻辑实体的结束。(在某些函数运用中要特别注意，如:if函数、for循环函数…)</p>
<h2 id="注释"><a class="header-anchor" href="#注释">.</a>注释</h2>
<p>注释在某些方面看来，还是很重要的。当你共享代码时，方便别人阅读您的代码。<br />
C 语言有两种注释方式：<br />
1.单行注释</p>
<pre><code>// 单行注释，双左斜杠 后全部为注释。
</code></pre>
<p>以 // 开始的单行注释，这种注释可以单独占一行。</p>
<p>2.多功能注释</p>
<pre><code>/* 单行注释 */
/* 
多行注释
多行注释
多行注释
*/
</code></pre>
<p>/* */ 这种格式的注释可以单行或多行。<br />
您<strong>不能在注释内嵌套注释</strong>，注释也不能出现在字符串或字符值中。<br />
如：</p>
<pre><code>printf(&quot;//how do you do!\n&quot;);
</code></pre>
<p>或</p>
<pre><code>printf(&quot;/*how do you do!*/\n);
</code></pre>
<p>输出分别是：//how do you do！和 /*how do you do!*/</p>
<h2 id="标识符"><a class="header-anchor" href="#标识符">.</a>标识符</h2>
<p><strong>标识符</strong>：在编程语言中，标识符是用户编程时使用的名字，变量、常量、函数、语句块都有名字。是用来标识某个实体的一个符号，是对变量名、函数名、标号和其他各种用户定义的对象命名。</p>
<blockquote>
<p>C语言中标识符的命名规范：</p>
</blockquote>
<ol>
<li>标识符由字母、数字、下划线组成，并且首字母不能是数字。</li>
<li>不能把C的关键字作为用户的标识符，例如：if、for、while等。（注：标识符不能和C语言的关键字相同，也不能和用户自定义的函数或C语言库函数同名）</li>
<li>标识符长度是由机器上的编译系统决定的，一般的限制为8字符，(注：8字符长度限制是C89标准，C99标准已经扩充长度，其实大部分工业标准都更长)。</li>
<li>标识符对大小写敏感，即严格区分大小写。一般对变量名用小写，符号常量命名用大写。（注：C语言中字母是区分大小写的，因此score、Score、SCORE分别代表三个不同的标识符）</li>
<li>标识符命名应做到&quot;见名知意&quot;，例如，长度（外语：length），求和、总计（外语：sum），圆周率（外语：pi）</li>
</ol>
<p>C 标识符是用来标识变量、函数，或任何其他用户自定义项目的名称。一个标识符以字母 A-Z 或 a-z 或<code>下划线 _ </code>开始，后跟零个或多个字母、下划线和数字（0-9）。<br />
C 标识符内不允许出现标点字符，比如 @、$ 和 %。C 是区分大小写的编程语言。因此，在 C 中，Manpower 和 manpower 是两个不同的标识符。下面列出几个有效的标识符：</p>
<table>
<thead>
<tr>
<th style="text-align:center">1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">mohd</td>
<td>zara</td>
<td>abc</td>
<td>move_name</td>
<td>a_123</td>
</tr>
<tr>
<td style="text-align:center">myname50</td>
<td>_temp</td>
<td>j</td>
<td>a23b9</td>
<td>retVal</td>
</tr>
</tbody>
</table>
<h2 id="关键字"><a class="header-anchor" href="#关键字">.</a>关键字</h2>
<p>下表列出了 C 中的保留字。这些保留字不能作为常量名、变量名或其他标识符名称。</p>
<pre>
<b>关键字</b>	 	说明
auto		声明自动变量
break		跳出当前循环
case		开关语句分支
char		声明字符型变量或函数返回值类型
const		声明只读变量
continue	结束当前循环，开始下一轮循环
default		开关语句中的"其它"分支
do			循环语句的循环体
double		声明双精度浮点型变量或函数返回值类型
else		条件语句否定分支（与 if 连用）
enum		声明枚举类型
extern		声明变量或函数是在其它文件或本文件的其他位置定义
float		声明浮点型变量或函数返回值类型
for			一种循环语句
goto		无条件跳转语句
if			条件语句
int			声明整型变量或函数
long		声明长整型变量或函数返回值类型
register	声明寄存器变量
return		子程序返回语句（可以带参数，也可不带参数）
short		声明短整型变量或函数
signed		声明有符号类型变量或函数
sizeof		计算数据类型或变量长度（即所占字节数）
static		声明静态变量
struct		声明结构体类型
switch		用于开关语句
typedef		用以给数据类型取别名
unsigned	声明无符号类型变量或函数
union		声明共用体类型
void		声明函数无返回值或无参数，声明无类型指针
volatile	说明变量在程序执行中可被隐含地改变
while		循环语句的循环条件
**C99 		新增关键字**
_Bool	
_Complex	
_Imaginary	
inline	
restrict
**C11 新增关键字**
_Alignas	
_Alignof	
_Atomic	
_Generic	
_Noreturn
_Static_assert	_Thread_local    
</pre>
<h2 id="C-中的空格"><a class="header-anchor" href="#C-中的空格">.</a>C 中的空格</h2>
<p>只包含空格的行，被称为空白行，可能带有注释，C 编译器会完全忽略它。<br />
在 C 中，空格用于描述空白符、制表符、换行符和注释。空格分隔语句的各个部分，让编译器能识别语句中的某个元素（比如 int）在哪里结束，下一个元素在哪里开始。因此，在下面的语句中：</p>
<pre><code>int age;
</code></pre>
<p>在这里，int 和 age 之间必须至少有一个空格字符（通常是一个空白符），这样编译器才能够区分它们。另一方面，在下面的语句中：</p>
<pre><code>fruit = apples + oranges;   // 获取水果的总数
</code></pre>
<p>fruit 和 =，或者 = 和 apples 之间的空格字符不是必需的，但是为了增强可读性，您可以根据需要适当增加一些空格。</p>
<h1 id="C-函数"><a class="header-anchor" href="#C-函数">.</a>C 函数</h1>
<p>准确的说，函数这个名称不太准确，容易误导人。C/C++里的函数应该被叫做__“子程序”__，是一个独立的程序段，可以被重复调用用来完成类似的功能</p>
<p>这样的“子程序”很多情况下是用来__提供一个值__的，这就是通常的函数，这个值的类型必须明确，就是返回值的类型。</p>
<p>但有的子程序不是用来提供一个值，可以仅仅是执行某些__特定的操作__，那么，定义为空类型是__安全的__，表示“不允许该子程序返回值”。这种子程序只能通过独立的语句调用，不能用在表达式里。</p>
<p>之所以需要空类型，是因为，函数的默认返回值类型是int，如果在函数定义时未带返回类型说明，则默认为int；即使函数中没有return语句，编译器按照函数返回值的原理，会返回一个__不确定的值__。如果将这样的函数错用在表达式里，语法上没错，但会带来很难察觉的逻辑错误。<br />
而将空类型函数用在表达式里是一个编译错误。</p>
<h1 id="为什么C语言程序运行闪一下就没有了-解决方法"><a class="header-anchor" href="#为什么C语言程序运行闪一下就没有了-解决方法">.</a>为什么C语言程序运行闪一下就没有了(解决方法)</h1>
<ol>
<li>system(“pause”)</li>
<li>getchar()</li>
<li>getch()</li>
</ol>
<h2 id="C语言中system-“pause”"><a class="header-anchor" href="#C语言中system-“pause”">.</a>C语言中system(“pause”)</h2>
<p>如果想要使用system(“pause”)，就要先包含该函数的头文件stdlib.h(#include &lt;stdlib.h&gt;)<br />
system就是调用从程序中调用系统命令(和shell命令)。<br />
system(“pause”)就是从程序里调用“pause”命令;<br />
而“pause”这个系统命令的功能很简单，意思是停下这个程序，然后等待按下一个按键后退出程序。会在命令行上输出一行类似于“Press any key to exit”的字，等待用户按一个键，然后返回。</p>
<h2 id="getchar"><a class="header-anchor" href="#getchar">.</a>getchar()</h2>
<p>getchar()函数的作用是从计算机终端(一般为键盘)输入一个字符。getchar()函数只能接收一个字符，其函数值就是从输入设备得到的字符。</p>
<h2 id="getch-函数"><a class="header-anchor" href="#getch-函数">.</a>getch()函数</h2>
<p>如果想要使用getch(); ，就要先包含该函数的头文件conio.h(#include &lt;conio.h&gt;)</p>
<p>getch()是编程中所用的函数，这个函数是一个不回显函数，当用户按下某个字符时，函数自动读取，无需按回车，有的C语言命令行程序会用到此函数做游戏，但是这个函数并非标准函数，要注意移植性！</p>
<h2 id="getchar-与getch-的区别："><a class="header-anchor" href="#getchar-与getch-的区别：">.</a>getchar()与getch()的区别：</h2>
<p>用getchar()时，在键盘上按一个字符后，要按回车才能读取进去；</p>
<p>用getch()时，要包含头文件&lt;conio.h&gt;，在键盘上按一个字符马上就被读取进去，不用按回车，因此可以作为“按任意键继续”的执行语句。</p>
<p>getch返回值是用户输入的ASCII码,出错返回-1，输入的字符不会回显在屏幕上。</p>
<p>getch函数常用于程序调试中，在调试时，在关键位置显示有关的结果以待查看，然后用getch函数暂停程序运行，当按任意键后程序继续运行。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>C</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下mklink使用</title>
    <url>/2020/01/Windows%E4%B8%8Bmklink%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="mklink命令"><a class="header-anchor" href="#mklink命令">.</a>mklink命令</h1>
<p>mklink是windows系统下创建符号链接和硬链接的命令工具，它是一个很好的解决文件系统问题的工具。使用它需要<strong>管理员权限</strong>。</p>
<p>首先，先来介绍下mklink这个命令：</p>
<pre><code>mklink [[/D] | [/H] | [/J]] Link Target
/D      创建目录符号链接。默认为文件符号链接。
/H      创建硬链接而非符号链接。
/J      创建目录联接。
Link    指定新的符号链接名称。
Target  指定新链接引用的路径(相对或绝对)。
</code></pre>
<span id="more"></span>
<blockquote>
<p>注意：因为powershell不支持mklink命令，所以要在前面加cmd /c表示用cmd来运行该命令，路径注意引号，可以是相对路径也可以是绝对路径。</p>
</blockquote>
<h2 id="符号链接（Symbolic-link）"><a class="header-anchor" href="#符号链接（Symbolic-link）">.</a>符号链接（Symbolic link）</h2>
<p>对文件创建符号链接</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mklink &quot;link&quot; &quot;target&quot;</span><br></pre></td></tr></table></figure>
<p>对文件夹创建符号链接</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mklink /D &quot;link&quot; &quot;target&quot;</span><br></pre></td></tr></table></figure>
<p>符号链接连接远程的路径</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mklink /D &quot;D:\link&quot; &quot;\\<span class="number">123</span>.<span class="number">123</span>.<span class="number">0</span>.<span class="number">1</span>\D$\target&quot;</span><br></pre></td></tr></table></figure>
<p><strong>特点</strong></p>
<ul>
<li>创建链接后的图标和快捷方式很像, 都有一个箭头的标志</li>
<li>在系统中不占用空间</li>
<li>在文件系统中不是一个单独的文件</li>
<li>如果源文件被删除了，链接就没用了</li>
<li>移除源文件不会影响符号链接</li>
<li>移除链接文件也不会影响源文件</li>
<li>win10_x64_build10565上测试不可以右键修改图标和设置管理员运行</li>
<li>文件大小为0字节和不占用空间</li>
<li>文件属性的创建时间和修改时间都是软链接创建和修改时的时间</li>
<li>文件类型是.SYMLINK</li>
<li>可以在cmd下运行软链接(假如链接的是程序, 且运行命令是XXX即可)(win10_x64_build10565上测试通过)</li>
</ul>
<p>符号链接是在文件系统上实现的链接，对操作系统上大多数软件来说是透明的，也就是说，当软件访问符号链接时，其实际上是在访问该符号链接所指向的文件夹。<br />
创建的符号链接显示的类型是文件夹，实际上相当于是指向<code>其他盘</code>真实的文件夹路径的<code>快捷方式</code>，符号链接本身不占空间。路径映射的过程对程序来说是透明的，程序对这个符号链接的操作实际上是<code>对文件夹的操作</code>，因此程序可以正常运行，所以这和普通的创建快捷方式是不一样的操作。此外，符号链接和目录联接是有快捷方式的那个箭头的。</p>
<blockquote>
<p>注意：软链接的创建需要<code>管理员权限</code>，确保cmd是管理员模式。对于文件夹的软链接创建，一定要加上&quot;/D&quot;。通过<code>相对路径</code>创建的软链接在移动后无法使用，<code>绝对路径</code>创建的移动后不影响使用。符号链接可以直接右键删除，或通过<strong>rmdir</strong>命令删除，不会影响原文件，但<strong>del</strong>命令则<strong>会把目标文件删除</strong>。</p>
</blockquote>
<h2 id="硬链接（Hard-link）"><a class="header-anchor" href="#硬链接（Hard-link）">.</a>硬链接（Hard link）</h2>
<p>对文件创建硬链接</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mklink /H &quot;link&quot; &quot;target&quot;</span><br></pre></td></tr></table></figure>
<ul>
<li>硬链接只能用于文件，不能对文件夹创建硬链接，不然会提示“拒绝访问”</li>
<li>在系统中占用的空间与源文件相同，但在系统中引用的是相同的对象（不是拷贝）</li>
<li>图标和创建快捷方式的图标不同(没有快捷方式的小箭头)</li>
<li>移除源文件不会影响硬链接</li>
<li>移除硬链接不会影响源文件</li>
<li>如果源文件被删除，它的内容依然通过硬链接存在</li>
<li>硬链接文件的任何更改都会影响到源文件</li>
<li>文件大小, 占用空间, 创建和修改时间跟原原文件一样</li>
<li>可以在cmd下运行硬连接(假如链接的是程序)</li>
</ul>
<p>通过上述命令就可以创建从“link”路径到“target”路径的硬链接，例如：在D盘根目录下新建文本“A.txt”，然后输入命令如下即可创建到&quot;A.txt&quot;的硬链接&quot;B.txt&quot;<br />
在文件资源管理器上看，“B.txt”与“A.txt”占用同样大小的空间，其实这个数据并不用去理会，硬链接相当于给文件的数据多创建了一个“入口”，“A.txt”,“B.txt”指向的是硬盘中的同一块区域，因此这两个文件的内容是完全一样的，编辑任何一个文件都会影响到另一文件，当删除其中一个文件，只是删除这个文件其中一个“入口”，要两个文件都删除，文件系统才会标志这块硬盘区域上的文件被删除。</p>
<h2 id="目录联接-创建软链接首选"><a class="header-anchor" href="#目录联接-创建软链接首选">.</a>目录联接(创建软链接首选)</h2>
<p>对文件夹创建目录联接</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mklink /J &quot;link&quot; &quot;target&quot;</span><br></pre></td></tr></table></figure>
<p>“目录联接”只能应用于文件夹，不可用于文件。根据网上能找到的资料显示，对文件夹创建的“目录联接”与“符号链接”并没有区别，一样可以实现软件数据的迁移。不过貌似这两者对剪切操作有不一样的表现。<br />
例如，我现在在D盘创建“文件夹A”,在“文件夹A”里新建A.txt，然后在D盘根目录创建一个“目录联接B”指向这个“文件夹A”，通过这个“目录联接B”，我可以访问到A.txt，接着我对“目录联接B”进行剪切操作，剪切到C盘，发现“文件夹A”和“目录联接B”还是在D盘，但是打开却发现A.txt不见了，被剪切到了C盘的“文件夹B”中，也就是说对“目录联接”的剪切操作会<code>影响原来的文件</code>。<br />
对于这其中的机制，很神奇。。。感觉“目录联接”跟“符号链接”有点像，给文件夹里的内容提供一个“入口”即所谓的“联接点”，剪切操作时会通过这个“联接点”把内容剪切出来，原来的目录和“联接点”虽然没有变化，但里面的内容被剪切出来了。<br />
而“符号链接”的剪切操作<code>仅仅是对这个“符号链接”的剪切</code>，并不会透过这个“符号链接”把其<code>内容剪切掉</code>。</p>
<h2 id="mklink-硬链接和符号链接的区别"><a class="header-anchor" href="#mklink-硬链接和符号链接的区别">.</a>mklink 硬链接和符号链接的区别</h2>
<p>硬链接只能用于文件，不能用于文件夹，而且硬链接和目标文件必须在同一个分区或者卷中。硬链接的目的是<code>为了给文件创建多个目录路径(多个入口)</code>，而不像符号链接是为了指向某个已有的文件。</p>
<p>假设要给Target. txt文件创建一个硬链接，系统下载可以执行以下命令：</p>
<p>mklink/H Link.txt Target.txt</p>
<p>和符号链接一样，<code>硬链接中所做的任何修改，都会自动应用到目标文件上</code>。但是硬链接具有以下一些不同的地方。</p>
<p>(1)硬链接必须引用同一个分区或者卷中的文件，而符号链接可以指向不同分区或者共享文件夹上的文件或者文件夹。</p>
<p>(2) 硬链接只能引用文件，而符号链接可以引用文件或者文件夹。</p>
<p>(3)Windows会自动维护硬链接，即使把硬链接复制到其他文件夹，硬链接和目标都可以继续访问。</p>
<p>(4)删除目标文件，硬链接可以继续保留。只有把目标文件和所有的硬链接都删除，才能把该文件彻底删除。</p>
<p>(5)如果win7把符号链接的目标文件删除，然后用一个同名文件替换，则符号链接会指向新的目标文件；而把硬链接的目标文件删除’再用同名文件替换，则硬链接还是会继续引用原始文件。</p>
<p>(6)也就是说，硬链接和目标文件的地位相等。事实上，原始的目标文件本身也相当于硬链接，新建硬链接，只是相当于增加一个目录路後而已。</p>
<p>(7)硬链接看上去和真的文件一模一样(实际上就是真实的文件)，不像符号链接那样有一个快捷方式的小箭头，但是硬链接并不会增加磁盘空间的占用。</p>
<p>(8)对硬链接进行NTFS权限的修改，会同时影响到目标文件(因为两者等价)，而符号链接和目标文件可以设置不同的NTFS权限。</p>
<blockquote>
<p>综上，我们可以将硬链接理解成C语言中的指针、空间中的传送门，文件随着硬链接的创建，等于它有一个“固定”地址，但它对外沟通的通道有多个，只要通道还存在，该文件就不会消失。</p>
</blockquote>
<h2 id="mklink-D和-J的区别"><a class="header-anchor" href="#mklink-D和-J的区别">.</a>mklink /D和/J的区别</h2>
<p><strong>目录符号链接</strong>和<strong>目录联接</strong>的区别在于：</p>
<p>目录联接在创建时会自动引用目标目录的绝对路径，而符号链接允许相对路径的引用。</p>
<p>如分别用 mklink /D dira tdir 和 mklink /J dirb tdir 创建 dira、dirb 对相对目录的 tdir 的符号链接和目录联接，之后将 dira、dirb 移动到其它目录下，则访问 dira 时会提示“位置不可用”，访问 dirb 时仍然正常指向 tdir；</p>
<p>且win10_x64_build10565的cmd下dir命令查看会发现, dira符号链接链接到的是相对路径下的tdir文件(不管是否存在tdir文件), 且文件类型是symlink, dirb目录联接则链接到绝对(全)路径下的tdir文件, 且文件类型是junction(可能是系统自动把相对路径转换为全路径)</p>
<p>而分别用 mklink /D dira c:\demo\tdir 和 mklink /J dirb c:\demo\tdir 创建 c:\demo\tdir 的符号链接和目录联接，再将这两个目录链接移动到其它目录下，则 dira 和 dirb 均可正常指向 c:\demo\tdir；</p>
<p>由此可见当创建目录链接时对目标目录使用绝对路径，D 和 J 两个参数实现的目录链接效果是一样的；</p>
<p>英文原文：</p>
<p>MKLINK /D | /H | /J Link Target</p>
<p>/D Creates a directory symbolic link. Default is a file symbolic link. /H Creates a hard link instead of a symbolic link. /J Creates a Directory Junction.</p>
<p>/D creates a symbolic link, or a soft link.This essentially acts like a shortcut to a folder in prior versions of Windows, except you don’t have to use an actual shortcut.</p>
<p>/H creates a hard link, which points directly to the file.This option can’t be used for folders directly for some reason, you’ll have to use the next option.</p>
<p>/J creates a “Directory Junction”A Directory Junction is actually just a hard link to a directory. This is a feature that existed prior to Vista as well. If you are trying to symlink to a directory using a hard link, then you should use this option.</p>
<p>Understanding Hard vs Soft Links ==== Hard Link</p>
<p>A hard link directly points to the file, and acts to the operating system as if it is the file itself. You’ll want to use this option the majority of the time if you are trying to fake an application’s directory.</p>
<p>Soft Link</p>
<p>A soft link is essentially a shortcut to a file or folder – if you are using Windows explorer, you’ll be redirected to the directory if you double-click on a shortcut, it won’t pretend its part of the filesystem. You can still directly reference or open a file with the symlinked path, and it mostly works.</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>Windows</category>
        <category>软件</category>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>cmd</tag>
        <tag>mklink</tag>
        <tag>windows</tag>
        <tag>文件链接</tag>
      </tags>
  </entry>
  <entry>
    <title>Minecraft服务器搭建</title>
    <url>/2020/01/Minecraft%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="如何搭建一个Minecraft服务器"><a class="header-anchor" href="#如何搭建一个Minecraft服务器">.</a>如何搭建一个Minecraft服务器</h2>
<p>这是本人的开服经历，希望能帮到大家，让大家少踩坑。</p>
<ol>
<li>需要配置Java的环境。</li>
<li>下载Minecraft服务端，通过官方的服务端开服，所以搭建好的服务器是纯净版的，而且是需要正版验证的（这个可以在设置里改成不需要正版验证）。</li>
<li>配置服务器文件，将服务器的配置修改成自己需要的。</li>
<li>安装forge，将纯净服变成Mod服。</li>
<li>使用CatServer服务器核心，便捷的搭建mod服务器。</li>
<li>将服务器发布到外网，使其他人能在不同网络上连接到服务器。</li>
</ol>
<span id="more"></span>
<h3 id="配置Java的环境"><a class="header-anchor" href="#配置Java的环境">.</a>配置Java的环境</h3>
<p>这里，参考我的另一篇文章———— <a href="/2020/01/%E9%85%8D%E7%BD%AEJava%E7%8E%AF%E5%A2%83/" title="配置Java环境">配置Java环境</a></p>
<h3 id="配置Minecraft服务端"><a class="header-anchor" href="#配置Minecraft服务端">.</a>配置Minecraft服务端</h3>
<ol>
<li>
<p><strong>下载</strong><br />
可以再Mojang官网下载最新的服务端<a href="https://www.minecraft.net/en-us/download/server/">官网链接</a></p>
</li>
<li>
<p><strong>新建bat文件(方便再次运行)</strong><br />
下载完成后将其复制到一个新目录，并再新目录下新建一个bat文件，将以下命令行写入并保存</p>
</li>
</ol>
<blockquote>
<p><code>java -Xmx1024M -Xms1024M -jar server.jar nogui</code><br />
-Xmx -Xms用于指定使用内存的最大最小值(MB)，可根据实际使用情况调整，<code>server.jar</code>是你下载的服务端文件名<code>(此处稍微注意一下，文件名一致)</code>，nogui的意思是部显示java程序的GUI界面，这个可以根据自己的习惯添上。</p>
</blockquote>
<ol start="3">
<li>
<p><strong>首次启动服务端</strong><br />
双击运行bat文件，首次运行需要签署用户协议。<br />
等它代码加载停止后，先关闭服务端并前往其所在目录，我们会发现目录下已经自动生成了多个文件。</p>
</li>
<li>
<p><strong>签署协议</strong><br />
寻找一个名为&quot;eula.txt&quot;的文件，打开，在结尾把<code>eula=false</code>改成<code>eula=true</code>并保存，即成功签署用户协议。</p>
</li>
</ol>
<p>接下来不急着启动服务端，在这些文件中，我们还会看到服务器配置文件<code>server.properties</code>(这个文件，如果没有其他代码编辑器，可以用记事本打开)，可根据使用情况编辑</p>
<h4 id="配置服务器文件"><a class="header-anchor" href="#配置服务器文件">.</a>配置服务器文件</h4>
<p>这里由于篇幅略长，请转至我的另一篇文章———— <a href="/2020/01/%E9%85%8D%E7%BD%AEMinecraft%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%96%87%E4%BB%B6/" title="配置Minecraft服务端文件">配置Minecraft服务端文件</a></p>
<h3 id="安装forge"><a class="header-anchor" href="#安装forge">.</a>安装forge</h3>
<p>这里，安装的forge要对应其Minecraft Server的版本，例如，这里我上传的是<u>forge-1.12.2</u>,则它对应的是<u>server 1.12.2.jar</u>。<br />
步骤</p>
<ol>
<li>
<p>下载forge<br />
<a href="https://files.minecraftforge.net/">forge官网</a></p>
</li>
<li>
<p>安装forge</p>
<ul>
<li>
<p>先讲一下安装器版的操作(就是forge-xxx.exe的文件)<br />
按照上面<a href="#%E9%85%8D%E7%BD%AEMinecraft%E6%9C%8D%E5%8A%A1%E7%AB%AF">配置服务端</a>的操作配置好，然后打开<abbr title="就刚刚下载的那个文件，exe后缀名的那个">forgeapi程序</abbr>，选择install server（译为以服务端的形式安装），这里记得先把服务端关闭(一般来说就是那个cmd命令的那个黑框框，或者Minecraft server的服务端窗口)，接下来，点一下那那三个点(…)选择你安装服务端（有<code>server.jar</code>文件）的那个<strong>文件夹</strong>，点一下OK，就可以等它完成了，时间可能有点长，看配置和网速。</p>
<p>最后，把你那个<strong>bat文件</strong>里的<code>server.jar</code>改成<code>forge-xxx-xxx-universal.jar</code>那个文件的名称，等于以后启动的服务端就是有forge的mod服了，mod就放在服务端目录下的mods文件夹里(第一次启动了forge.jar就会自动生成)</p>
</li>
<li>
<p>接下来讲jar文件版的操作(就是forge-xxx.jar的文件)<br />
将下载好的forge放在一个目录下，新建一个txt文档，将其后缀名改为bat，右键编辑，将下面的代码输进去，保存，关闭</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@echo</span><br><span class="line">java -Xms1024M -Xmx1024M -jar 下载的jar文件名.jar</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<p>双击bat文件，运行，弹处下图<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Minecraft/forge.jpg?x-oss-process=style/yunying61" alt="forge安装" /><br />
（<s>你会发现从这开始，和上面讲安装器版很像了，好吧我就是复制粘贴上面的</s>）<br />
选择install server（译为以服务端的形式安装），这里记得先把服务端关闭(一般来说就是那个cmd命令的那个黑框框，或者Minecraft server的服务端窗口)，接下来，点一下那那三个点(…)选择你安装服务端（有<code>server.jar</code>文件)的那个<strong>文件夹</strong>，点一下OK，就可以等它完成了，时间可能有点长，看配置和网速。</p>
<p>最后，把你那个bat文件里的<code>server.jar</code>改成<code>forge-xxx-xxx-universal.jar</code>那个文件的名称，等于以后启动的服务端就是有forge的mod服了，mod就放在服务端目录下的mods文件夹里(第一次启动了forge.jar就会自动生成)<br />
<em>安装过程中会下载一些依赖库，由于某些原因可能会下载失败，多安装几次就行</em></p>
</li>
</ul>
</li>
<li>
<p>关于mod<br />
有时候mod添加上去却发现服务端报错，那是因为有些mod是不支持服务器的，所以要加在服务器上的mod，是需要mod支持服务器的。（请自行查看mod说明文件中，是否支持服务器）</p>
</li>
</ol>
<h2 id="CatServer服务器核心"><a class="header-anchor" href="#CatServer服务器核心">.</a>CatServer服务器核心</h2>
<h3 id="CatServer简介"><a class="header-anchor" href="#CatServer简介">.</a>CatServer简介</h3>
<p>catserver是一个向MC高版本MOD服提供bukkit/spigot/paper插件支持的全新核心。完善程度非常之高,已经可以投入烈度生产环境进行生产。<br />
由于sponge等新一代api，门槛过高等原因困扰了很多想要进军高版本mod的腐竹，<br />
而catserver则解决了上述问题具有简单可靠，性能强劲，方便配置等特点。<br />
同时致力于为广大服主们提供简单易上手且性能可靠的服务端核心。</p>
<h3 id="使用"><a class="header-anchor" href="#使用">.</a>使用</h3>
<blockquote>
<p>简述：将核心.jar放入服务器根目录，随后参照使用普通核心的方法用启动参数启动即可。<br />
下载地址：<a href="https://github.com/Luohuayu/CatServer/releases">https://github.com/Luohuayu/CatServer/releases</a></p>
</blockquote>
<blockquote>
<p>详述：将下载好的<code>CatServer服务器核心</code>和放在一个目录下，新建一个txt文档，将其后缀名改为bat，右键编辑，将下面的代码输进去，保存，关闭</p>
</blockquote>
<pre><code>@echo
java -Xms1024M -Xmx1024M -jar 下载的CatServerjar文件名.jar
pause
</code></pre>
<h2 id="将服务器发布到外网"><a class="header-anchor" href="#将服务器发布到外网">.</a>将服务器发布到外网</h2>
<ol>
<li>有公网IP，请使用端口映射。（希望你的上传和下载带宽足够大🙏）</li>
<li>无，请考虑内网穿透（具体怎么穿，请看他们的介绍）：
<ol>
<li><a href="https://console.hsk.oray.com/forward">花生壳</a> （1M带宽，1G流量/月）</li>
<li><a href="https://www.natfrp.com/">Sakura Frp</a> （10M带宽，签到领流量）</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>IT</category>
        <category>网络</category>
        <category>软件</category>
        <category>服务器</category>
        <category>搭建与配置</category>
        <category>Games</category>
        <category>Minecraft</category>
      </categories>
      <tags>
        <tag>服务器</tag>
        <tag>Minecraft</tag>
        <tag>我的世界</tag>
      </tags>
  </entry>
  <entry>
    <title>配置Java环境</title>
    <url>/2020/01/%E9%85%8D%E7%BD%AEJava%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h1 id="配置Java环境"><a class="header-anchor" href="#配置Java环境">.</a>配置Java环境</h1>
<h2 id="安装java和JDK"><a class="header-anchor" href="#安装java和JDK">.</a>安装java和JDK</h2>
<p>首先我们需要下载java和java的开发工具包JDK，官方下载地址：<a href="https://www.java.com/zh_CN/">java</a>和<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">jdk</a>。</p>
<blockquote>
<p>这里需要注意的一点的是，虽然我们是尽量下载最新版本，但有时候会出现某些命令不能用的情况，请使用 Java 8/JDK 8。如果你已经下载了新版 JDK，你也可以使用 <code>OpenJDK</code> <a href="https://adoptopenjdk.net/">https://adoptopenjdk.net/</a>来解决这个问题。</p>
</blockquote>
<span id="more"></span>
<h2 id="配置环境变量"><a class="header-anchor" href="#配置环境变量">.</a>配置环境变量</h2>
<p>右键&quot;此电脑&quot;(Win10)、“我的电脑”(Win7)，选择&quot;属性&quot;，在弹出的窗口中找到&quot;高级系统设置-环境变量&quot;。<br />
这里告诉你们一个快捷的方法，<code>win + R</code>打开“运行”，输入<code>SystemPropertiesAdvanced.exe</code>再按回车，直接到达<em>系统属性</em>。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.jpg?x-oss-process=style/yunying61" alt="系统属性" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/JAVA_HOME.jpg?x-oss-process=style/yunying61" alt="环境变量界面" /></p>
<p>在环境变量中的 <strong>系统变量</strong> 中设置 3 项变量，<code>JAVA_HOME</code>、<code>PATH</code>、<code>CLASSPATH</code>(大小写无所谓),若已存在则点击&quot;编辑&quot;，不存在则点击&quot;新建&quot;。</p>
<blockquote>
<p>注意：如果使用 1.5 以上版本的 JDK，不用设置 CLASSPATH 环境变量，也可以正常编译和运行 Java 程序，但尽量设置吧。</p>
</blockquote>
<p>变量 参数如下：</p>
<ul>
<li>
<p>变量名：JAVA_HOME</p>
<ul>
<li>变量值：<code>C:\Program Files (x86)\Java\jdk1.8.0_91</code><br />
请根据自己的jdk实际路径配置</li>
</ul>
</li>
<li>
<p>变量名：CLASSPATH</p>
<ul>
<li>变量值：<code>.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</code><br />
记得前面有个<code>.</code></li>
</ul>
</li>
<li>
<p>变量名：Path</p>
<ul>
<li>变量值：<code>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</code></li>
</ul>
</li>
</ul>
<blockquote>
<pre>注意：在 Windows10 中，Path 变量里是分条显示的，
我们需要将
%JAVA_HOME%\bin;
%JAVA_HOME%\jre\bin; 
分开添加，否则无法识别。</pre>
<p>如图</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/Path_JAVA_HOME.jpg?x-oss-process=style/yunying61" alt="path" /></p>
<p>当然，你可以点击右边标签中的 <code>编辑文本</code> ，并将 <code>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</code> 添加到最前面。</p>
</blockquote>
<h2 id="测试是否配置成功"><a class="header-anchor" href="#测试是否配置成功">.</a>测试是否配置成功</h2>
<ol>
<li><code>Win + R</code>，键入&quot;cmd&quot;；</li>
<li>键入命令: <code>java -version</code> 、 <code>java</code> 、 <code>javac</code> 几个命令，没有报错并出现了其他命令，说明环境变量配置成功；</li>
</ol>
<h2 id="其他信息"><a class="header-anchor" href="#其他信息">.</a>其他信息</h2>
<h3 id="环境变量的参数信息"><a class="header-anchor" href="#环境变量的参数信息">.</a>环境变量的参数信息</h3>
<p><strong>配置JAVA_HOME:</strong></p>
<p>​		一是为了方便引用，比如，JDK安装在C:\jdk1.6.0目录里，则设置JAVA_HOME为该目录路径, 那么以后要使用这个路径的时候, 只需输入%JAVA_HOME%即可, 避免每次引用都输入很长的路径串;</p>
<p>​		二则是归一原则, 当JDK路径改变的时候, 仅需更改JAVA_HOME的变量值即可, 否则,就要更改任何用绝对路径引用JDK目录的文档, 要是万一没有改全, 某个程序找不到JDK, 后果是可想而知的----系统崩溃!</p>
<p>​		三则是第三方软件会引用约定好的 JAVA_HOME 变量, 不然, 你不能正常使用该软件。</p>
<p><strong>配置 path 变量</strong><br />
path 变量使得我们能够在系统中的任何地方运行java应用程序，比如 javac、java、javah 等等,这就要找到我们安装 JDK 的目录，</p>
<p>​		假设我们的JDK安装在 C:\jdk1.6.0 目录下,那么在 C:\jdk1.6.0\bin 目录下就是我们常用的 java 应用程序,我们就需要把 C:\jdk1.6.0\bin 这个目录加到 path 环境变量里面。</p>
<p><strong>配置 classpath 变量</strong><br />
classpath 环境变量，是当我们在开发java程序时需要引用别人写好的类时，要让 java 解释器知道到哪里去找这个类。通常，sun 为我们提供了一些额外的丰富的类包，一个是 dt.jar，一个是 tools.jar，这两个 jar 包都位于 C:\jdk1.6.0\lib 目录下，所以通常我们都会把这两个 jar 包加到我们的 classpath 环境变量中，设置 classpath=<code>.;C:\jdk1.6.0\lib\tools.jar;C:\jdk1.6.0\lib\dt.jar;</code>。</p>
<p>注意在完成配置环境变量后测试JDK是否安装成功时键入命令：<code>java -version</code></p>
<h3 id="JDK-和-JRE-的区别"><a class="header-anchor" href="#JDK-和-JRE-的区别">.</a>JDK 和 JRE 的区别</h3>
<p>JRE(Java Runtime Enviroment) 是 Java 的运行环境。面向 Java 程序的使用者，而不是开发者。如果你仅下载并安装了JRE，那么你的系统只能运行 Java 程序。JRE 是运行 Java 程序所必须环境的集合，包含JVM标准实现及 Java 核心类库。它包括 Java 虚拟机、Java 平台核心类和支持文件。它不包含开发工具(编译器、调试器等)。</p>
<p>JDK(Java Development Kit) 又称 J2SDK(Java2 Software Development Kit)，是 Java 开发工具包，它提供了 Java 的开发环境(提供了编译器 javac 等工具，用于将 java 文件编译为 class 文件)和运行环境(提 供了 JVM 和 Runtime 辅助包，用于解析 class 文件使其得到运行)。如果你下载并安装了 JDK，那么你不仅可以开发 Java 程序，也同时拥有了运行 Java 程序的平台。JDK 是整个 Java 的核心，包括了Java 运行环境(JRE)，一堆 Java 工具 tools.jar 和 Java 标准类库 (rt.jar)。</p>
<h3 id="更新JDK版本的问题"><a class="header-anchor" href="#更新JDK版本的问题">.</a>更新JDK版本的问题</h3>
<p>先安装JDK1.8版本后，想要更改JDk版本，直接去修改系统变量JAVA_HOME的话会发现不起作用：原因是安装JDK1.8版本时，会在C:\ProgramData\Oracle\Java目录中生成一些配置文件，并同时将此目录写到环境变量中的Path中，所以我们应该去把系统变量Path中的C:\ProgramData\Oracle\Java\javapath删除了，这样问题就解决了！</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>Java</category>
        <category>Games</category>
        <category>Minecraft</category>
        <category>环境</category>
      </categories>
      <tags>
        <tag>Minecraft</tag>
        <tag>java</tag>
        <tag>环境</tag>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下的Nginx图片服务器搭建</title>
    <url>/2020/01/Windows%E4%B8%8B%E7%9A%84Nginx%E5%9B%BE%E7%89%87%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="Windows下的Nginx图片服务器搭建"><a class="header-anchor" href="#Windows下的Nginx图片服务器搭建">.</a>Windows下的Nginx图片服务器搭建</h1>
<p>其实现在网上的图片托管服务也是非常成熟了，本人之前也是用了一个月的七牛云的对象存储服务来进行图片托管。当然也只是用了一个月而已，因为它的测试域名只能用一个月，一个月后你就要绑定一个自己的域名。绑域名简单啊，可是七牛云坑的就是要绑一个已经备案的域名，因为本人当时域名备案受限(也是一把泪啊，当然还是鼓励大家域名备案的)，所以让七牛云进行图片托管的路也算是废了(其实七牛云还蛮好用的)。<br />
于是乎，我为了解决这个图片托管的问题，找遍了各种方法，到头来想了想，还是放自己服务器里托管更方便，所以就找到了用Nginx来搭建图片服务器。<br />
以上是我的吐槽，以及图片托管的一些经历。下面废话不多说，进入正题。</p>
<span id="more"></span>
<h2 id="Nginx"><a class="header-anchor" href="#Nginx">.</a>Nginx</h2>
<ul>
<li>Nginx是什么？<br />
Nginx是一个开源的Web服务器，同时Nginx也提供了反向代理和负载均衡的功能。<br />
Nginx通常作为负载均衡器暴露在外网接受用户请求，同时也使用其反向代理的功能，将用户的请求转发到实际提供服务的内网服务器。</li>
<li>Windows什么情况下需要Nginx？<br />
通常来说Windows下IIS就够用了，支持 .NET、ASP、PHP等等，不过如果你需要做负载均衡那你就需要Nginx，或者说你在一台服务器上，部署了Apache、IIS、Tomcat等多个Web服务器，这时候把80端口或443端口给Nginx在合适不过了。<br />
当然，作为商业公司来说，通常不会有以上情况，但是如果你是个草根站长。或者说你想把你的Windows开发机作为服务器对外提供服务，那把你的Windows装上Nginx再合适不过了。</li>
</ul>
<h2 id="简要步骤"><a class="header-anchor" href="#简要步骤">.</a>简要步骤</h2>
<ol>
<li>安装Nginx并启动</li>
<li>配置地址链接</li>
<li>然后就可以用了</li>
</ol>
<h3 id="安装Nginx并启动"><a class="header-anchor" href="#安装Nginx并启动">.</a>安装Nginx并启动</h3>
<ol>
<li>下载nginx，下载地址：<a href="http://nginx.org/">http://nginx.org/</a>，以<a href="http://nginx.org/download/nginx-1.16.1.zip">nginx-1.16.1.zip</a>为例，下载下来后，解压到如：<u>C:\nginx\nginx-1.16.1</u></li>
<li>启动nginx，双击文件夹里的nginx.exe，双击后会有一个黑色的弹窗一闪而过</li>
<li>检查nginx是否启动成功<br />
直接在浏览器地址栏输入网址 <a href="http://localhost:80">http://localhost:80</a>，回车，出现以下页面说明启动成功<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/nginx_welcome.jpg?x-oss-process=style/yunying61" alt="nginx" /><br />
也可以在cmd命令窗口输入命令 <code>tasklist /fi &quot;imagename eq nginx.exe&quot;</code> ，出现结果说明启动成功<br />
nginx的配置文件是conf目录下的nginx.conf，默认配置的nginx监听的端口为80，如果80端口被占用可以修改为未被占用的端口即可<br />
检查80端口是否被占用的命令是： <code>netstat -ano | findstr 0.0.0.0:80</code> 或 <code>netstat -ano | findstr &quot;80&quot;</code></li>
</ol>
<blockquote>
<p>这里建议大家改一下端口，比如我的就改成88端口了，因为80端口是比较频繁被访问的端口，我们的图片服务器就另用其他的端口比较好。而且也能避免某些冲突和问题。</p>
</blockquote>
<ol start="4">
<li>关闭nginx<br />
如果使用cmd命令窗口启动nginx，关闭cmd窗口是不能结束nginx进程的，可使用两种方法关闭nginx<br />
(1)输入nginx命令  nginx -s stop(快速停止nginx)  或  nginx -s quit(完整有序的停止nginx)<br />
(2)使用taskkill   taskkill /f /t /im nginx.exe</li>
</ol>
<blockquote>
<p>这里要注意的是，每次重启电脑以后，Nginx服务器都会关闭，所以需要自己手动打开，当然也可以设置计划任务让它自动打开。</p>
</blockquote>
<blockquote>
<p>当我们修改了nginx的配置文件nginx.conf 时，不需要关闭nginx后重新启动nginx，只需要执行命令<code>nginx -s reload</code>即可让改动生效</p>
</blockquote>
<h3 id="配置文件链接"><a class="header-anchor" href="#配置文件链接">.</a>配置文件链接</h3>
<p>如果有配置FTP服务器，那可以在FTP服务器的根目录下创建一个img文件夹；没有FTP服务器就随便创建一个文件夹。<br />
这里，我就在nginx目录下的html创建img文件夹</p>
<p>接下来，打开Nginx的配置文件(nginx.conf)，路径：…\nginx-1.17.7\conf\nginx.conf  ，没有其他软件打开的话，就用记事本也可以打开。</p>
<p>添加两行代码<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/nginx_conf.jpg?x-oss-process=style/yunying61" alt="conf配置" /></p>
<blockquote>
<p>这里可以看到，我用的端口是88端口，然后再location / {…}后面空一行，添加如图代码，稍微注意一下格式，涂红处的路径就是你改成创建的img文件夹。</p>
</blockquote>
<p>访问图片的地址是：http://localhost:88/img/1.jpg</p>
<h2 id="Nginx常用命令"><a class="header-anchor" href="#Nginx常用命令">.</a>Nginx常用命令</h2>
<table border="1px" align="center">
	<tr>
		<th>命令</th><th>说明</th>
	</tr>
	<tr>
		<td>nginx -h</td><td>查看帮助信息</td>
	</tr>
    <tr>
		<td>nginx -v</td><td>查看Nginx版本</td>
	</tr>
    <tr>
		<td>nginx -s stop</td><td>停止Nginx</td>
	</tr>
    <tr>
		<td>nginx -s quit</td><td>优雅的停止Nginx（处理完正在进行中请求后停止）</td>
	</tr>
    <tr>
		<td>nginx -s reload</td><td>重新加载配置，并优雅的重启进程</td>
	</tr>
    <tr>
		<td>nginx -s reopen</td><td>重启日志文件</td>
	</tr>
</table>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>网络</category>
        <category>软件</category>
        <category>服务器</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>服务器</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>有关域名的一些事</title>
    <url>/2020/01/%E6%9C%89%E5%85%B3%E5%9F%9F%E5%90%8D%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BA%8B/</url>
    <content><![CDATA[<h1 id="什么是域名"><a class="header-anchor" href="#什么是域名">.</a>什么是域名</h1>
<p>域名(Domain Name)，是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位(有时也指地理位置，地理上的域名，指代有行政自主权的一个地方区域)。域名使一个<code>IP地址</code>有<code>&quot;面具&quot;</code> 。一个域名的目的是成为便于记忆和沟通的一组服务器的地址(网站，电子邮件，FTP等)，例如：&lt;www.baidu.com&gt; 链接的IP地址是 183.232.231.174 ；&lt;www.baidu.com&gt; 链接的其他域名是 &lt;www.a.shifen.com&gt; (这个网址也是我ping百度时发现的)。<br />
简而言之，域名就是为了方便记忆一串IP或其他网址。<br />
通俗的说，域名就相当于一个QQ的昵称，别人通过这个昵称可以更容易的找到你。</p>
<span id="more"></span>
<h2 id="域名类型"><a class="header-anchor" href="#域名类型">.</a>域名类型</h2>
<ol>
<li>
<p>国际域名（international top-level domain-names，简称iTDs），也叫国际顶级域名。这也是使用最早也最广泛的域名。例如表示工商企业的 .com，表示网络提供商的.net，表示非盈利组织的.org等。</p>
</li>
<li>
<p>国内域名，又称为国内顶级域名（national top-level domainnames，简称nTLDs），即按照国家的不同分配不同后缀，这些域名即为该国的国内顶级域名。200多个国家和地区都按照ISO3166国家代码分配了顶级域名，例如中国是cn，美国是us，日本是jp等。详细见下文。<br />
在实际使用和功能上，国际域名与国内域名没有任何区别，都是互联网上的具有唯一性的标识。只是在最终管理机构上，国际域名由美国商业部授权的互联网名称与数字地址分配机构（The Internet Corporation for Assigned Names and Numbers）即ICANN负责注册和管理；而国内域名则由中国互联网络管理中心（China Internet Network Information Center) 即CNNIC负责注册和管理。</p>
</li>
<li>
<p>二级域名，是指顶级域名之下的域名，在国际顶级域名下，它是指域名注册人的网上名称，例如 ibm，yahoo，microsoft等；在国家顶级域名下，它是表示注册企业类别的符号，例如com，edu，gov，net等。<br />
中国在国际互联网络信息中心（Inter NIC） 正式注册并运行的顶级域名是CN，这也是中国的一级域名。在顶级域名之下，中国的二级域名又分为类别域名和行政区域名两类。类别域名共6个， 包括用于科研机构的ac；用于工商金融企业的com；用于教育机构的edu；用于政府部门的 gov；用于互联网络信息中心和运行中心的net；用于非盈利组织的org。而行政区域名有34个，分别对应于中国各省、自治区和直辖市。</p>
</li>
<li>
<p>三级域名，用字母（ A～Z，a～z，大小写等）、数字（0～9）和连接符（－）组成， 各级域名之间用实点（.）连接，三级域名的长度不能超过20个字符。如无特殊原因，建议采用申请人的英文名（或者缩写）或者汉语拼音名 （或者缩写）或者具有特殊含义的一连串字母（包含大小写）作为三级域名，以保持域名的清晰性和简洁性。</p>
</li>
<li>
<p>国际顶级中文域名，2014年8月6日，国际顶级中文域名“.网址”正式全球开放注册。国际顶级中文域名“.网址”于2011年被列入ICANN首批中文域名申请名录。“.网址”具有易记、易传播、易输入的特点，</p>
</li>
</ol>
<h2 id="域名WHOIS"><a class="header-anchor" href="#域名WHOIS">.</a>域名WHOIS</h2>
<p>一个域名的所有者可以通过查询WHOIS数据库而被找到；对于大多数根域名服务器， 基本的WHOIS由ICANN维护，而WHOIS的细节则由控制那个域的域注册机构维护。对于240多个国家代码顶级域名（ccTLDs)，通常由该域名权威注册机构负责维护WHOIS。<br />
Whois是用来查看域名的当前信息状态，包括域名是否已被注册、注册日期、过期日期、域名状态、DNS解析服务器等。、</p>
<h2 id="域名命名规则"><a class="header-anchor" href="#域名命名规则">.</a>域名命名规则</h2>
<p>由于Internet上的各级域名是分别由不同机构管理的，所以，各个机构管理域名的方式和域名命名的规则也有所不同。但域名的命名也有一些共同的规则，主要有以下几点：<br />
只能包含的字符<br />
域名中只能包含以下字符：</p>
<ol>
<li>26个英文字母</li>
<li>“0，1，2，3，4，5，6，7，8，9”十个数字</li>
<li>“-”（英文中的连词号）</li>
</ol>
<p>字符组合规则</p>
<ol>
<li>在域名中，不区分英文字母的大小写</li>
<li>对于一个域名的长度是有一定限制的</li>
</ol>
<p>英文域名格式如下：域名由各国文字的特定字符集、英文字母、数字及“ - ” ( 即连字符或减号 ) 任意组合而成，但开头及结尾均不能含有“ - ”。域名中字母不分大小写。域名最长可达 67 个字节 ( 包括后缀 .com 、 .net 、 .org 等 )。</p>
<p>中文域名格式如下：各级域名长度限制在26个合法字符（汉字，英文a-z ，A-Z ，数字0-9 和 - 等均算一个字符）；不能是纯英文或数字域名，应至少有一个汉字。“-”不能连续出现。</p>
<h2 id="域名解析"><a class="header-anchor" href="#域名解析">.</a>域名解析</h2>
<p>域名解析 英文名：DNS (domain name resolution)<br />
注册了域名之后如何才能看到自己的网站内容，用一个专业术语就叫“域名解析”。<br />
在相关术语解释中已经介绍，域名和网址并不是一回事，域名注册好之后，<code>只说明你对这个域名拥有了使用权</code>，如果不进行域名解析，那么这个域名就不能发挥它的作用，经过解析的域名可以用来作为<code>电子邮箱的后缀</code>，也可以用来<code>作为网址访问自己的网站</code>，因此域名投入使用的必备环节是<code>“域名解析”</code>。</p>
<p>我们知道域名是为了方便记忆而专门建立的一套地址转换系统，要访问一台互联网上的服务器，<code>最终还必须通过IP地址来实现</code>，<u>域名解析就是将域名重新转换为IP地址的过程</u>。一个域名只能对应一个IP地址，而一个IP地址可以同时解析到多个域名。域名解析需要由专门的域名解析服务器（DNS)来完成。</p>
<hr />
<p>解析过程：比如，一个域名为实现HTTP服务，如果想看到这个网站，要进行解析，首先在域名注册商那里通过专门的DNS服务器解析到一个WEB服务器的一个固定IP上： 211.214.1.***  ， 然后，通过WEB服务器来接收这个域名，把 这个域名映射到这台服务器上。那么，输入这个域名就可以实现访问网站内容了。即实现了域名解析的全过程；</p>
<hr />
<p>人们习惯记忆域名，但机器间互相只认IP地址，域名与IP地址之间是一一对应的，它们之间的转换工作称为域名解析，域名解析需要由专门的域名解析服务器来完成，整个过程是自动进行的。</p>
<p><strong>域名解析器</strong><br />
域名解析器，是把域名转换成主机所在IP地址的中介。通常上网的时候，敲入一个域名地址，电脑会首先向DNS服务器搜索相对应的IP地址，服务器找到对应值之后，会把IP地址返回给你的浏览器，这时浏览器根据这个IP地址发出浏览请求，这样才完成了域名寻址的过程。操作系统会把你常用的域名IP地址对应值保存起来，当你浏览经常光顾的网站时，就可以直接从系统的DNS缓存里提取对应的IP地址，加快连线网站的速度。</p>
<h1 id="域名备案"><a class="header-anchor" href="#域名备案">.</a>域名备案</h1>
<p>域名备案的目的就是为了互联网规范化、合理化建设，打击不良互联网信息的传播，如果网站不备案的话，很有可能被查处以后关停。根据中华人民共和国信息产业部第十二次部务会议审议通过的《非经营性互联网信息服务备案管理办法》条例，在中华人民共和国境内提供非经营性互联网信息服务，应当办理备案。未经备案，不得在中华人民共和国境内从事非经营性互联网信息服务。而对于没有备案的网站将予以罚款或关闭。<br />
以上是比较官方的解释，我的理解是，为了网络安全，网上的东西要接受监管。<br />
现在，备案还算简单，就是可能被各种卡脖子，而且各大域名厂商大都提供域名备案服务，备案也方便。<br />
对于备案，我是非常支持的，毕竟我又不做乱七八糟的事情，而且我也非常希望网络秩序正常，网络安全有保障。所以大家能备案的就去备案吧（别像我一样，被警察叔叔劝回了😅）。</p>
<h1 id="我的域名使用经历"><a class="header-anchor" href="#我的域名使用经历">.</a>我的域名使用经历</h1>
<p>我的第一个域名是在贝锐科技（花生壳）里注册的，当时还不熟悉各大域名商，所以就找了贝锐这个看起来有点专业的厂商（在这里注册，在“某些方面”上有些方便的地方）。<br />
因为我一开始是不知道域名到底该怎么用的，我是抱着先买域名，再研究域名怎么用的想法。所以我买完域名，进入域名管理台，先要实名认证（要审核大概一两天），然后就是域名解析了。</p>
<hr />
<p>域名解析中，有几个标签，子域名、记录类型、线路类型、记录值、TTL。</p>
<ul>
<li>
<p><strong>子域名</strong>，如 www、@、* ；</p>
<p>www：解析后的域名为 www.yunying61.top<br />
@：直接解析主域名 yunying61.top<br />
*：泛解析，匹配其他所有域名 *.yunying61.top</p>
<p>当然，如果要将域名 yunying61.top 解析为 ftp.yunying61.top ，请在子域名处填写ftp就可以了。</p>
</li>
<li>
<p><strong>记录类型</strong></p>
<p>A记录：将域名指向空间服务商提供的IPv4地址，使网站可用域名访问</p>
<p>AAAA记录：将域名指向一个IPv6地址</p>
<p>CNAME：将域名指向另一个域名实现用A域名访问到B域名</p>
<p>NS记录：将子域名指定其他DNS服务器解析</p>
<p>CAA：将域名授权指定CA机构为其域名签发证书，CA机构签发证书时强制性检查CAA记录</p>
<p>MX记录：用于搭建邮箱，将域名指向邮件服务器地址，使该邮箱可以成功接收邮件</p>
<p>SRV记录：用于将域名搭建dns服务器</p>
<p>TXT记录：文本长度限制512，常用于SPF（反垃圾邮件），实现更好地收发邮件，稳定点，少出现发送到别人的垃圾邮箱里的情况</p>
<p>URL跳转：访问域名可跳转到一个网址上，实现不加端口号即可访问服务器（<code>显性URL</code>，会改变地址栏中的网址，<code>隐性URL</code>则反之）</p>
<p>**注：**域名根/泛域名不支持设置 URL跳转，CNAME记录。</p>
<ul>
<li>搭建网站，要将域名指向主机服务商提供的IP地址，请选择「A记录」</li>
<li>要将域名指向主机服务商提供的另一个域名，请选择「CNAME」。</li>
<li>建立邮箱，根据邮箱服务商提供的MX记录填写，请选择「MX记录」。</li>
</ul>
</li>
<li>
<p><strong>记录值</strong></p>
<p>记录值就要根据你的记录类型来填写：<br />
A记录的记录值为IPv4形式（如10.10.10.10）<br />
AAAA记录的记录值为IPv6形式（如ff03:0:0:0:0:0:0:c1）<br />
CNAME记录的记录值为域名形式（如abc.example.com）<br />
NS记录的记录值为域名形式（如ns1.example.com）<br />
MX记录的记录值为域名形式（如abc.example.com）<br />
SRV记录格式为： 优先级 权重 端口 目标地址 ，每项中间需以空格分隔。例如 “0 5 5060 sipserver.example.com”<br />
URL转发记录的值为域名或URL地址</p>
</li>
<li>
<p><strong>TTL</strong></p>
<p>TTL英文为Time To Live（生存时间），即域名解析的生存时间，也就是指域名的DNS解析记录在DNS服务器上的生存时间。</p>
<p>当用户访问该网站，并不是每次都会向DNS服务器上获取域名解析。比如用户第一次访问一个网站的域名，会到<strong>DNS服务器</strong>上进行解析获取到该域名所对应的IP地址，用户从DNS服务器上获取的信息会缓存到当地的递归DNS服务器上。当第二个用户访问该网站时，递归服务器会直接返回解析结果，而不会再向DNS服务器请求解析。</p>
<p>那是不是TTL值设置的越小，生效越快，就越好呢？<br />
实际上，修改DNS的频率很小，没有特殊情况，谁会没事修改DNS解析呢？而一旦我们将域名解析的TTL值设置的很小，就会导致几乎每次用户的解析，递归服务器都需要向DNS服务器进行解析请求，相对于用户直接从递归服务器上获取缓存解析，时间上要消耗得更多，所以TTL值太小会影响用户的访问体验。</p>
<p>一般情况下：<strong>建议设置600秒</strong>即可，因为阿里云默认的域名解析TTL值为10分钟，腾讯云默认的TTL值为也是10分钟，既然大厂都是这么认为的，所以TTL值设为600秒算是比较合理的。</p>
<p>也可以参考下表进行设置，<a href="https://www.xinshouzhanzhang.com/dnsttl.html">来源</a></p>
<table>
<thead>
<tr>
<th style="text-align:center">IP是否经常变动</th>
<th style="text-align:center">是否动态IP</th>
<th style="text-align:center">宕机检测</th>
<th style="text-align:center">服务架构</th>
<th style="text-align:center">建议TTL值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">否</td>
<td style="text-align:center">否</td>
<td style="text-align:center">否</td>
<td style="text-align:center">热备、灾备、固定IP</td>
<td style="text-align:center">3600</td>
</tr>
<tr>
<td style="text-align:center">否</td>
<td style="text-align:center">否</td>
<td style="text-align:center">是</td>
<td style="text-align:center">大型网站</td>
<td style="text-align:center">60</td>
</tr>
<tr>
<td style="text-align:center">否</td>
<td style="text-align:center">否</td>
<td style="text-align:center">不使用</td>
<td style="text-align:center">单服务器</td>
<td style="text-align:center">600</td>
</tr>
<tr>
<td style="text-align:center">否</td>
<td style="text-align:center">否</td>
<td style="text-align:center">使用</td>
<td style="text-align:center">多服务器</td>
<td style="text-align:center">180</td>
</tr>
<tr>
<td style="text-align:center">是</td>
<td style="text-align:center">否</td>
<td style="text-align:center">不使用</td>
<td style="text-align:center">单服务器</td>
<td style="text-align:center">300</td>
</tr>
<tr>
<td style="text-align:center">是</td>
<td style="text-align:center">是</td>
<td style="text-align:center">不限</td>
<td style="text-align:center">不限</td>
<td style="text-align:center">120</td>
</tr>
</tbody>
</table>
</li>
</ul>
<p>然后就是根据自己需要，进行域名解析啦。</p>
<hr />
<p>之后，买了阿里云的云服务器后也顺带再买了个域名（毕竟买域名也算是投资）。然后，我就遇到了域名备案这个东西，后来在学习和使用各种技术的时候，我被这个域名备案各种限制。于是，我决定去域名备案。但发现…(⚪v⚪)自己太年轻了，域名备案要被打电话询问各种情况，为什么要备案？（我的内心活动是？？？）网站的前端用的是什么技术？后端又是什么技术？哎，总之，没准备的话，会比较艰难（这些是阿里的客服问的，说是后面会有正规的人员问这些问题）。到这里，我还没打消备案的心，直到公安局的电话打来。。。<br />
警察叔叔告诉我，你还是个大学生，现在就搞网站就是抱着尝试（玩一下）的心态，之后不去管理网站就会被黑客黑掉，拿去发布赌博、色情内容，然后被查到以后，你这个网站负责人就GG了，是要负法律责任的！！！<br />
到此，我也仔细想了一下，感觉有道理，警察说的很直白了当，于是就放弃备案了。</p>
<hr />
<p>我后来查了一下，发现域名不备案就不能直接解析到IP地址，但是这点可以<s>曲线救国</s>，通过香港或境外的域名解析服务，先解析IP，然后再把国内的域名通过CNAME记录解析到境外域名。但是，国内大部分网站的域名绑定服务是需要有备案的域名才能用的，这点我现在还没想到解决办法。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>网络</category>
        <category>服务器</category>
        <category>个人</category>
        <category>日记</category>
      </categories>
      <tags>
        <tag>域名</tag>
        <tag>备案</tag>
      </tags>
  </entry>
  <entry>
    <title>CSDN的博客格式</title>
    <url>/2020/01/CSDN%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%A0%BC%E5%BC%8F/</url>
    <content><![CDATA[<p>@<a href="%E8%BF%99%E9%87%8C%E5%86%99%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%AE%E5%BD%95%E6%A0%87%E9%A2%98">TOC</a></p>
<h1 id="欢迎使用Markdown编辑器"><a class="header-anchor" href="#欢迎使用Markdown编辑器">.</a>欢迎使用Markdown编辑器</h1>
<p>你好！ 这是你第一次使用 <strong>Markdown编辑器</strong> 所展示的欢迎页。如果你想学习如何使用Markdown编辑器, 可以仔细阅读这篇文章，了解一下Markdown的基本语法知识。</p>
<span id="more"></span>
<h2 id="新的改变"><a class="header-anchor" href="#新的改变">.</a>新的改变</h2>
<p>我们对Markdown编辑器进行了一些功能拓展与语法支持，除了标准的Markdown编辑器功能，我们增加了如下几点新功能，帮助你用它写博客：</p>
<ol>
<li><strong>全新的界面设计</strong> ，将会带来全新的写作体验；</li>
<li>在创作中心设置你喜爱的代码高亮样式，Markdown <strong>将代码片显示选择的高亮样式</strong> 进行展示；</li>
<li>增加了 <strong>图片拖拽</strong> 功能，你可以将本地的图片直接拖拽到编辑区域直接展示；</li>
<li>全新的 <strong>KaTeX数学公式</strong> 语法；</li>
<li>增加了支持<strong>甘特图的mermaid语法<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></strong> 功能；</li>
<li>增加了 <strong>多屏幕编辑</strong> Markdown文章功能；</li>
<li>增加了 <strong>焦点写作模式、预览模式、简洁写作模式、左右区域同步滚轮设置</strong> 等功能，功能按钮位于编辑区域与预览区域中间；</li>
<li>增加了 <strong>检查列表</strong> 功能。</li>
</ol>
<h2 id="功能快捷键"><a class="header-anchor" href="#功能快捷键">.</a>功能快捷键</h2>
<p>撤销：<kbd>Ctrl/Command</kbd> + <kbd>Z</kbd><br />
重做：<kbd>Ctrl/Command</kbd> + <kbd>Y</kbd><br />
加粗：<kbd>Ctrl/Command</kbd> + <kbd>B</kbd><br />
斜体：<kbd>Ctrl/Command</kbd> + <kbd>I</kbd><br />
标题：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>H</kbd><br />
无序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>U</kbd><br />
有序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>O</kbd><br />
检查列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>C</kbd><br />
插入代码：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>K</kbd><br />
插入链接：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>L</kbd><br />
插入图片：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>G</kbd><br />
查找：<kbd>Ctrl/Command</kbd> + <kbd>F</kbd><br />
替换：<kbd>Ctrl/Command</kbd> + <kbd>G</kbd></p>
<h2 id="合理的创建标题，有助于目录的生成"><a class="header-anchor" href="#合理的创建标题，有助于目录的生成">.</a>合理的创建标题，有助于目录的生成</h2>
<p>直接输入1次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成1级标题。<br />
输入2次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成2级标题。<br />
以此类推，我们支持6级标题。有助于使用<code>TOC</code>语法后生成一个完美的目录。</p>
<h2 id="如何改变文本的样式"><a class="header-anchor" href="#如何改变文本的样式">.</a>如何改变文本的样式</h2>
<p><em>强调文本</em> <em>强调文本</em></p>
<p><strong>加粗文本</strong> <strong>加粗文本</strong></p>
<p>==标记文本==</p>
<p><s>删除文本</s></p>
<blockquote>
<p>引用文本</p>
</blockquote>
<p>H<sub>2</sub>O is是液体。</p>
<p>2<sup>10</sup> 运算结果是 1024.</p>
<h2 id="插入链接与图片"><a class="header-anchor" href="#插入链接与图片">.</a>插入链接与图片</h2>
<p>链接: <a href="https://mp.csdn.net">link</a>.</p>
<p>图片: <img data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw" alt="Alt" /></p>
<p>带尺寸的图片: ![Alt](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw =30x30)</p>
<p>居中的图片: <img data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center" alt="Alt" /></p>
<p>居中并且带尺寸的图片: ![Alt](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center =30x30)</p>
<p>当然，我们为了让用户更加便捷，我们增加了图片拖拽功能。</p>
<h2 id="如何插入一段漂亮的代码片"><a class="header-anchor" href="#如何插入一段漂亮的代码片">.</a>如何插入一段漂亮的代码片</h2>
<p>去<a href="https://mp.csdn.net/configure">博客设置</a>页面，选择一款你喜欢的代码片高亮样式，下面展示同样高亮的 <code>代码片</code>.</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// An highlighted block</span></span><br><span class="line"><span class="keyword">var</span> foo = <span class="string">&#x27;bar&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h2 id="生成一个适合你的列表"><a class="header-anchor" href="#生成一个适合你的列表">.</a>生成一个适合你的列表</h2>
<ul>
<li>项目
<ul>
<li>项目
<ul>
<li>项目</li>
</ul>
</li>
</ul>
</li>
</ul>
<ol>
<li>项目1</li>
<li>项目2</li>
<li>项目3</li>
</ol>
<ul>
<li>[ ] 计划任务</li>
<li>[x] 完成任务</li>
</ul>
<h2 id="创建一个表格"><a class="header-anchor" href="#创建一个表格">.</a>创建一个表格</h2>
<p>一个简单的表格是这么创建的：</p>
<table>
<thead>
<tr>
<th>项目</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>电脑</td>
<td>$1600</td>
</tr>
<tr>
<td>手机</td>
<td>$12</td>
</tr>
<tr>
<td>导管</td>
<td>$1</td>
</tr>
</tbody>
</table>
<h3 id="设定内容居中、居左、居右"><a class="header-anchor" href="#设定内容居中、居左、居右">.</a>设定内容居中、居左、居右</h3>
<p>使用<code>:---------:</code>居中<br />
使用<code>:----------</code>居左<br />
使用<code>----------:</code>居右</p>
<table>
<thead>
<tr>
<th style="text-align:center">第一列</th>
<th style="text-align:right">第二列</th>
<th style="text-align:left">第三列</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">第一列文本居中</td>
<td style="text-align:right">第二列文本居右</td>
<td style="text-align:left">第三列文本居左</td>
</tr>
</tbody>
</table>
<h3 id="SmartyPants"><a class="header-anchor" href="#SmartyPants">.</a>SmartyPants</h3>
<p>SmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如：</p>
<table>
<thead>
<tr>
<th>TYPE</th>
<th>ASCII</th>
<th><abbr title="超文本标记语言">HTML</abbr></th>
</tr>
</thead>
<tbody>
<tr>
<td>Single backticks</td>
<td><code>'Isn't this fun?'</code></td>
<td>‘Isn’t this fun?’</td>
</tr>
<tr>
<td>Quotes</td>
<td><code>&quot;Isn't this fun?&quot;</code></td>
<td>“Isn’t this fun?”</td>
</tr>
<tr>
<td>Dashes</td>
<td><code>-- is en-dash, --- is em-dash</code></td>
<td>– is en-dash, — is em-dash</td>
</tr>
</tbody>
</table>
<h2 id="创建一个自定义列表"><a class="header-anchor" href="#创建一个自定义列表">.</a>创建一个自定义列表</h2>
<p>Markdown<br />
:  Text-to-<abbr title="超文本标记语言">HTML</abbr> conversion tool</p>
<p>Authors<br />
:  John<br />
:  Luke</p>
<h2 id="如何创建一个注脚"><a class="header-anchor" href="#如何创建一个注脚">.</a>如何创建一个注脚</h2>
<p>一个具有注脚的文本。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<h2 id="注释也是必不可少的"><a class="header-anchor" href="#注释也是必不可少的">.</a>注释也是必不可少的</h2>
<p>Markdown将文本转换为 <abbr title="超文本标记语言">HTML</abbr>。</p>
<h2 id="KaTeX数学公式"><a class="header-anchor" href="#KaTeX数学公式">.</a>KaTeX数学公式</h2>
<p>您可以使用渲染LaTeX数学表达式 <a href="https://khan.github.io/KaTeX/">KaTeX</a>:</p>
<p>Gamma公式展示 $\Gamma(n) = (n-1)!\quad\forall<br />
n\in\mathbb N$ 是通过欧拉积分</p>
<p>$$<br />
\Gamma(z) = \int_0^\infty t<sup>{z-1}e</sup>{-t}dt,.<br />
$$</p>
<blockquote>
<p>你可以找到更多关于的信息 <strong>LaTeX</strong> 数学表达式<a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">here</a>.</p>
</blockquote>
<h2 id="新的甘特图功能，丰富你的文章"><a class="header-anchor" href="#新的甘特图功能，丰富你的文章">.</a>新的甘特图功能，丰富你的文章</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title Adding GANTT diagram functionality to mermaid</span><br><span class="line">        section 现有任务</span><br><span class="line">        已完成               :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">        进行中               :active,  des2, 2014-01-09, 3d</span><br><span class="line">        计划一               :         des3, after des2, 5d</span><br><span class="line">        计划二               :         des4, after des3, 5d</span><br></pre></td></tr></table></figure>
<ul>
<li>关于 <strong>甘特图</strong> 语法，参考 <a href="https://mermaidjs.github.io/">这儿</a>,</li>
</ul>
<h2 id="UML-图表"><a class="header-anchor" href="#UML-图表">.</a>UML 图表</h2>
<p>可以使用UML图表进行渲染。 <a href="https://mermaidjs.github.io/">Mermaid</a>. 例如下面产生的一个序列图：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">张三 -&gt;&gt; 李四: 你好！李四, 最近怎么样?</span><br><span class="line">李四--&gt;&gt;王五: 你最近怎么样，王五？</span><br><span class="line">李四--x 张三: 我很好，谢谢!</span><br><span class="line">李四-x 王五: 我很好，谢谢!</span><br><span class="line">Note right of 王五: 李四想了很长时间, 文字太长了&lt;br/&gt;不适合放在一行.</span><br><span class="line"></span><br><span class="line">李四--&gt;&gt;张三: 打量着王五...</span><br><span class="line">张三-&gt;&gt;王五: 很好... 王五, 你怎么样?</span><br></pre></td></tr></table></figure>
<p>这将产生一个流程图。:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[长方形] -- 链接 --&gt; B((圆))</span><br><span class="line">A --&gt; C(圆角长方形)</span><br><span class="line">B --&gt; D&#123;菱形&#125;</span><br><span class="line">C --&gt; D</span><br></pre></td></tr></table></figure>
<ul>
<li>关于 <strong>Mermaid</strong> 语法，参考 <a href="https://mermaidjs.github.io/">这儿</a>,</li>
</ul>
<h2 id="FLowchart流程图"><a class="header-anchor" href="#FLowchart流程图">.</a>FLowchart流程图</h2>
<p>我们依旧会支持flowchart的流程图：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flowchat</span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 结束</span><br><span class="line">op=&gt;operation: 我的操作</span><br><span class="line">cond=&gt;condition: 确认？</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure>
<ul>
<li>关于 <strong>Flowchart流程图</strong> 语法，参考 <a href="http://adrai.github.io/flowchart.js/">这儿</a>.</li>
</ul>
<h2 id="导出与导入"><a class="header-anchor" href="#导出与导入">.</a>导出与导入</h2>
<h3 id="导出"><a class="header-anchor" href="#导出">.</a>导出</h3>
<p>如果你想尝试使用此编辑器, 你可以在此篇文章任意编辑。当你完成了一篇文章的写作, 在上方工具栏找到 <strong>文章导出</strong> ，生成一个.md文件或者.html文件进行本地保存。</p>
<h3 id="导入"><a class="header-anchor" href="#导入">.</a>导入</h3>
<p>如果你想加载一篇你写过的.md文件，在上方工具栏可以选择导入功能进行对应扩展名的文件导入，<br />
继续你的创作。</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://mermaidjs.github.io/">mermaid语法说明</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p>注脚的解释 <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>IT</category>
        <category>博客</category>
      </categories>
      <tags>
        <tag>CSDN</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>入坑日记-正式开始玩Linux</title>
    <url>/2020/02/%E5%85%A5%E5%9D%91%E6%97%A5%E8%AE%B0-%E6%AD%A3%E5%BC%8F%E5%BC%80%E5%A7%8B%E7%8E%A9Linux/</url>
    <content><![CDATA[<h1 id="入坑日记-正式开始玩Linux"><a class="header-anchor" href="#入坑日记-正式开始玩Linux">.</a>入坑日记-正式开始玩Linux</h1>
<p><abbr title="2020.02.11 15:05">今天</abbr>，因为一个资源群里分享了阿里云的一个免费领云服务器的福利，然后我去领，但很不幸没抢到，然后我打开了阿里的学习中心，然后看到了“<abbr title="可笑的是，我上午刚看完，下午就404了">【新手玩转云计算】搭建自己专属的云笔记</abbr>”这篇文章，然后我因为感兴趣就去学了。</p>
<span id="more"></span>
<p>非常悲剧的我，研究了3、5个小时，好不容易下好资源，进入到实际操作阶段，却发现一直卡在PuTTY的root登录界面。后来又是大费周章，查找各种资料，兀然清醒，root好像是Linux的范畴。。。</p>
<p>但我到这还没有放弃，我还是坚信，Windows端应该会有私人云笔记的搭建。于是我又找了半个小时，直到我看到</p>
<blockquote><p>既然能自己部署一个私有云，数据还是存在自己硬盘比较好，第一个开刀的云笔记。不过开源的云笔记貌似只找到蚂蚁笔记（leanote），不过这开源都不走心，将就用吧。</p>
<footer><strong>布宝,</strong><cite><a href="https://www.imooc.com/article/49225">带你使用Docker搭建私有云笔记_慕课手记</a></cite></footer></blockquote>
<p>而且，蚂蚁笔记（leanote）的功能也是着实让我喜欢，而且它不仅支持官方登入，也是支持自定义个人服务器的！！！并且在各个平台上都有其软件。</p>
<p>所以，因为leanote，我打算正式入坑Linux这个大坑了，现在在把服务器的资料备份打包，晚上重装操作系统，明天配置系统并迁移win上的服务到Linux上。</p>
<p>几天后。。。</p>
<p>入坑后，我才发现，Linux果然是一个大坑，我的服务器用的是CentOS的命令行系统😭，而且我还不能换成有UI的系统再次大哭😭。</p>
<p>收拾一下心情，哎，反正迟早都是要进军Linux领域的，毕竟马上国产的UOS要上线了，这也是基于Deepin的Linux系统，所以明知前有坑，偏向坑里走。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>个人</category>
        <category>日记</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>日记</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>配置Minecraft服务端文件</title>
    <url>/2020/01/%E9%85%8D%E7%BD%AEMinecraft%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="配置Minecraft服务端文件"><a class="header-anchor" href="#配置Minecraft服务端文件">.</a>配置Minecraft服务端文件</h1>
<blockquote>
<p>注：这是java版的服务端参数，参数介绍翻译自Mojang官方文档，地址:<a href="https://minecraft.gamepedia.com/Server.properties">https://minecraft.gamepedia.com/Server.properties</a></p>
</blockquote>
<span id="more"></span>
<details class="note primary"><summary><p>spawn-protection=16</p>
</summary>
<p>通过将该值进行(x*2)+1的运算来决定出生点的保护半径。设置为0将不会禁用出生点保护。</p>
<p>设置为0将会保护位于出生点的1x1方块区域，</p>
<p>设置为1将会保护以出生点为中心的3x3方块区域，以此类推。</p>
<p>这个选项只会在第一个玩家进行服务器时生成。如果服务器没有设置OP，这个选项将会自动禁用。</p>

</details>
<details class="note primary"><summary><p>max-tick-time=60000</p>
</summary>
<p>设置每个tick花费的最大毫秒数，超过该最大毫秒数看门狗将停止服务器程序并附带上一些信息。</p>

</details>
<details class="note primary"><summary><p>query.port=25565</p>
</summary>
<p>设置监听服务器的端口号</p>

</details>
<details class="note primary"><summary><p>generator-settings=</p>
</summary>
<p>本属性质用于自定义超平坦世界的生成。详见<a href="https://minecraft-zh.gamepedia.com/%E8%B6%85%E5%B9%B3%E5%9D%A6%E4%B8%96%E7%95%8C">超平坦世界</a>和<a href="https://minecraft-zh.gamepedia.com/%E8%87%AA%E5%AE%9A%E4%B9%89">自定义</a>了解正确的设定及例子。</p>

</details>
<details class="note primary"><summary><p>force-gamemode=false</p>
</summary>
<p>是否强制玩家以默认游戏模式游玩</p>

</details>
<details class="note primary"><summary><p>allow-nether=true</p>
</summary>
<p>是否允许玩家前往下界</p>

</details>
<details class="note primary"><summary><p>enforce-whitelist=false</p>
</summary>
<p>在服务器上强制执行白名单。当启用后，不在白名单中的用户将在服务器重新加载白名单文件后从服务器踢出。</p>

</details>
<details class="note primary"><summary><p>gamemode=survival</p>
</summary>
<p>游戏模式，包括：</p>
<p>survival(0)生存模式、creative(1)创造模式、</p>
<p>adventure(2)冒险模式（仅在12w22a之后，或正式版1.3之后可用）、</p>
<p>spectator(3)旁观模式（仅在14w05a之后，或正式版1.8之后可用）</p>

</details>
<details class="note primary"><summary><p>broadcast-console-to-ops=true</p>
</summary>

</details>
<details class="note primary"><summary><p>broadcast-rcon-to-ops=true</p>
</summary>

</details>
<details class="note primary"><summary><p>enable-query=false</p>
</summary>
<p>是否允许使用GameSpy4协议的服务器监听器。它被用于收集服务器信息</p>

</details>
<details class="note primary"><summary><p>player-idle-timeout=0</p>
</summary>
<p>玩家n分钟无任何操作将被自动踢出，0为关闭自动踢出</p>

</details>
<details class="note primary"><summary><p>difficulty=easy</p>
</summary>
<p>定义服务器的游戏难度（例如生物对玩家造成的伤害，饥饿与中毒对玩家的影响方式等），包括：</p>
<p>和平(peaceful)(0)、简单(easy)(1)、普通(normal)(2)、困难(hard)(3)</p>
<p>如果设置了旧的数字ID，则会自动转化为英文的难度名称</p>

</details>
<details class="note primary"><summary><p><a id=opl>op-permission-level</a>=4</p>
</summary>
<p>设定OP的权限等级<br />
1 - OP可以无视重生点保护。<br />
2 - OP可以使用单人游戏作弊命令（除了/publish，因为不能在服务器上使用，/debug也是）并使用命令方块。命令方块和领域服服主/管理员有此等级权限。<br />
3 - OP可以使用几乎所有多人游戏限定的命令（除第4级专用命令）<br />
4 - OP可以使用所有命令，包括/stop、/save-all、/save-on和/save-off。</p>

</details>
<details class="note primary"><summary><p>pvp=true</p>
</summary>
<p>是否允许玩家互相伤害</p>

</details>
<details class="note primary"><summary><p>snooper-enabled=false</p>
</summary>
<p>自1.3正式版之后，一旦启用，将允许服务端定期发送统计数据到<a href="http://snoop.minecraft.net">http://snoop.minecraft.net</a>。</p>

</details>
<details class="note primary"><summary><p>level-type=default</p>
</summary>
<p>地图生成类型，包括：<br />
DEFAULT - 标准的世界带有丘陵，河谷，海洋等<br />
FLAT - 一个没有特色的平坦世界，适合用于建设<br />
LARGEBIOMES - 如同预设世界，但所有生态系都更大（仅快照12w19a，或正式版1.3之后可用）<br />
AMPLIFIED - 如同预设世界，但世界生成高度提高（仅快照13w36a，或正式版1.7.2之后可用）<br />
CUSTOMIZED - 自快照14w21b以来，服务器也支持自定义地形。使用方法是在generator-settings贴上代码。</p>

</details>
<details class="note primary"><summary><p>hardcore=</p>
</summary>
<p>极限模式(一旦启用，玩家在死后会自动被服务器封禁，进入spectator模式)，会覆写设定的游戏难度</p>

</details>
<details class="note primary"><summary><p>enable-command-block=false</p>
</summary>
<p>是否启用命令方块</p>

</details>
<details class="note primary"><summary><p>max-players=20</p>
</summary>
<p>服务器同时能容纳的最大玩家数量，可输入0~2147483647，服务器的OP具有在人满的情况下强行进入服务器的权力，找到在服务器根目录下叫ops.json的文件并打开，设置你要突破人数限制的OP下的bypassesPlayerLimit选项为true即可（默认值为false），这意味着OP将不需要在服务器人满时等待玩家离开再加入，过大的数值会使客户端显示的玩家列表崩坏。</p>

</details>
<details class="note primary"><summary><p>network-compression-threshold=256</p>
</summary>
<p>默认会允许n-1字节的数据包正常发送, 如果数据包为 n 字节或更大时会进行压缩。</p>

</details>
<details class="note primary"><summary><p>resource-pack-sha1=</p>
</summary>
<p>资源包的SHA-1值，必须为小写十六进制，建议填写它，这还没有用于验证资源包的完整性，但是它提高了资源包缓存的有效性和可靠性。</p>

</details>
<details class="note primary"><summary><p>max-world-size=29999984</p>
</summary>
<p>最大世界范围(半径)，比如，1000即为2000x2000方形地图</p>

</details>
<details class="note primary"><summary><p>function-permission-level=2</p>
</summary>
<p>设置命令的权限等级(1-4)，权限等级2可以使用/reload和/forceload，可以参考<a href="#opl">op-permission-level</a></p>

</details>
<details class="note primary"><summary><p>rcon.port=25575</p>
</summary>
<p>设置远程访问的端口号</p>

</details>
<details class="note primary"><summary><p>server-port=25565</p>
</summary>
<p>服务器端口</p>

</details>
<details class="note primary"><summary><p>server-ip=</p>
</summary>
<p>服务器地址，默认留空即可</p>

</details>
<details class="note primary"><summary><p>allow-flight=false</p>
</summary>
<p>false - 不允许飞行。悬空超过5秒的玩家会被踢出服务器。也会包括使用三叉戟的激流附魔、时间很长的自由落体或是网络卡顿导致的误判。<br />
true - 允许飞行。玩家得以使用飞行MOD飞行。</p>

</details>
<details class="note primary"><summary><p>level-name=world</p>
</summary>
<p>世界的名字(同时也是存放世界文件夹的名字)，更改名字会让服务器尝试加载不同文件夹中的地图</p>

</details>
<details class="note primary"><summary><p>view-distance=8</p>
</summary>
<p>它决定了服务端的<code>可视距离</code>，设置服务端传送给客户端的数据量，也就是设置玩家各个方向上的区块数量 (是以玩家为中心的半径，不是直径)。</p>

</details>
<details class="note primary"><summary><p>resource-pack=</p>
</summary>
<p>可输入指向一个资源包的URI。玩家可选择是否使用该资源包。注：下载到的服务器资源包将保存在.minecraft\server-resource-packs下。</p>

</details>
<details class="note primary"><summary><p>spawn-animals=true</p>
</summary>
<p>是否生成动物</p>

</details>
<details class="note primary"><summary><p>spawn-monsters=true</p>
</summary>
<p>决定攻击型生物（怪兽）是否可以生成</p>

</details>
<details class="note primary"><summary><p>spawn-npcs=true</p>
</summary>
<p>是否生成npc</p>

</details>
<details class="note primary"><summary><p>white-list=false</p>
</summary>
<p>服务器的白名单,当启用时，只有白名单上的用户才能连接服务器。白名单主要用于私人服务器，例如相识的朋友等。<br />
注 - OP会自动被视为在白名单上。所以无需再将OP加入白名单。<br />
false - 不使用白名单。<br />
true - 从 whitelist.json 文件加载白名单。</p>

</details>
<details class="note primary"><summary><p>rcon.password=</p>
</summary>
<p>设置远程访问的密码</p>

</details>
<details class="note primary"><summary><p>generate-structures=true</p>
</summary>
<p>是否生成建筑(包括村庄等)，注：即使设为 false，地牢和下界要塞仍然会生成</p>

</details>
<details class="note primary"><summary><p>max-build-height=256</p>
</summary>
<p>玩家能够建造的最大高度。地形生成算法并不会受这个值的影响。</p>

</details>
<details class="note primary"><summary><p>online-mode=true</p>
</summary>
<p>服务器是否开启在线验证(<code>仅允许正版玩家连接</code>)，谨慎切换，可能导致玩家数据丢失</p>

</details>
<details class="note primary"><summary><p>level-seed=</p>
</summary>
<p>自定义世界种子</p>

</details>
<details class="note primary"><summary><p>use-native-transport=true</p>
</summary>
<p>是否使用针对Linux平台的数据包收发优化</p>

</details>
<details class="note primary"><summary><p>prevent-proxy-connections=false</p>
</summary>
<p>如果服务器发送的和Mojang的验证服务器的ISP/AS不一样,玩家将会被踢出<br />
true - 服务器将会禁止玩家使用虚拟专用网络或代理<br />
false - 服务器将不会禁止玩家使用虚拟专用网络或代理</p>

</details>
<details class="note primary"><summary><p>enable-rcon=false</p>
</summary>
<p>是否允许远程访问服务器控制台</p>

</details>
<details class="note primary"><summary><p>motd=A Minecraft Server</p>
</summary>
<p>玩家在多人游戏服务器列表中看到的服务器信息，显示于名称下方，那些<s>花里胡哨</s>的东西请参考官方的<a href="https://minecraft-zh.gamepedia.com/%E6%A0%B7%E5%BC%8F%E4%BB%A3%E7%A0%81">样式代码</a></p>

</details>
<details class="note primary"><summary><p>announce-player-achievements=false</p>
</summary>
<p>玩家获得成就时是否在服务器中进行显示。在1.12之后的版本中，announce-player-achievements属性被移除。如果已经在服务器配置文件中设置了此条属性，则游戏规则announceAdvancements将自动更新，随后从文件中删除此条属性。</p>

</details>
<h1 id="基岩版服务端配置文件"><a class="header-anchor" href="#基岩版服务端配置文件">.</a>基岩版服务端配置文件</h1>
<p>基岩版的服务器我没开过，等什么时候我开了基岩服再说吧。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>Games</category>
        <category>Minecraft</category>
      </categories>
      <tags>
        <tag>服务器</tag>
        <tag>Minecraft</tag>
        <tag>我的世界</tag>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Minecraft Mod安装教程</title>
    <url>/2020/01/Minecraft-Mod%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="Mod-模组"><a class="header-anchor" href="#Mod-模组">.</a>Mod(模组)</h1>
<h2 id="Mod-API"><a class="header-anchor" href="#Mod-API">.</a>Mod API</h2>
<p>我的世界的API均为爱好者产品，Mojang不对任何API提供任何技术支持。<br />
Mojang并未针对Java版开发Mod API，故不存在“官方API”。</p>
<span id="more"></span>
<h3 id="什么是API"><a class="header-anchor" href="#什么是API">.</a>什么是API</h3>
<p>API是英文Application Programming Interface的缩写，英文即“应用程序编程接口”，作为程序之间的桥梁，起衔接与协调作用。本文内所述的Mod API，如Modloader、Forge等<code>本身其实也是mod</code>，这几个Mod可以与其它功能性Mod配合，使大家与Minecraft协同工作且避免冲突。</p>
<p>举个例子吧：A Mod 改了游戏核心程序里的某个图像文件，B Mod也改了，他们俩都改了，那么覆盖后其中一个Mod会出问题——因此游戏会因为部分Mod找不到文件而黑屏或是崩溃。API的引入解决了这一切。具体工作原理这里不做具体介绍，总之API可以让众多MOD协同工作。</p>
<p>API的还有一个最大作用是作为Mod开发者与Minecraft之间的桥梁。如果我要添加一个新的合成配方，如果没有API的协助，我可能就需要苦苦研究Minecraft的源代码，找到哪部分是关于合成的，还要找到恰当的方法把合成配方弄进去，排成什么样子应该怎么写代码全部要搞得一清二楚，等Mod写出来，人已经累死了。有了API就没这么麻烦了：API可以给你提供一个方便的增添合成配方的途径——就像“翻译官”一样，用一个简单的语句就可以定义一个合成配方。至于合成配方怎么让Minecraft看懂，那就是API的分内工作了。</p>
<p>现在有不少流行的API：Minecraft Forge、Player API等等等等，各有特色。MOD制作者也选择了不同的API。<u>所以你在自己动手安装Mod时必须注意你想要装的Mod的安装说明，预先下载安装好“对应的”Mod API</u>。</p>
<p>Mojang，即Minecraft开发商，没有为Java版开发Mod API的计划。</p>
<h3 id="各API的原发布地址链接"><a class="header-anchor" href="#各API的原发布地址链接">.</a>各API的原发布地址链接</h3>
<p>Forge<br />
<a href="http://www.minecraftforge.net/forum/">http://www.minecraftforge.net/forum/</a></p>
<p>Player API(创始人:Divisor)<br />
<a href="http://www.minecraftforum.net/topic/738498-/">http://www.minecraftforum.net/topic/738498-/</a></p>
<p>LiteLoader（创始人Mumfrey）<br />
<a href="http://www.minecraftforum.net/topic/1868280-/">http://www.minecraftforum.net/topic/1868280-/</a><br />
作者注明可自由分发未修改的LiteLoader。</p>
<p>Render Player API(创始人:Divisor)<br />
<a href="http://www.minecraftforum.net/topic/1261354-/">http://www.minecraftforum.net/topic/1261354-/</a></p>
<p>Fabric（创始人asiekierka）<br />
<a href="https://fabricmc.net/">https://fabricmc.net/</a></p>
<h3 id="为什么有些版本没有API，也没有什么Mod？"><a class="header-anchor" href="#为什么有些版本没有API，也没有什么Mod？">.</a>为什么有些版本没有API，也没有什么Mod？</h3>
<p>哪个版本有没有Mod API取决于该版本有没有对应的Minecraft Coder Pack。Minecraft Coder Pack为非官方的Minecraft反编译/反混淆代码工具包——尽管实质上Minecraft Coder Pack（下文简称MCP）违反了著作权法，但因为Mod的制作是基于对于源代码的解析的，在官方API难产的前提下，Mojang对MCP的存在是默许的——没有这群反编译的人，哪有接下来这么丰富的Mod。因此，以Minecraft 1.8.X为例，2015年一直到年末之前，MCP只有针对1.8的版本，而1.8.1-1.8.8都没有。所以尽管当时的最新正式版为1.8.8，但几乎所有Mod还停留在1.8。</p>
<h3 id="API安装"><a class="header-anchor" href="#API安装">.</a>API安装</h3>
<h4 id="说明"><a class="header-anchor" href="#说明">.</a>说明</h4>
<ul>
<li>对于<strong>较早期版本的Minecraft</strong>（一般为Minecraft Java版 1.6之前版本），如果要安装API，如未特别注明，请使用下文“Mod安装方法”一节的方法一。</li>
<li>对于<strong>较新版本的Minecraft</strong>（一般为Minecraft Java版 1.6之后版本），流行API已经基本上只剩下了三大家族：Forge、Player API兄弟，以及LiteLoader。</li>
<li><strong>Forge</strong>本身有成熟的安装器，请使用安装器安装；<br />
注意：Forge安装后第一次使用会联网下载一些必要的lib文件存在.minecraft/lib或.minecraft/libraries下。如果你的网络连接不畅，或是部分中国大陆境内的部分无良Internet服务提供商私自屏蔽了forge官方网站，你只能从其他连接顺畅的玩家处复制这些文件。</li>
<li><strong>LiteLoader</strong>较为特立独行，可以不依赖Forge。请使用其安装器安装，但注意如果你想让Forge和LiteLoader同时生效，就必须先安装Forge之后在LiteLoader安装器界面的Extended from后的下拉菜单中选择Forge安装器建立的版本，一般格式为  版本号-forge-XXXXX</li>
<li><strong>Player API</strong>以及<strong>Render Player API</strong>基本已经成为Forge的附庸。请使用下文《Mod图文安装教程》的“方法二（mods文件夹法）”</li>
</ul>
<h4 id="forge的安装"><a class="header-anchor" href="#forge的安装">.</a>forge的安装</h4>
<p>使用Forge自动安装器安装客户端Forge之前，必须满足下列两个条件之一，否则会提示no launcher profile错误：</p>
<ol>
<li>正版启动器以及使用非官方启动器进行正版登入的用户：运行过至少一次正版启动器（无需登录）。</li>
<li>其它启动器用户(盗版用户)：将正版启动器的profile文件<a href="https://img-61.oss-cn-shanghai.aliyuncs.com/file/Minecraft/launcher_profiles.json">下载地址</a>放置在.minecraft文件夹下。</li>
</ol>
<hr />
<ul>
<li>
<p>先讲一下安装器版的操作(就是forge-xxx.exe的文件)<br />
选择install client(译为安装至客户端)，接下来，点一下那那三个点(…)，选择你要加mod的我的世界游戏文件夹中的<code>.minecraft</code>文件夹，点一下OK（确定），就可以等它完成了。</p>
</li>
<li>
<p>接下来讲jar文件版的操作(就是forge-xxx.jar的文件)<br />
将下载好的forge放在一个目录下，新建一个txt文档，将其后缀名改为bat，右键编辑，将下面的代码输进去，保存，关闭</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@echo</span><br><span class="line">java -Xms1024M -Xmx1024M -jar 下载的jar文件名.jar</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<p>双击bat文件，运行，弹处下图<br />
<img data-src="https://img-61.oss-cn-shanghai.aliyuncs.com/img/Minacraft/forge.jpg" alt="forge安装" /><br />
选择install client(译为安装至客户端端)，接下来，点一下那那三个点(…)选择你要加mod的我的世界游戏文件夹中的.minecraft文件夹，点一下OK（确定），就可以等它完成了。<br />
<em>安装过程中会下载一些依赖库，由于某些原因可能会下载失败，多安装几次就行</em></p>
<p>安装成功后，.minecraft/versions文件夹下会出现名为“Forge&lt;版本号&gt;”的文件夹，如果你使用正版启动器的话还会自动配置独立的，名为Forge的Profile；非官方启动器用户请自己配置启动器指向该文件夹（具体方法请询问启动器作者）。无法读取json的非官方启动器请您果断放弃。</p>
</li>
</ul>
<h4 id="LiteLoader的安装"><a class="header-anchor" href="#LiteLoader的安装">.</a>LiteLoader的安装</h4>
<p>注意：使用LiteLoader可以不依赖Forge，但目前绝大多数mod都需要forge，一般都是先考虑forge再考虑LiteLoader。</p>
<p>请使用其安装器安装，但注意如果你想让Forge和LiteLoader同时生效，就必须<code>先安装Forge之后</code>在LiteLoader安装器界面的Extended from后的下拉菜单中选择Forge安装器建立的版本，一般格式为  版本号-forge-XXXXX</p>
<h4 id="Player-API与Render-Player-API的安装"><a class="header-anchor" href="#Player-API与Render-Player-API的安装">.</a>Player API与Render Player API的安装</h4>
<p>（仅适用于Minecraft 1.6之后）：<br />
将zip文件里的jar文件解压出来（别解压jar本身，仅仅是将jar从zip文件里面弄出来），然后参考下文 Mod的安装 的“方法二（mods文件夹法）”。<code>Player API依赖Forge，Forge未安装时Player API无法生效！</code></p>
<h2 id="Mod的安装"><a class="header-anchor" href="#Mod的安装">.</a>Mod的安装</h2>
<p>(适用于Windows):这里只是做个通用的概略说明。一些Mod的安装方法依Mod不同而异，请时刻注意Mod原发布的安装说明！</p>
<ol>
<li>
<p>安装Mod的第一步，是找到Minecraft客户端文件（称为.minecraft文件夹）所在位置，分以下两种情况：</p>
<ul>
<li>
<p>情况1：如果你是较常见的非官方启动器用户，请打开启动器程序所在的文件夹（游戏目录），一般.minecraft文件夹就在里面。</p>
</li>
<li>
<p>情况2：如果你是Minecraft官方启动器用户，请按下Windows徽标键+R，在弹出的“运行”窗口打上&quot;%appdata%“，并按下确定，你就能在打开的窗口里看到”.minecraft&quot;文件夹。</p>
</li>
</ul>
</li>
<li>
<p>Mod安装的第二步：依据你想安装的Mod的特性决定具体方法。</p>
<ol>
<li>
<p><strong>方法一（核心jar覆盖法）</strong><br />
针对早期（早于Minecraft 1.6）版本的API，以及并未对流行API作出优化的Mod的安装教程。请注意：自Minecraft 1.6起，推荐使用本方法安装的Mod已<code>较为罕见</code>：<br />
适用于：Minecraft 1.5.2和以前的版本或是1.6之后有注明安装方式为拖入核心jar的Mod<br />
由于更新换代，加之mod也在随着游戏版本而推出了对应版本的mod，所以这种方法几乎已经销声匿迹了，这里我就不讲详细的方法了，有兴趣可以去看一下MC论坛的有关文章<a href="https://www.mcbbs.net/thread-63718-1-1.html">https://www.mcbbs.net/thread-63718-1-1.html</a></p>
</li>
<li>
<p><strong>方法二（mods文件夹法）</strong><br />
针对可以依附于主流Mod API运行的Mod或较次要的API。本方法目前为大部分Mod的安装方法：<br />
适用于：Minecraft 1.6及以后的版本或是1.5以前有注明安装方法为拖入mods文件夹<br />
1、请确保你已经安装了该Mod所必需的对应API。大多数API的安装方法（除非特别注明）为方法一。<br />
2、进入文件夹&quot;.minecraft&quot;后，打开文件夹&quot;mods&quot;(如果没有则自己新建一个)<br />
3、把下载下来的Mod文档(zip格式或jar格式)放进文件夹&quot;mods&quot;里，无需经过解压</p>
</li>
</ol>
<p>【Minecraft 1.6及之后版本玩家须知】<br />
Modloader在你把Minecraft放在默认目录的前提下（即%appdata%下），mods文件夹可以放在.minecraft\versions&lt;修改过的版本号&gt;\下面，即与该版本的核心jar在同一目录下。若更改Minecraft存放目录的话，mods文件夹依然与从前一样。</p>
<blockquote>
<p>至于可以由Forge加载的Mod，你可以将对应版本的mod放在.minecraft\mods\ (Minecraft版本号)下。例如，1.7.10的mod就放在“.minecraft\mods\1.7.10”文件夹下即可。</p>
</blockquote>
<ol start="3">
<li><strong>方法三（自动安装器）</strong><br />
现在许多Mod或Mod API提供了自动安装器程序，可以看做是软件安装程序，一般一直点“Next”就可以自己安装完毕，免除手动安装的烦恼。这种安装器本文无需说明太多。</li>
</ol>
</li>
</ol>
<h3 id="Mod安装后"><a class="header-anchor" href="#Mod安装后">.</a>Mod安装后</h3>
<p>根据我的经验，不是说你想玩什么mod就可以随便往mods文件夹里乱加mod，每个mod之间或多或少都是有一定冲突的，而上面讲的API可以将其之间的冲突最大化的减小，而一些不可避免的冲突有时就会造成游戏崩溃。<br />
所以，在添加一个新mod的时候，最好先把游戏目录备份一下，然后再添加mod，并登入游戏查看是否mod之间会“打架”。<br />
同理，配置一个客户端的时候，也是这样的道理。</p>
]]></content>
      <categories>
        <category>Games</category>
        <category>Minecraft</category>
      </categories>
      <tags>
        <tag>Minecraft</tag>
        <tag>我的世界</tag>
        <tag>Mod</tag>
        <tag>模组</tag>
      </tags>
  </entry>
  <entry>
    <title>试验组-1</title>
    <url>/2020/02/%E8%AF%95%E9%AA%8C%E7%BB%84-1/</url>
    <content><![CDATA[<h1 id="本篇是用于测试一些代码之用，大家可以忽略这篇"><a class="header-anchor" href="#本篇是用于测试一些代码之用，大家可以忽略这篇">.</a>本篇是用于测试一些代码之用，大家可以忽略这篇</h1>
<span id="more"></span>
<blockquote>
<p>无插件也成功<img data-src="./NP15.jpg" alt="NP15" /></p>
</blockquote>
<p>![patch 2](./patch 2.jpg)</p>
<p>![patch 2](/images/patch 2.jpg)</p>
<blockquote>
<p>无插件也成功<img data-src="/images/NP15.jpg" alt="NP15" /></p>
</blockquote>
<p><img data-src="/_posts/2020-02-16-%E8%AF%95%E9%AA%8C%E7%BB%84-1/NP15.jpg" alt="NP15" /></p>
<blockquote>
<p>有hexo-asset-image插件成功<img data-src="2020-02-16-%E8%AF%95%E9%AA%8C%E7%BB%84-1/NP15.jpg" alt="NP15" /></p>
</blockquote>
<p>![patch2](2020-02-16-试验组-1/patch 2.jpg)</p>
<p><img data-src="/source/_posts/2020-02-16-%E8%AF%95%E9%AA%8C%E7%BB%84-1/NP15.jpg" alt="NP15" /></p>
<p>![patch2](/source/_posts/2020-02-16-试验组-1/patch 2.jpg)</p>
<p><img data-src="/public/2020/02/16/%E8%AF%95%E9%AA%8C%E7%BB%84-1/NP15.jpg" alt="NP15" /></p>
<p>![patch2](/public/2020/02/16/试验组-1/patch 2.jpg)</p>
<blockquote>
<p>无插件也成功</p>
</blockquote>
<blockquote>
<p>无插件也成功</p>
</blockquote>
<img data-src="/2020-02-16-试验组-1/NP15.jpg">
<img data-src="/source/_posts/2020-02-16-试验组-1/NP15.jpg">
<img data-src="/public/2020/02/16/试验组-1/patch 3.jpg">
]]></content>
      <tags>
        <tag>测试</tag>
        <tag>试验</tag>
      </tags>
  </entry>
  <entry>
    <title>Navicat Premium 15激活过程</title>
    <url>/2020/02/Navicat-Premium15%E6%BF%80%E6%B4%BB%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="Navicat-Premium-15"><a class="header-anchor" href="#Navicat-Premium-15">.</a>Navicat Premium 15</h1>
<p>Navicat Premium 15提供数据库管理功能，可以帮助用户在电脑上连接远程数据库，支持MySQL、MariaDB、MongoDB、SQL Server、SQLite、Oracle等数据库管理，连接以后就可以查看数据表，可以将相关的企业数据表打开到软件查看，从而立即远程管理数据内容，也支持图表查看功能，将数据内容显示在图表上统计，内置二十多种图表可以使用，轻松创建可视化数据查看方式，让用户在管理数据、分析数据、同步数据的时候更加方便，软件提供表格新建功能，你也可以在数据表新建表格，从而编辑新的数据，将数据同步到你的数据库。</p>
<span id="more"></span>
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/navicat/NP15.jpg?x-oss-process=style/yunying61">
<h2 id="下载准备"><a class="header-anchor" href="#下载准备">.</a>下载准备</h2>
<ol>
<li>下载解压，得到64位和32位navicat premium 15原程序和Keygen激活工具；<a href="https://pan.baidu.com/s/1k3XX6iSWPCqQvSmeMweIuQ">百度云</a> 提取码: ipjp</li>
<li>以安装64位软件为例，双击文件“navicat150_premium_cs_x64.exe”安装原程序；</li>
</ol>
<h2 id="激活过程"><a class="header-anchor" href="#激活过程">.</a>激活过程</h2>
<ol>
<li>
<p>将补丁navicat_keygen_patch_v5.5_by_dfox.exe复制到安装目录并启动</p>
</li>
<li>
<p>禁止电脑网络连接，避免官方检测到激活<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/navicat/%E7%A6%81%E7%94%A8%E7%BD%91%E7%BB%9C.jpg?x-oss-process=style/yunying61"></p>
</li>
<li>
<p>在注册机上选择对应的软件，点击patch打上补丁</p>
<blockquote>
<p>这里很关键，我一开始出错也是在这个地方，<br />
首先确认版本，然后是语言，你安装的是中文版就Simplified Chinese，英文版就English，这里一定不能错，错了后面就没用了。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/navicat/NP_patch1.jpg?x-oss-process=style/yunying61"></p>
</blockquote>
</li>
<li>
<p>提示<code>navicat.exe - x64 -&gt; Cracked!.</code>时，补丁就激活成功了，点击确定。</p>
</li>
<li>
<p>将主程序打开，提示激活，点击下方的注册，进入激活界面。</p>
</li>
<li>
<p>回到注册机上，在注册机上点击generate就可以得到注册码，将其复制到软件激活界面<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/navicat/NP_patch2.jpg"></p>
</li>
<li>
<p>复制注册码到激活界面就点击activate激活软件</p>
</li>
<li>
<p>因为已经断开网络所以提示激活失败，点击右边的按钮手动激活</p>
</li>
<li>
<p>程序会显示序列号，在软件界面直接将其全部复制到注册机，然后点击左下角的generate，随后在底部显示新的激活码，将其复制到软件，点击activate（激活）就可以直接激活软件。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/navicat/NP_patch1.jpg"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>IT</category>
        <category>软件</category>
        <category>技巧</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>Navicat Premium</tag>
        <tag>激活</tag>
      </tags>
  </entry>
  <entry>
    <title>简单的文件夹加密</title>
    <url>/2020/02/%E7%AE%80%E5%8D%95%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<p>这里为大家推荐一款免费的，可以单独为文件夹设置密码的小程序[Folder-locker]。这是国人开发的一款开源加密小程序，它只有一个功能，就是给文件夹上密码，而且原理非常简单，所以不提供<abbr title="懂了原理，很简单就能解开">安全保障</abbr>。项目地址：<a href="https://github.com/Albert-W/Folder-locker">https://github.com/Albert-W/Folder-locker</a></p>
<span id="more"></span>
<h1 id="Folder-locker"><a class="header-anchor" href="#Folder-locker">.</a>Folder-locker</h1>
<blockquote><p>本文借鉴自</p>
<footer><strong>Albert-W,</strong><cite><a href="https://github.com/Albert-W/Folder-locker">Folder-locker</a></cite></footer></blockquote>
<p>这是一个小巧的文件上锁软件，没有压缩和加密过程，方便快捷。</p>
<h2 id="功能展示"><a class="header-anchor" href="#功能展示">.</a>功能展示</h2>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Folder-locker/Folder_locker.gif" alt="" /><br />
在想加密的文件夹上，右键则可呼出加密面板，输入两次密码确认加密。</p>
<p>在已加密的文件夹上，右键，输入密码，则取消加密</p>
<hr />
<h2 id="项目介绍"><a class="header-anchor" href="#项目介绍">.</a>项目介绍</h2>
<p>项目分了两个目录：</p>
<ul>
<li>DButility 用于通过轻量极数据库SQLite 保存密码。
<ul>
<li>通过Md5算法对密码加密，通过SQL参数防止SQL注入。</li>
</ul>
</li>
<li>folderLocker 用于实现业务逻辑。</li>
</ul>
<h2 id="软件使用"><a class="header-anchor" href="#软件使用">.</a>软件使用</h2>
<ul>
<li>下载软件安装包 Folder Locker.exe</li>
<li>进行安装，不建议安装在C盘，容易数据库丢失，影响解密。</li>
<li>可以右键点击<code>Folder locker</code>使用，也可以打开软件主页面使用。</li>
</ul>
<blockquote>
<p>加密过程，右键需要加密的文件夹 – Folder locker – 输入密码– lock 即可；<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Folder-locker/Folder_locked.gif" alt="" /><br />
加密后文件夹图标会变成锁，无法双击打开</p>
</blockquote>
<blockquote>
<p>解密过程，右键已加密文件夹 –  Folder locker – 输入密码– unlock 即可；<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Folder-locker/Folder_unlock.gif" alt="" /></p>
</blockquote>
<p>注意事项：<br />
整个过程没有任何数据上传，你的密码会通过Md5算法加密<br />
密码保存在本机数据库，没有上传任何服务器。<br />
删除软件会同时删除数据库，因而删除密码，导致密码丢失。</p>
<h2 id="找回密码"><a class="header-anchor" href="#找回密码">.</a>找回密码</h2>
<blockquote>
<p>如果忘记密码或者密码遗失，文件被锁，可以通过命令行工具重命名：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;cd C:\Users\91991\Music</span><br><span class="line"></span><br><span class="line">&gt;ren &quot;Test.&#123;2559a1f2-21d7-11d4-bdaf-00c04f60b9f0&#125;&quot; &quot;Test1&quot;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>先cd到你的加密文件夹地址，再输入ren “<code>你的文件夹名称</code>.{2559a1f2-21d7-11d4-bdaf-00c04f60b9f0}” “<code>解密后的文件夹名称</code>”</p>
<blockquote>
<p>这里在你输入文件夹前几个字的时候就可以按tab键自动补全接下来的代码。</p>
</blockquote>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Folder-locker/Folder_%E6%89%BE%E5%9B%9E%E5%AF%86%E7%A0%81.gif" alt="" /></p>
<p>或者把文件复制出来</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd C:\Users\91991\Music</span><br><span class="line">cd &#x27;.\Test.&#123;2559a1f2-21d7-11d4-bdaf-00c04f60b9f0&#125;\&#x27;</span><br><span class="line">ls</span><br><span class="line">mv .\* ..\Test1\</span><br></pre></td></tr></table></figure>
<h2 id="软件原理"><a class="header-anchor" href="#软件原理">.</a>软件原理</h2>
<p>这个程序原理非常简单，就是利用 Windows 的注册表修改了文件夹属性，使其不能直接已文件夹的形式打开，就像「上帝模式」一样，小程序并没有对文件夹内的文件做任何修改，没有压缩和加密过程，所以速度非常快。</p>
<p>但也正因为其简单，知道原理的话不需要程序也能解密。</p>
<p>正因如此，它的安全系数不高，不适用来加密非常重要的机密文件，但保护普通用户的小秘密应该是搓搓有余的。</p>
<p>目前这款软件好像在 Windows 2004 版本上失效了，期待作者继续更新。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>Windows</category>
        <category>软件</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>文件夹</tag>
        <tag>加密</tag>
      </tags>
  </entry>
  <entry>
    <title>对图片进行引用的总结</title>
    <url>/2020/02/%E5%AF%B9%E5%9B%BE%E7%89%87%E8%BF%9B%E8%A1%8C%E5%BC%95%E7%94%A8%E7%9A%84%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="通过外链"><a class="header-anchor" href="#通过外链">.</a>通过外链</h1>
<p>Markdown的语法格式如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">alt 属性文本</span>](<span class="link">图片地址</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">alt 属性文本</span>](<span class="link">图片地址 &quot;可选标题&quot;</span>)  </span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>开头一个感叹号 !<br />
接着一个方括号，里面放上图片的替代文字<br />
接着一个普通括号，里面放上图片的网址<br />
最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</p>
<p>使用实例：<br />
<img data-src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标" /></p>
<p><img data-src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标" title="RUNOOB" /></p>
<p>当然，你也可以像网址那样对图片网址使用变量。<br />
Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <code>&lt;img&gt;</code> 标签。<br />
<img data-src="http://static.runoob.com/images/runoob-logo.png" width="50%"><br />
<img data-src="../img/logo.Runoob.png" width="258" height="39" alt="Runoob.com"><br />
alt属性，用于在找不到图片时，显示的文字</p>
<h1 id="直接引用-2"><a class="header-anchor" href="#直接引用-2">.</a>直接引用</h1>
<p>如果 Hexo 项目中只有少量图片，那最简单的方法就是将它们放在 source/images 文件夹中，然后通过以下方法引用：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">NP15</span>](<span class="link">/images/NP15.jpg</span>)</span><br></pre></td></tr></table></figure>
<h1 id="通过-文章资源文件夹的路径-引用"><a class="header-anchor" href="#通过-文章资源文件夹的路径-引用">.</a>通过 文章资源文件夹的路径 引用</h1>
<p>将 config.yml 文件中的 post_asset_folder 选项设为 true 来打开。<br />
当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new layout title </code>命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p>
<h2 id="引用的代码-2"><a class="header-anchor" href="#引用的代码-2">.</a>引用的代码</h2>
<p>在不使用插件的情况下进行引用(开启了“post_asset_folder”文章资源文件夹)</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">patch 3</span>](<span class="link">./NP15.jpg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% asset<span class="emphasis">_img &quot;patch 2.jpg&quot; %&#125;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里要注意，(./NP15.jpg)这种格式不能使用空格，空格会导致无法识别，图片无法加载。例如：(./patch 2.jpg)这是错误的。</p>
</blockquote>
<p>在使用hexo-asset-image<a href="https://blog.csdn.net/xjm850552586/article/details/84101345">参考链接1</a>,<a href="https://blog.csdn.net/Strong997/article/details/97767929">参考链接2</a>插件的情况下进行引用(开启了“post_asset_folder”文章资源文件夹)</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">NP15</span>](<span class="link">2020-02-16-试验组-1/NP15.jpg</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里同样要注意，(2020-02-16-试验组-1/NP15.jpg)这种格式也不能使用空格，空格会导致无法识别，图片无法加载。例如：(2020-02-16-试验组-1/patch 2.jpg)这是错误的。</p>
</blockquote>
<p>总结：既然加了插件也就增加了一种引用的方法，那还不如少加个插件，只用剩下的两种。当然，还可以使用外链，那就另算了。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>博客</category>
        <category>个人</category>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB数据库 安装与配置</title>
    <url>/2020/02/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="下载准备-2"><a class="header-anchor" href="#下载准备-2">.</a>下载准备</h2>
<p><a href="https://www.mongodb.com/">MongoDB官方</a>的<a href="https://www.mongodb.com/download-center/community">下载地址</a></p>
<span id="more"></span>
<h2 id="写在前面"><a class="header-anchor" href="#写在前面">.</a>写在前面</h2>
<p>这里，我将介绍Windows版和Linux版的搭建过程。</p>
<a class="btn" href="#Windows版安装">Windows版</a>
<a class="btn" href="#Linux版安装">Linux版</a>
<h2 id="Windows版"><a class="header-anchor" href="#Windows版">.</a>Windows版</h2>
<ol>
<li>
<p>运行mongodb-windows-x86_64-4.4.2-signed.msi进行安装（本文默认解压到了 C:\MongoDB\Server\4.2）。</p>
<p>安装比较容易，但有一个关键是，不要安装<code>MongoDB Compass</code>，这是MongoDB的官方图形用户界面，很大，下载速度很慢，而且有其他更好的替代品。</p>
<p>难点在配置文件，启动Mongodb的服务以及将MongoDB设置成Windows服务，加载配置文件在windows的“服务”中找到。</p>
<p>关于网上教程中普遍推荐新建一个data文件夹等等一些操作，我的看法是可有可无，因为到了我这个版本，mongodb会自己创建这些东西。当然，如果为了方便寻找数据库和日志，自己建一个也可以。</p>
<blockquote>
<p>这里我就简单描述一下：<br />
（这里我默认在 C:\MongoDB\ 创建了文件夹）<br />
C:\MongoDB\data\log目录，用来存放日志文件；<br />
C:\MongoDB\Server\4.2\log\mongodb.log 里的 mongodb.log ，用来存放日志信息；<br />
C:\MongoDB\Server\4.2\data\db目录，用来存放数据库数据。</p>
</blockquote>
</li>
<li>
<p>在C:\MongoDB\Server\4.2\data目录下创建<code>db</code>文件夹(因为默认安装中没有这个文件夹，但后面要用)<br />
在C:\MongoDB\Server\4.2目录下创建mongo.config，在文件内部复制如下文本：</p>
 <figure class="highlight plaintext"><figcaption><span>mongo.config</span><a href="/downloads/code/mongo.config">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line">#端口号 默认为27017</span><br><span class="line">port=27017 </span><br><span class="line"></span><br><span class="line">##数据文件  此处=后对应到数据所存放的目录</span><br><span class="line">dbpath=C:\MongoDB\Server\4.2\data\db</span><br><span class="line"></span><br><span class="line">##日志文件  此处=后对应到日志文件所在路径</span><br><span class="line">logpath=C:\MongoDB\Server\4.2\log\mongodb.log</span><br><span class="line"></span><br><span class="line">#启用日志文件，默认启用，每次写入会记录一条操作日志（通过journal可以重新构造出写入的数据）。</span><br><span class="line">journal=true </span><br><span class="line"></span><br><span class="line">##错误日志采用追加模式，配置这个选项后mongodb的日志会追加到现有的日志文件，而不是从新创建一个新文件</span><br><span class="line">logappend=true </span><br><span class="line"></span><br><span class="line">#这个选项可以过滤掉一些无用的日志信息，若需要调试使用请设置为false</span><br><span class="line">quiet=true </span><br><span class="line"></span><br><span class="line">#这样就可外部访问了，例如从win10中去连虚拟机中的MongoDB</span><br><span class="line">bind_ip = 0.0.0.0</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>安装服务<br />
用<code>管理员权限</code>打开cmd命令行，输入如下命令安装mongodb服务：</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sc create MongoDB binPath= &quot;C:\MongoDB\Server\4.2\bin\mongod.exe --service --config=C:\MongoDB\Server\4.2\mongo.config&quot; </span><br></pre></td></tr></table></figure>
<p>如果一直显示<code>[SC] CreateService 失败 1072:指定的服务已标记为删除。</code>，那请先退出<code>服务</code>那个窗口，因为那个占用“频道”了。<br />
再 <code>cd</code> 进入C:\MongoDB\Server\4.2\bin文件夹，使用如下命令：</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd C:\MongoDB\Server\4.2\bin</span><br><span class="line"></span><br><span class="line">mongod --config C:\MongoDB\Server\4.2\mongo.config --install --serviceName &quot;MongoDB&quot;</span><br></pre></td></tr></table></figure>
<p>继续使用如下命令：</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongod --logpath &quot;C:\MongoDB\Server\4.2\log\mongodb.log&quot; --logappend --dbpath &quot;C:\MongoDB\Server\4.2\data\db&quot; --serviceName &quot;MongoDB&quot; --install</span><br></pre></td></tr></table></figure>
</li>
</ol>
<hr />
<p>​	然后在cmd里输入<code>services.msc</code>打开服务管理器，找到MongoDB服务，设置成自动启动，并启动。</p>
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/leanote/mongodb.png?x-oss-process=style/yunying61">
<p>​	如果启动不成功，先删除服务，使用如下命令：</p>
<p>​	<code>sc delete MongoDB</code></p>
<p>​	然后再从第2步开始，重新排查各种配置项及操作</p>
<hr />
<ol start="4">
<li>
<p>测试是否安装成功<br />
进入C:\MongoDB\Server\4.2\bin文件夹下，点击mongod.exe，如果闪一下退出，说明安装正常。<br />
然后在浏览器里访问这个地址<a href="http://localhost:27017/">http://localhost:27017/</a><br />
如果显示了</p>
<blockquote>
<p>It looks like you are trying to access MongoDB over HTTP on the native driver port.</p>
</blockquote>
<p>说明服务和端口正常。</p>
</li>
</ol>
<hr />
<h3 id="配置环境变量（可省略）"><a class="header-anchor" href="#配置环境变量（可省略）">.</a>配置环境变量（可省略）</h3>
<ul>
<li>如果不配置环境变量，在使用mongo命令时要先 <code>cd</code> 进入C:\MongoDB\Server\4.2\bin 目录才能使用命令</li>
<li>通过配置环境变量的方式，让mongo命令在所有文件夹内都可以访问<br />
在系统变量中找到path，双击打开后在变量值中的末尾增加输入<code>C:\MongoDB\Server\4.2\bin;</code>即可<br />
(Win10则双击打开后点击“<code>编辑文本</code>”同样在变量值中的末尾增加输入)！</li>
</ul>
<h3 id="远程连接MongoDB数据库（Windows版）"><a class="header-anchor" href="#远程连接MongoDB数据库（Windows版）">.</a>远程连接MongoDB数据库（Windows版）</h3>
<p>打开bin目录中的mongod.cfg文件进行编辑，其中bindIp:127.0.0.1改为0.0.0.0 不然别的地方访问不了，<br />
取消security的<code>#</code>注释符，并添加authorization:enabled</p>
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/leanote/mongod-cfg.jpg?x-oss-process=style/yunying61">
<p>然后以管理员身份在bin目录下执行如下命令，使配置生效</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongod --config &quot;C:\MongoDB\Server\4.2\bin\mongod.cfg&quot; --install</span><br></pre></td></tr></table></figure>
<p>然后重启MongoDB服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net stop mongodb		// 先关闭mongodb</span><br><span class="line">net start mongodb		// 后开启mongodb</span><br></pre></td></tr></table></figure>
<p>这里设置了0.0.0.0允许远程访问，所以最好加一层验证，添加一个mongo用户进行管理。<br />
在bin目录打开cmd输入<code>mongo</code>执行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd C:\MongoDB\Server\4.2\bin</span><br><span class="line"></span><br><span class="line">mongo</span><br><span class="line"></span><br><span class="line">use admin</span><br></pre></td></tr></table></figure>
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  db.createUser(&#123;</span><br><span class="line">  &quot;user&quot;:&quot;admin&quot;,&quot;pwd&quot;:&quot;password&quot;,</span><br><span class="line">    &quot;roles&quot;:[</span><br><span class="line">      &#123;role:&quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot;&#125;, </span><br><span class="line">&#123;role:&quot;readWriteAnyDatabase&quot;, db: &quot;admin&quot;&#125; </span><br><span class="line">  ]&#125;);</span><br></pre></td></tr></table></figure>
</blockquote>
<p>这里就添加了一个admin的用户，密码为password</p>
<div class="note warning"><p>另外远程访问的话，记得开启安全组和防火墙端口，可能会因为这个导致全盘皆输</p>
</div>
<h2 id="Linux版"><a class="header-anchor" href="#Linux版">.</a>Linux版</h2>
<h3 id="解压MongoDB压缩包"><a class="header-anchor" href="#解压MongoDB压缩包">.</a>解压MongoDB压缩包</h3>
<p>假设已将文件下载到 <code>/home/</code> 目录下，打开<code>终端</code>，通过使用下面的命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"></span><br><span class="line">tar -xzvf mongodb-linux-x86_64-rhel80-5.0.6.tgz</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> /home/mongodb-linux-x86_64-rhel80-5.0.6.tgz /home/software/mongodb-5.0.6</span><br></pre></td></tr></table></figure>
<p>解压文件，从而在 <code>/home/software</code> 目录下生成 <code>mongodb-5.0.6</code>目录</p>
<hr />
<h3 id="配置MongoDB"><a class="header-anchor" href="#配置MongoDB">.</a>配置MongoDB</h3>
<p>为了快速使用<code>mongodb</code>命令, 可以配置环境变量。</p>
<p>编辑 <code>~/.profile</code>或<code>/etc/profile</code> 文件， 将<code>mongodb/bin</code>路径加入即可，打开<code>终端</code>，输入命令:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure>
<p>在<code>/etc/profile</code>中，按<code>i</code>进入编辑模式，在最下面添加以下行，注意路径：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/home/software/mongodb-5.0.6/bin</span><br></pre></td></tr></table></figure>
<p>按<code>ESC</code>退出编辑模式，再输入<code>:wq</code>保存修改后，在终端运行以下命令使环境变量生效:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>
<div class="note info"><p>注意：建议重启一下，不然，每新打开一个终端，都要输入<code>source /etc/profile</code>才能使用mongo命令</p>
</div>
<p>然后，是建立数据库的存放位置和日志文件的存放位置，在终端运行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//用于存放数据库</span><br><span class="line"><span class="built_in">mkdir</span> -p /home/data/mongo-db</span><br><span class="line"></span><br><span class="line">//用于存放日志文件</span><br><span class="line"><span class="built_in">mkdir</span> -p /home/data/mongo-log</span><br></pre></td></tr></table></figure>
<p>接着，在<code>/home/software/mongodb-5.0.6</code>目录下新建一个名为 <code>mongodb.conf</code> 的配置文件，写入如下配置内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim mongodb.conf</span><br></pre></td></tr></table></figure>
<p>按<code>i</code>进入编辑模式，按<code>ESC</code>退出编辑模式，再输入<code>:wq</code>保存修改。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#端口</span><br><span class="line">port=27017</span><br><span class="line"></span><br><span class="line">#默认127.0.0.1为只允许本地连接；0.0.0.0为不限制；多个指定服务器用&quot;,&quot;连接</span><br><span class="line">bind_ip=127.0.0.1</span><br><span class="line"></span><br><span class="line">#数据库存文件存放目录 </span><br><span class="line">dbpath=/home/data/mongo-db</span><br><span class="line"></span><br><span class="line">#日志文件</span><br><span class="line">logpath=/home/data/mongo-log/mongodb.log</span><br><span class="line"></span><br><span class="line">#使用追加的方式写日志</span><br><span class="line">logappend=true</span><br><span class="line"></span><br><span class="line">#以守护程序的方式启用，即在后台运行</span><br><span class="line">fork=true</span><br><span class="line"></span><br><span class="line">#最大同时连接数</span><br><span class="line">maxConns=100</span><br><span class="line"></span><br><span class="line">#不启用验证</span><br><span class="line">noauth=true</span><br><span class="line"></span><br><span class="line">#每次写入会记录一条操作日志（通过journal可以重新构造出写入的数据）。</span><br><span class="line">#即使宕机，启动时wiredtiger会先将数据恢复到最近一次的checkpoint点，然后重放后续的journal日志来恢复。</span><br><span class="line">journal=true</span><br><span class="line"></span><br><span class="line">#存储引擎有mmapv1、wiretiger、mongorocks</span><br><span class="line">storageEngine=wiredTiger</span><br></pre></td></tr></table></figure>
<p>用以下命令启动<code>mongodb</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongod --config /home/software/mongodb-5.0.6/mongodb.conf</span><br></pre></td></tr></table></figure>
<p>这时<code>mongod</code>已经启动了（这代表mongodb已经开始在后台运行）</p>
<h3 id="测试mongodb安装"><a class="header-anchor" href="#测试mongodb安装">.</a>测试mongodb安装</h3>
<p>继续在终端输入<code>mongo</code>进入交互程序：</p>
<p><code>mongo</code></p>
<p>行首出现 &gt; 表示进入mongo的交互程序，此时输入：</p>
<p><code>show dbs;</code></p>
<blockquote>
<p>出现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;admin    0.000GB</span><br><span class="line">&gt;config   0.000GB</span><br><span class="line">&gt;local    0.000GB</span><br></pre></td></tr></table></figure>
<p>即安装成功</p>
</blockquote>
<h2 id="关于-MongoDB用户-的命令"><a class="header-anchor" href="#关于-MongoDB用户-的命令">.</a>关于 MongoDB用户 的命令</h2>
<figure class="highlight txt"><figcaption><span>MongoDB用户命令.txt</span><a href="/downloads/code/MongoDB用户命令.txt">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line">show dbs        查看数据库</span><br><span class="line">use dbname      进入数据库</span><br><span class="line">show users      查看当前数据库用户权限</span><br><span class="line">创建用户</span><br><span class="line">db.createUser({user:&quot;usertest&quot;,pwd:&quot;passtest&quot;,roles:[  {role:&quot;clusterAdmin&quot;, db:&quot;admin&quot; }, {role:&quot;readAnyDatabase&quot;,db:&quot;admin&quot; }, {role:&quot;readWrite&quot;,db:&quot;testDB&quot; } ]})</span><br><span class="line">权限详解</span><br><span class="line">内建角色：</span><br><span class="line">数据库用户角色：    read、readWrite；</span><br><span class="line">数据库管理角色：    dbAdmin、dbOwner、userAdmin；</span><br><span class="line">集群管理角色：      clusterAdmin、clusterManager、clusterMonitor、hostManager；</span><br><span class="line">备份恢复角色：      backup、restore；</span><br><span class="line">所有数据库角色：    readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase</span><br><span class="line">超级用户角色：      root；  这里还有几个角色间接或直接提供了系统超级用户的访问（dbOwner 、userAdmin、userAdminAnyDatabase）</span><br><span class="line">内部角色：          __system；</span><br><span class="line">------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">角色说明：</span><br><span class="line">Read：                      允许用户读取指定数据库</span><br><span class="line">readWrite：                 允许用户读写指定数据库</span><br><span class="line">dbAdmin：                   允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile</span><br><span class="line">userAdmin：                 允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户</span><br><span class="line">dbOwner：                   允许在当前DB中执行任意操作</span><br><span class="line">readAnyDatabase：           赋予用户所有数据库的读权限，只在admin数据库中可用</span><br><span class="line">readWriteAnyDatabase：      赋予用户所有数据库的读写权限，只在admin数据库中可用</span><br><span class="line">userAdminAnyDatabase：      赋予用户所有数据库管理User的权限，只在admin数据库中可用</span><br><span class="line">dbAdminAnyDatabase：        赋予管理所有数据库的权限，只在admin数据库中可用</span><br><span class="line">root：                      超级账号，超级权限，只在admin数据库中可用。</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">集群管理角色：</span><br><span class="line">clusterAdmin：                 赋予管理集群的最高权限，只在admin数据库中可用</span><br><span class="line">clusterManager：               赋予管理和监控集群的权限</span><br><span class="line">clusterMonitor：               赋予监控集群的权限，对监控工具具有readonly的权限</span><br><span class="line">hostManager：                  赋予管理Server</span><br><span class="line"></span><br><span class="line">修改密码</span><br><span class="line">方法1：db.changeUserPassword(&quot;usertest&quot;,&quot;changepass&quot;);</span><br><span class="line">方法2：db.updateUser(&quot;usertest&quot;,{pwd:&quot;changepass1&quot;})；</span><br><span class="line"></span><br><span class="line">修改权限</span><br><span class="line">db.updateUser(&quot;usertest&quot;,{roles:[ {role:&quot;read&quot;,db:&quot;testDB&quot;} ]})</span><br><span class="line"></span><br><span class="line">注：updateuser它是完全替换之前的值，如果要新增或添加roles而不是代替它 </span><br><span class="line">则使用方法： db.grantRolesToUser() 和 db.revokeRolesFromUser(）</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">修改权限</span><br><span class="line">db.grantRolesToUser(&quot;usertest&quot;, [{role:&quot;readWrite&quot;, db:&quot;testDB&quot;},{role:&quot;read&quot;, db:&quot;testDB&quot;}])</span><br><span class="line">删除权限</span><br><span class="line">db.revokeRolesFromUser(&quot;usertest&quot;,[{role:&quot;read&quot;, db:&quot;testDB&quot;}])</span><br></pre></td></tr></table></figure>
<h2 id="MongoDB命令"><a class="header-anchor" href="#MongoDB命令">.</a>MongoDB命令</h2>
<figure class="highlight txt"><figcaption><span>mongodb.txt</span><a href="/downloads/code/mongodb.txt">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line">这是mongodb的一些命令： </span><br><span class="line"></span><br><span class="line">mongo   </span><br><span class="line">	运行mongo</span><br><span class="line"></span><br><span class="line">以下命令要运行mongo以后才能用</span><br><span class="line"></span><br><span class="line">db	</span><br><span class="line">	显示当前的数据库名称</span><br><span class="line"></span><br><span class="line">show dbs	</span><br><span class="line">	显示当前服务器下数据库（非空的数据库）列表</span><br><span class="line"></span><br><span class="line">use test	</span><br><span class="line">	如果test数据库不存在，则创建test数据库</span><br><span class="line">	如果test已存在，则切换到test数据库</span><br><span class="line"></span><br><span class="line">show collections	</span><br><span class="line">	显示当前数据库下所包含的集合（表）列表</span><br><span class="line"></span><br><span class="line">db.users.insert({name:&#x27;zhangsha&#x27;})	</span><br><span class="line">	向users集合中插入数据</span><br><span class="line">	如果users集合存在，则直接插入数据，如果不存在，则创建users集合再插入数据</span><br><span class="line"></span><br><span class="line">db.createCollection(&#x27;products&#x27;)</span><br><span class="line">	创建一个空集合products</span><br><span class="line"></span><br><span class="line">db.products.insert([{name:&#x27;lishi&#x27;},{name:&#x27;wangwu&#x27;}])		</span><br><span class="line">	一次插入多个数据</span><br><span class="line"></span><br><span class="line">db.products.find()</span><br><span class="line">	查询products集合中所有的数据</span><br><span class="line"></span><br><span class="line">db.products.find({name:&#x27;苹果手机&#x27;})</span><br><span class="line">	查询stu集合中name=&#x27;苹果手机&#x27;的数据</span><br><span class="line"></span><br><span class="line">db.products.find({name:{$eq:&#x27;苹果手机&#x27;}})</span><br><span class="line">	同上，$eq=&gt;等号，建议使用上面的方式，易记，易输入</span><br><span class="line">	eq = equal</span><br><span class="line"></span><br><span class="line">db.products.find({price:{$gt:18}})</span><br><span class="line">	查询stu集合中age&gt;18的数据  </span><br><span class="line"> 	把$gt换成如下的符号试试：</span><br><span class="line">    $gt=&gt;大于   great</span><br><span class="line">    $gte=&gt;大于等于 great equal</span><br><span class="line">    $lt=&gt;小于   less than</span><br><span class="line">    $lte=&gt;小于等于 less than equal</span><br><span class="line">    $ne=&gt;不等于  not equal</span><br><span class="line">    $in=&gt;在范围内</span><br><span class="line">    $nin=&gt;不在范围内</span><br><span class="line">	以上几个符号格式总结为：{ field: {符号: value}}</span><br><span class="line"></span><br><span class="line">db.products.find({name:/^华为/})</span><br><span class="line">	查找stu集合中name域中以“华为”字符的开头的数据</span><br><span class="line"></span><br><span class="line">db.products.find({name:{$in:[&#x27;手机1&#x27;,&#x27;手机2&#x27;]}})</span><br><span class="line">	查询stu集合中name=&#x27;手机1&#x27;和name=&#x27;手机2&#x27;的数据</span><br><span class="line">$in=&gt;在范围内</span><br><span class="line">$nin=&gt;不在范围内</span><br><span class="line">	以上两个符号格式为：{ field:{符号:[value1,value2,....]}}</span><br><span class="line"></span><br><span class="line">db.products.find({name:&quot;华为手机&quot;,price:800})</span><br><span class="line">	查找name=&quot;华为手机&quot;并且price:800的数据</span><br><span class="line"></span><br><span class="line">db.products.find({$or:[{name:&#x27;华为手机&#x27;},{price:{$lt:1000}}]})</span><br><span class="line">	查询products集合中name=&#x27;华为手机&#x27; 或者 price&lt;1000的数据</span><br><span class="line">    $or=&gt;或者  注意$or:[{},{},....]</span><br><span class="line">    $and=&gt;并且  格式同$or, 例：{$and:[{},{},....]}</span><br><span class="line">    $nor=&gt;not or 与$or相反， 格式同$or</span><br><span class="line"></span><br><span class="line">db.products.find({price:{$not:{$gt:100}}})</span><br><span class="line">	查询products集合中price&lt;=100的数据，不存在price属性的数据也会查询出来</span><br><span class="line">    $not=&gt;取反 </span><br><span class="line"></span><br><span class="line">db.products.find({price:{$exists: true}})</span><br><span class="line">	查询products集合中包含域名称为price的数据</span><br><span class="line"></span><br><span class="line">db.products.find({name:{$type:2}})</span><br><span class="line">	查询products集合中name属性为字符串类型的数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db.products.find({</span><br><span class="line">	$where: function(){</span><br><span class="line">		return this.name == &#x27;华为手机&#x27;</span><br><span class="line">	}</span><br><span class="line">})</span><br><span class="line">	查询products集合中name=&#x27;华为手机’的数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db.products.find({</span><br><span class="line">	$where: function(){</span><br><span class="line"> 		return  this.name.indexOf(&#x27;华为手机&#x27;) &gt; -1;</span><br><span class="line">	}</span><br><span class="line">})</span><br><span class="line">	查询products集合中name域中包含“华为手机”字符的数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db.products.update({name:&#x27;华为手机&#x27;},{$set:{price:2000}},{</span><br><span class="line">	upsert: true,</span><br><span class="line">	multi:false</span><br><span class="line">})</span><br><span class="line">	把products集合中name=&#x27;华为手机&#x27;的那条数据，把price属性设置成2000，其它属性保留</span><br><span class="line">    $set是指更改的属性列表，不在列表中其他属性会被保留，如果不加此符号，其它属性会被丢弃（_id属性比较特殊，不会丢失）</span><br><span class="line">    upsert:true如果没有符号条件的更新时，则插入一条，为false时，则不会插入, 默认是false</span><br><span class="line">    multi:false一次只能更新一条数据，为true时，可更新多条，默认是false</span><br><span class="line"></span><br><span class="line">db.students.remove({})</span><br><span class="line">	清空集合students</span><br><span class="line"></span><br><span class="line">db.products.remove({name:&#x27;abc&#x27;})</span><br><span class="line">	删除products集合中name=&#x27;abc&#x27;的数据，注意，即使把集合products中的所有数据都删除了</span><br><span class="line">	products集合仍然存在， remove()是用来删除数据的，而drop()不仅会删除数据，还会把集合的结构给删除</span><br><span class="line"></span><br><span class="line">db.products.drop()</span><br><span class="line">	把stu集合彻底从当前数据中删除，集合stu不再存在，注意与remove()的区别</span><br><span class="line"></span><br><span class="line">db.dropDatabase()</span><br><span class="line">	删除当前数据库</span><br><span class="line"></span><br><span class="line">db.users.distinct(&#x27;name&#x27;)</span><br><span class="line">	查询users集合中不重复的name属性，返回的是数组</span><br><span class="line"></span><br><span class="line">db.stu.count({name:&#x27;zhangshan&#x27;})</span><br><span class="line">	查询stu集合中name=&#x27;zhangshan&#x27;的数据数量</span><br><span class="line"></span><br><span class="line">db.stu.find().limit(5)</span><br><span class="line">	查询stu集合中前5条数据</span><br><span class="line"></span><br><span class="line">db.stu.find().skip(5)</span><br><span class="line">	查询stu集合中跳过前5条后的数据</span><br><span class="line"></span><br><span class="line">db.stu.find().sort({name:1})</span><br><span class="line">	查询stu集合中的全部数据，并按name属性正序排列  注：1：正序 -1: 倒序</span><br><span class="line"></span><br><span class="line">由于mongodb的api接口方法很多，除以上命令外，其他的命令请多看官方文档</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>IT</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>配置</tag>
        <tag>MongoDB</tag>
        <tag>数据库</tag>
        <tag>安装</tag>
      </tags>
  </entry>
  <entry>
    <title>在Windows右键菜单中添加‘打开cmd命令’</title>
    <url>/2020/02/%E5%9C%A8Windows%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E4%B8%AD%E6%B7%BB%E5%8A%A0%E6%89%93%E5%BC%80cmd%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="在右键菜单中添加‘打开cmd命令’"><a class="header-anchor" href="#在右键菜单中添加‘打开cmd命令’">.</a>在右键菜单中添加‘打开cmd命令’</h1>
<p>对于有些操作，cmd命令的使用频率也是很高的，而且还有很多的操作需要进入指定的文件夹目录，这就让人非常不爽了💢。毕竟我们不希望每次都要输入一长串命令，只是为了进入一个文件夹而已，所以在右键中添加一个“打开cmd的命令”是解决问题的一个好方法😎。</p>
<span id="more"></span>
<h1 id="操作"><a class="header-anchor" href="#操作">.</a>操作</h1>
<blockquote>
<p>新建一个文本文档，打开编辑，输入下面的代码，<abbr title="或者重命名为xxx.reg的文件">保存为 .reg 的文件</abbr>，并运行</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\background\shell\在此处打开命令行]</span><br><span class="line"></span><br><span class="line">@=&quot;在此处打开命令行&quot;</span><br><span class="line">&quot;Icon&quot;=&quot;cmd.exe&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\background\shell\在此处打开命令行\command]</span><br><span class="line"></span><br><span class="line">@=&quot;\&quot;C:\\Windows\\System32\\cmd.exe\&quot;&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\cmdPrompt]</span><br><span class="line"></span><br><span class="line">@=&quot;在此处打开命令行&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\cmdPrompt\command]</span><br><span class="line"></span><br><span class="line">@=&quot;\&quot;C:\\Windows\\System32\\cmd.exe\&quot; \&quot;cd %1\&quot;&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\shell\cmd_here]</span><br><span class="line"></span><br><span class="line">@=&quot;在此处打开命令行&quot;</span><br><span class="line">&quot;Icon&quot;=&quot;cmd.exe&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\shell\cmd_here\command]</span><br><span class="line"></span><br><span class="line">@=&quot;\&quot;C:\\Windows\\System32\\cmd.exe\&quot;&quot;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>Windows</category>
        <category>软件</category>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>cmd</tag>
        <tag>右键菜单</tag>
        <tag>Windows</tag>
        <tag>命令提示符</tag>
      </tags>
  </entry>
  <entry>
    <title>leanote蚂蚁笔记-私人云笔记服务器搭建</title>
    <url>/2020/02/leanote%E8%9A%82%E8%9A%81%E7%AC%94%E8%AE%B0-%E7%A7%81%E4%BA%BA%E4%BA%91%E7%AC%94%E8%AE%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="leanote蚂蚁笔记"><a class="header-anchor" href="#leanote蚂蚁笔记">.</a>leanote蚂蚁笔记</h1>
<p>目前在知识管理/笔记类软件领域有强大的印象笔记 (Evernote)、微软（OneNote）、国产的（为知笔记）、（有道云笔记）以及（讯飞语记）等都是非常优秀的产品，但总有一部分人会觉得“把自己的笔记放在别人兜里，心里不踏实”。<br />
我一开始用的也是讯飞语记，刚开始还不懂，只是被它的语音识别和云同步所吸引。后来懂的越来越多，愈发觉得自己的一些笔记还是不要放别人的数据库里。碰巧，在阿里云的一篇学习文章里，我发现了leanote，于是乎，我也就进入了私人云笔记时代！</p>
<span id="more"></span>
<p>个人对leanote的理解：<br />
简约、免费、开源、支持 Markdown 语法，支持程序代码高亮、笔记历史记录、支持笔记分享协作、将笔记发布成博客、云同步、多终端兼容(Windows、Mac、iOS、Linux、Android)，最关键的：搭建私人云笔记。</p>
<h2 id="介绍"><a class="header-anchor" href="#介绍">.</a>介绍</h2>
<p>Leanote, 不只是笔记!</p>
<p>Leanote 蚂蚁笔记是一款国产的在线网页版云笔记软件，集知识管理、笔记、分享、博客功能于一身，界面简约但功能不简单！</p>
<p>该项目采用 Golang+MongoDB 开发，现已完全开源并能免费使用。普通用户可以直接使用 Leanote 提供的公共服务，也可以自行搭建属于自己或公司局域网内的私有云笔记平台。</p>
<p><strong>特性</strong></p>
<ul>
<li>高效笔记：Leanote 有易操作的界面, 包含富文本编辑器和Markdown编辑器，让您的笔记记录更轻松和高效。对高阶用户，还提供Vim和Emacs编辑模式，助推你的写作速度更上层楼。</li>
<li>知识管理: Leanote 灵活而强大的“笔记本-笔记-标签”系统，让它成为你个人知识管理的利器。</li>
<li>分享: 你可以通过Leanote同好友分享知识、想法和经历, 邀请好友加入你的笔记簿，通过云端交流信息。</li>
<li>协作: Leanote协助你与同事之间相互协作，激荡新思路，随时随地头脑风暴。</li>
<li>博客: Leanote也可以作为你的个人博客, 把你的知识传播的更远!</li>
</ul>
<p><strong>其它特性</strong></p>
<ul>
<li>支持Markdown编辑</li>
<li>写作模式</li>
<li>Vim 及 Emacs 编辑模式</li>
<li>支持PDF导出</li>
<li>支持批量操作</li>
<li>博客自定义主题, 实现高度定制化</li>
</ul>
<h2 id="leanote"><a class="header-anchor" href="#leanote">.</a>leanote</h2>
<h2 id="下载准备-3"><a class="header-anchor" href="#下载准备-3">.</a>下载准备</h2>
<p>搭建leanote需要，<code>leanote</code>本体和<code>MongoDB</code>数据库支持。</p>
<p>首先，是<a href="https://leanote.com/">leanote官方</a>的<a href="http://leanote.org/#download">下载地址</a>，<a href="https://www.mongodb.com/">MongoDB官方</a>的<a href="https://www.mongodb.com/download-center/community">下载地址</a>，用这个可以马上使用到最新的产品。</p>
<p>然后，如果大家不想那么麻烦的去官方那里下载，或者官方链接已经丢失，可以私聊我获取文件。</p>
<h2 id="写在前面-2"><a class="header-anchor" href="#写在前面-2">.</a>写在前面</h2>
<p>这里，我将介绍Windows版和Linux版的搭建过程。</p>
<a class="btn" href="#Windows版安装">Windows版</a>
<a class="btn" href="#Linux版安装">Linux版</a>
<h2 id="Windows版安装"><a class="header-anchor" href="#Windows版安装">.</a>Windows版安装</h2>
<p>1、将下载的文件里面的leanote-windows-amd64-v2.6.1.bin.tar.gz文件解压到C盘（本文默认解压到了 <strong>C:\leanote</strong>）。<br />
2、运行mongodb-windows-x86_64-4.4.2-signed.msi进行安装（本文默认解压到了 <strong>C:\MongoDB\Server\4.2</strong>）。<br />
接下来的MongoDB的配置<strong>极其麻烦</strong>，这里我放到另一篇文章里，<a href="/2020/02/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/" title="MongoDB数据库 安装与配置">MongoDB数据库 安装与配置</a></p>
<hr />
<h3 id="测试mongodb安装-2"><a class="header-anchor" href="#测试mongodb安装-2">.</a>测试mongodb安装</h3>
<p>打开cmd，输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd C:\MongoDB\Server\4.2\bin</span><br><span class="line">mongo</span><br></pre></td></tr></table></figure>
<p>行首出现&gt; 表示进入mongo 的交互程序。此时输入：</p>
<p><code>show dbs</code></p>
<blockquote>
<p>出现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;show dbs</span><br><span class="line">&gt;admin    0.000GB</span><br><span class="line">&gt;config   0.000GB</span><br><span class="line">&gt;local    0.000GB</span><br></pre></td></tr></table></figure>
<p>即安装成功</p>
</blockquote>
<p>这个窗口可以先不要关</p>
<h3 id="导入初始数据"><a class="header-anchor" href="#导入初始数据">.</a>导入初始数据</h3>
<p>打开新cmd， 运行以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd C:\MongoDB\Server\4.2\bin</span><br><span class="line">mongorestore -h localhost -d leanote --dir C:\leanote\mongodb_backup\leanote_install_data</span><br></pre></td></tr></table></figure>
<p>出现  “499 document(s) restored successfully. 0 document(s) failed to restore.”  表示结束，这样就完成了数据的导入</p>
<p>在刚才没关闭的窗口里，你再次使用show dbs命令时就会显示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show dbs</span><br><span class="line">admin    0.000GB</span><br><span class="line">config   0.000GB</span><br><span class="line">leanote  0.002GB</span><br><span class="line">local    0.000GB</span><br></pre></td></tr></table></figure>
<div class="note info"><p>有时候leanote的数据库名字不是<code>leanote</code>，而是 <code>ir</code>那后面的配置文件里的数据库名字也要跟着改变</p>
</div>
<h3 id="添加leanote数据库用户"><a class="header-anchor" href="#添加leanote数据库用户">.</a>添加leanote数据库用户</h3>
<p>像MySQL一样MongoDB也有root用户, mongodb初始是没有用户的, 这样很不安全, 所以要为leanote数据库新建一个用户来连接leanote数据库(注意, 并不是为leanote的表users里新建用户, 而是新建一个连接leanote数据库的用户, 类似数据库 表管理员).</p>
<p>打开cmd，进入bin目录，然后输入mongo进入数据库，再输入下面的命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd C:\MongoDB\Server\4.2\bin</span><br><span class="line">mongo						// 进入mongodb的交互程序</span><br><span class="line">use leanote;				// 切换到leanote数据库下，如果前面数据库名字是ir，这里也是ir</span><br></pre></td></tr></table></figure>
<p>添加一个用户root, 密码是abc123</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.createUser(&#123;</span><br><span class="line">user: &#x27;root&#x27;,</span><br><span class="line">pwd: &#x27;abc123&#x27;,</span><br><span class="line">roles: [&#123;role: &#x27;dbOwner&#x27;, db: &#x27;leanote&#x27;&#125;]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>测试下是否正确</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.auth(&quot;root&quot;, &quot;abc123&quot;);</span><br></pre></td></tr></table></figure>
<p>返回1表示正确</p>
<p>用户添加好后重启下<strong>mongodb服务</strong>。 （如果不会就去网上搜：<code>重启Windows服务</code>）</p>
<hr />
<p><strong>还要修改配置文件</strong>: 修改 <u>C:\leanote\conf\app.conf</u> 文件</p>
<p>找到以下参数，并修改为你之前配置的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.host=127.0.0.1</span><br><span class="line">db.port=27017</span><br><span class="line">db.dbname=leanote 			# required</span><br><span class="line">db.username=`root` 			# if not exists, please leave blank</span><br><span class="line">db.password=`abc123` 		# if not exists, please leave blank</span><br></pre></td></tr></table></figure>
<div class="note info"><p>如果前面数据库名字是ir，这里的<code>db.dbname= </code>   也是  ir</p>
</div>
<p>除此之外，请务必修改<code>app.secret</code>一项, 在若干个随机位置处，将字符修改成一个其他的值, 否则会有安全隐患！其它的配置可暂时保持不变，或根据需要进行修改。</p>
<h3 id="运行leanote"><a class="header-anchor" href="#运行leanote">.</a>运行leanote</h3>
<p>到了这一步，基本上可以宣告成功了<br />
以 <strong>管理员权限</strong> 打开cmd，输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd C:\leanote\bin</span><br><span class="line">run.bat</span><br></pre></td></tr></table></figure>
<p>最后出现以下信息证明运行成功:</p>
<blockquote>
<p>Listening on :9000…</p>
</blockquote>
<p>恭喜你, 打开浏览器输入: <a href="http://localhost:9000">http://localhost:9000</a> 体验leanote吧!</p>
<p>选择登录，默认管理员账号为admin，密码为abc123。登陆成功后选择右上角的后台管理，即可登录后台管理。</p>
<details class="note primary"><summary><p>提示</p>
</summary>
<p>做到这里，leanote已经正常运行，但在电脑重启后，还需要再依次运行MongoDB server、leanote才能够正常使用，所以把 C:\leanote\bin\ 路径下的run.bat文件，创建一个快捷方式放到系统的启动里面即可，也可以放在桌面开机的时候手动启动。</p>
<p>如果你建在服务器上，那请自行将MongoDB服务设为自启，把Leanote启动文件配置为开机自动运行。</p>

</details>
<h3 id="绑定域名"><a class="header-anchor" href="#绑定域名">.</a>绑定域名</h3>
<p>修改 <u>C:\leanote\conf\app.conf</u> 文件里的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http.port=80</span><br><span class="line">site.url=http://localhost:9000</span><br></pre></td></tr></table></figure>
<p>输入<a href="http://localhost:9000">http://localhost:9000</a>，假设ip地址是111.111.111.111,把localhost换成你的IP地址111.111.111.111即可，如果有域名，也可以把localhost换成你的域名</p>
<h2 id="Linux版安装"><a class="header-anchor" href="#Linux版安装">.</a>Linux版安装</h2>
<h3 id="下载"><a class="header-anchor" href="#下载">.</a>下载</h3>
<p>Leanote：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"></span><br><span class="line">wget https://sourceforge.net/projects/leanote-bin/files/2.6.1/leanote-linux-amd64-v2.6.1.bin.tar.gz/download</span><br></pre></td></tr></table></figure>
<p>MongoDB：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"></span><br><span class="line">wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel80-5.0.6.tgz</span><br></pre></td></tr></table></figure>
<h3 id="解压Leanote压缩包"><a class="header-anchor" href="#解压Leanote压缩包">.</a>解压Leanote压缩包</h3>
<p>假设已将文件下载到 <code>/home/</code> 目录下，打开<code>终端</code>，通过使用下面的命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"></span><br><span class="line">tar -xzvf leanote-linux-amd64-v2.6.1.bin.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /home/software</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> /home/leanote /home/software/leanote</span><br></pre></td></tr></table></figure>
<p>解压文件，从而在 <code>/home/software</code> 目录下生成 <code>leanote</code>目录</p>
<h3 id="Mongodb-安装"><a class="header-anchor" href="#Mongodb-安装">.</a>Mongodb 安装</h3>
<a href="/2020/02/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/" title="MongoDB数据库 安装与配置">MongoDB数据库 安装与配置</a>
<h3 id="导入Leanote初始数据"><a class="header-anchor" href="#导入Leanote初始数据">.</a>导入Leanote初始数据</h3>
<p>下面为<strong>MongoDB</strong>导入<strong>leanote</strong>初始数据。</p>
<p><strong>leanote</strong>初始数据存放在<code>/home/software/leanote/mongodb_backup/leanote_install_data</code>中。</p>
<p><strong>重新打开</strong>一个终端， 输入以下命令导入数据。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongorestore -h localhost -d leanote --dir /home/software/leanote/mongodb_backup/leanote_install_data/</span><br></pre></td></tr></table></figure>
<p>出现  “499 document(s) restored successfully. 0 document(s) failed to restore.”  表示结束，这样就完成了数据的导入</p>
<p>当你再次使用show dbs命令时就会显示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show dbs</span><br><span class="line"></span><br><span class="line">admin    0.000GB</span><br><span class="line">config   0.000GB</span><br><span class="line">leanote  0.001GB</span><br><span class="line">local    0.000GB</span><br></pre></td></tr></table></figure>
<div class="note info"><p>有时候leanote的数据库名字不是<code>leanote</code>，而是 <code>ir</code>那后面的配置文件里的数据库名字也要跟着改变</p>
</div>
<p>初始数据的<code>users</code>表中已有2个用户:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user1 username: admin, password: abc123 (管理员, 只有该用户才有权管理后台, 请及时修改密码)</span><br><span class="line">user2 username: demo@leanote.com, password: demo@leanote.com (仅供体验使用)</span><br></pre></td></tr></table></figure>
<h3 id="添加leanote数据库用户-2"><a class="header-anchor" href="#添加leanote数据库用户-2">.</a>添加leanote数据库用户</h3>
<p>像MySQL一样MongoDB也有root用户, mongodb初始是没有用户的, 这样很不安全, 所以要为leanote数据库新建一个用户来连接leanote数据库(注意, 并不是为leanote的表users里新建用户, 而是新建一个连接leanote数据库的用户, 类似数据库 表管理员).</p>
<p>打开终端，进入bin目录，然后输入mongo进入数据库，再输入下面的命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /home/software/mongodb-5.0.6/bin</span><br><span class="line">mongo						// 进入mongodb的交互程序</span><br><span class="line">use leanote;				// 切换到leanote数据库下，如果前面数据库名字是ir，这里也是ir</span><br></pre></td></tr></table></figure>
<p>添加一个用户root, 密码是abc123</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.createUser(&#123;</span><br><span class="line">user: &#x27;root&#x27;,</span><br><span class="line">pwd: &#x27;abc123&#x27;,</span><br><span class="line">roles: [&#123;role: &#x27;dbOwner&#x27;, db: &#x27;leanote&#x27;&#125;]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>测试下是否正确</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.auth(&quot;root&quot;, &quot;abc123&quot;);</span><br></pre></td></tr></table></figure>
<p>返回1表示正确</p>
<hr />
<p><strong>还要修改配置文件</strong>: 修改 /home/software/leanote/conf/<code>app.conf</code>文件</p>
<p>找到以下参数，并修改为你之前配置的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.host=127.0.0.1</span><br><span class="line">db.port=27017</span><br><span class="line">db.dbname=leanote 			# required</span><br><span class="line">db.username=root 			# if not exists, please leave blank</span><br><span class="line">db.password=abc123 		# if not exists, please leave blank</span><br></pre></td></tr></table></figure>
<div class="note info"><p>如果前面数据库名字是ir，这里的<code>db.dbname= </code>   也是  ir</p>
</div>
<p>除此之外，请务必修改<code>app.secret</code>一项, 在若干个随机位置处，将字符修改成一个其他的值, 否则会有安全隐患！其它的配置可暂时保持不变，或根据需要进行修改。</p>
<h3 id="运行leanote-2"><a class="header-anchor" href="#运行leanote-2">.</a>运行leanote</h3>
<p>到了这一步，基本上可以宣告成功了。</p>
<p>新开一个窗口, 运行：（<strong>注意:</strong> 在此之前请确保<code>mongodb</code>已在运行！）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash /home/software/leanote/bin/run.sh</span><br></pre></td></tr></table></figure>
<p>最后出现以下信息证明运行成功:</p>
<blockquote>
<p>Listening on :9000…</p>
</blockquote>
<p>恭喜你完成安装, 打开浏览器输入: <a href="http://localhost:9000">http://localhost:9000</a> 体验leanote吧!<br />
选择登录，默认管理员账号为admin，密码为abc123。登陆成功后选择右上角的后台管理，即可登录后台管理。</p>
<details class="note primary"><summary><p>提示</p>
</summary>
<p>做到这里，leanote已经正常运行，但在电脑重启后，还需要再依次运行MongoDB、leanote才能够启动，所以可以把 Mongodb 创建一个服务项，并设为开机自启；把 leanote 设置为启动项。</p>

</details>
<h3 id="绑定域名-2"><a class="header-anchor" href="#绑定域名-2">.</a>绑定域名</h3>
<p>修改 /home/software/leanote/conf/app.conf 文件里的</p>
<blockquote>
<p>http.port=80<br />
site.url=http://localhost:9000</p>
</blockquote>
<p>输入<a href="http://localhost:9000">http://localhost:9000</a>，假设ip地址是111.111.111.111,把localhost换成你的IP地址111.111.111.111即可，如果有域名，也可以把localhost换成你的域名</p>
<h2 id="leanote备份"><a class="header-anchor" href="#leanote备份">.</a>leanote备份</h2>
<p>笔记的备份还是非常有必要的，我曾经发生过mongodb崩溃、Leanote崩溃、服务器崩溃等等问题，虽然基本上都救回来了，但如果有备份的话，那一切都会更简单一点。</p>
<p>新建一个<code>leanote_backup.sh</code>脚本，输入以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获得当前的时间</span></span><br><span class="line">currentTime=$(<span class="built_in">date</span>  +%Y%m%d%H%M%S)</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /home/data/leanote_backup/new</span><br><span class="line"><span class="built_in">mkdir</span> -p /home/data/leanote_backup/old</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> /home/data/leanote_backup/new/leanote_* /home/data/leanote_backup/old</span><br><span class="line"></span><br><span class="line"><span class="comment"># mongodb备份命令</span></span><br><span class="line">mongodump -h 127.0.0.1:27017  -d leanote -o /home/data/leanote_backup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩为tar.gz文件</span></span><br><span class="line">tar -zcvf /home/data/leanote_backup/new/leanote_<span class="variable">$&#123;currentTime&#125;</span>.tar.gz /home/data/leanote_backup/leanote</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除30天前的备份文件</span></span><br><span class="line"><span class="comment"># 类型匹配查找 -type ,f 为普通文件，d 为目录，l 为链接</span></span><br><span class="line">find  /home/data/leanote_backup/old/   -mtime  +30  -<span class="built_in">type</span> f  -name <span class="string">&quot;*.tar.gz&quot;</span> -<span class="built_in">exec</span>  <span class="built_in">rm</span>  -rf  &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除leanote备份文件夹</span></span><br><span class="line"><span class="built_in">rm</span> -rf /home/data/leanote_backup/leanote</span><br></pre></td></tr></table></figure>
<p>然后要备份的时候就运行一下这个脚本。</p>
<p>当然，最好是配置一个定时任务，运行这个脚本。我就是用宝塔的计时任务配置的。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>leanote</tag>
        <tag>蚂蚁笔记</tag>
        <tag>搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客搭建和简单部署</title>
    <url>/2020/03/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%92%8C%E7%AE%80%E5%8D%95%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="Hexo简介"><a class="header-anchor" href="#Hexo简介">.</a>Hexo简介</h2>
<p>Hexo是一款基于Node.js的静态博客框架，可以方便的生成静态网页托管在GitHub和Coding上或者自己的服务器上，是搭建博客的首选框架。大家可以进入hexo官网进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p>
<span id="more"></span>
<h2 id="Hexo搭建步骤"><a class="header-anchor" href="#Hexo搭建步骤">.</a>Hexo搭建步骤</h2>
<ol>
<li>安装Git</li>
<li>安装Node.js</li>
<li>安装Hexo</li>
<li>GitHub创建个人仓库</li>
<li>生成SSH添加到GitHub</li>
<li>将hexo部署到GitHub</li>
<li>设置个人域名</li>
<li>发布文章</li>
</ol>
<h2 id="安装Git"><a class="header-anchor" href="#安装Git">.</a>安装Git</h2>
<p>windows：到<a href="https://gitforwindows.org/">git</a>官网上下载，下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。<br />
linux：只需要一行代码，<code>sudo apt-get install git</code></p>
<p>安装好后，用 <code>git --version</code> 来查看一下版本</p>
<h2 id="安装Node-js"><a class="header-anchor" href="#安装Node-js">.</a>安装Node.js</h2>
<p>Hexo是基于Node.js编写的，所以需要安装一下Node.js和里面的npm工具。</p>
<p>windows：<a href="https://nodejs.org/en/download/">Node.js</a>选择LTS版本就行了。<br />
linux：也是通过命令来安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure>
<p>安装完后，在命令行输入以下代码进行验证</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>
<h2 id="安装hexo"><a class="header-anchor" href="#安装hexo">.</a>安装hexo</h2>
<p>先创建一个文件夹，命名为<code>blog</code>（这里假设路径为 <u>D:\blog</u>），然后<code>cd</code>到这个文件夹下（不知道怎么操作，可以去搜索<code>命令提示符进入指定文件夹</code>）。<br />
输入命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd D:\blog</span><br><span class="line"></span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>然后用<code>hexo -v</code>命令，查看一下版本。<br />
接下来初始化一下hexo，这里的myblog可以自己取名字，作为你的博客源文件夹了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init myblog</span><br><span class="line"></span><br><span class="line">cd myblog</span><br><span class="line"></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>新建完成后，指定文件夹目录下有：</p>
<ul>
<li>node_modules: 依赖包(或插件)</li>
<li>public：存放生成的页面（这个文件夹可能会没有，但当你使用<code>hexo g</code> 构建时，就会有了。）</li>
<li>scaffolds：生成文章的一些模板</li>
<li>source：用来存放你的博客资源
<ul>
<li>_posts：用来存放你的文章</li>
</ul>
</li>
<li>themes：主题</li>
<li>_config.yml：博客的配置文件</li>
<li>package.json：一些应用程序的信息、命令的配置</li>
</ul>
<p>然后使用以下命令，生成静态文件和启动本地服务器。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p>这两个命令可以简写为<code>hexo g</code>和<code>hexo s</code>。</p>
<p>这样就打开hexo的服务，在浏览器输入 <a href="http://localhost:4000">http://localhost:4000</a> 就可以看到你生成的博客了。</p>
<details class="note primary"><summary><p>提示：清理缓存</p>
</summary>
<p>每次<u>对服务器的配置进行了大改动后</u>或<u>发现改动的配置未生效</u>，我建议使用 <code>hexo clean</code> 命令进行缓存清理，而且这样可以解决一些小问题。</p>

</details>
<h2 id="安装“部署”插件"><a class="header-anchor" href="#安装“部署”插件">.</a>安装“部署”插件</h2>
<p>如果需要把你的博客简单的发布到网上，那你需要先安装deploy-git插件，也就是部署的命令,这样你才能用命令部署到coding、GitHub亦或是你自己的服务器上。</p>
<p><code>cd</code>到你的博客文件夹，输入下面的命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd D:\blog</span><br><span class="line"></span><br><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>
<h2 id="部署到coding-国内访问"><a class="header-anchor" href="#部署到coding-国内访问">.</a>部署到coding(国内访问)</h2>
<div class="note danger"><p>coding已经无法再像GitHub那样部署使用了，请使用其他方式代替coding（2022年3月15日）！</p>
</div>
<ol>
<li>
<p>去<a href="https://coding.net/">coding</a>的官网，注册一个账号。</p>
</li>
<li>
<p>注册完后，新建一个<code>项目</code>并进入项目，打开<code>代码仓库</code>。</p>
</li>
<li>
<p>复制代码仓库的地址，留作后用。</p>
</li>
<li>
<p>打开你的博客文件夹里的  <abbr title="这个我是用VS code打开的，当然也可以用记事本打开">_config.yml</abbr>  文件，在最下面的<code>deploy:</code>里，</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type: &#x27;git&#x27; </span><br><span class="line">repo: </span><br><span class="line">  coding: https://e.coding.net/yunying61/blog-yunying61.git,master</span><br></pre></td></tr></table></figure>
</li>
</ol>
<div class="note info"><p><strong>注意缩进</strong>，而这里的<code>coding: </code>，注意英文冒号(:)后面还有一个空格，而这里就是刚才你复制的 已公开源码 地址，再加上(英文逗号) ,master</p>
</div>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/deploy1.jpg?x-oss-process=style/yunying61" alt="部署到coding" /></p>
<ol start="5">
<li>
<p>当你再次<code>hexo g</code> , <code>hexo d</code>的时候，就会自动推送到coding的仓库里。</p>
</li>
<li>
<p>然后去你的coding仓库，找到左侧的<code>构建与部署</code>，点击进入静态网站。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/gyb.jpg?x-oss-process=style/yunying61"></p>
</li>
<li>
<p>然后 立即发布静态网站，填写信息，保存。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/html.jpg?x-oss-process=style/yunying61"></p>
</li>
</ol>
<p>到这里，你的博客就算是部署到了coding上了，通过coding给出的访问地址就可以访问你自己搭建的博客了。</p>
<p>如果你有域名，那可以把域名绑定到coding给出的网址上，并且在coding的静态网站设置界面，添加你的域名。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/ym.jpg?x-oss-process=style/yunying61"></p>
<h2 id="部署到github-国外访问"><a class="header-anchor" href="#部署到github-国外访问">.</a>部署到github(国外访问)</h2>
<ol>
<li>
<p>去<a href="https://github.com/">Github</a>的官网，注册一个账号。</p>
</li>
<li>
<p>注册完，然后<code>New repository</code>新建一个仓库，名称为 <code>你的账户名.github.io</code> （账户名就是创建者下面那个英文名） ，然后点击创建仓库。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/hexo_github.jpg?x-oss-process=style/yunying61"></p>
</li>
</ol>
<blockquote>
<p>名称这个一定要是这样，否则可能没有用，后续你就可以用<code>你的账户名.github.io</code> 这个直接进入你的博客了。</p>
</blockquote>
<ol start="3">
<li>然后去你电脑上的博客文件夹，右键 <code>git bash</code> 到这个文件夹下，输入以下命令</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure>
<p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。</p>
<p>可以用以下两条，检查一下你有没有输入正确</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure>
<p>至于SSH要不要配置，那看你们自己了，配置了SSH就可以控制git上传你的文件到GitHub上。</p>
<ol start="4">
<li>
<p>打开你的博客文件夹里的  <abbr title="这个我是用VS code打开的，当然也可以用记事本打开">_config.yml</abbr>  文件，在最下面的<code>deploy:</code>里，</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type: &#x27;git&#x27; </span><br><span class="line">repo: </span><br><span class="line">  github: https://github.com/yunying61/yunying61.github.io.git,master</span><br></pre></td></tr></table></figure>
</li>
</ol>
<div class="note info"><p><strong>注意缩进</strong>，而这里的<code>github: </code> ，注意英文冒号(:)后面还有一个空格，而这里就是刚才你复制的 HTTPS 地址，再加上(英文逗号) ,master</p>
</div>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/deploy2.jpg?x-oss-process=style/yunying61" alt="部署到coding" /></p>
<ol start="5">
<li>
<p>当你再次<code>hexo g</code> , <code>hexo d</code>的时候，就会自动推送到github的仓库里。<br />
注意deploy时可能要你输入username和password，就是你GitHub的账号密码。</p>
</li>
<li>
<p>推送完，就可以直接访问 https://你的名称.github.io/ 进入你的博客了</p>
</li>
</ol>
]]></content>
      <categories>
        <category>IT</category>
        <category>博客</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客</tag>
        <tag>搭建</tag>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo部署到个人服务器</title>
    <url>/2020/03/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">.</a>前言</h2>
<p>博客已经是部署到GitHub上了，但自己还有一个服务器，就想说能不能也把博客部署到服务器上，然后再通过Nginx发布到网上。毕竟GitHub访问慢，而且在国内访问还不稳定，放在服务器上，国内访问也能更方便。</p>
<span id="more"></span>
<h2 id="本地Hexo配置"><a class="header-anchor" href="#本地Hexo配置">.</a>本地Hexo配置</h2>
<p>修改Hexo博客根目录下的<code>_config.yml</code>文件中的deploy配置，如下</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span> </span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line">    <span class="attr">aliyun:</span> <span class="string">git@server:/home/git/Blog/hexoBlog.git,master</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">https://github.com/yunying61/yunying61.github.io.git,master</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>以上是我自己的配置，我配置了两个部署位置，一个部署到服务器上，一个部署到Github上。</p>
<p>本文只需要看第一个部署到<code>aliyun</code>上就可以</p>
<p>git：用于ssh连接的账户</p>
<p>server：服务器IP或域名</p>
</blockquote>
<h2 id="服务器配置"><a class="header-anchor" href="#服务器配置">.</a>服务器配置</h2>
<p>安装git软件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install git -y</span><br></pre></td></tr></table></figure>
<h3 id="创建git用户"><a class="header-anchor" href="#创建git用户">.</a>创建git用户</h3>
<ol>
<li>
<p>添加git用户</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adduser git</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>设置git用户密码</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo passwd git</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="添加ssh权限"><a class="header-anchor" href="#添加ssh权限">.</a>添加ssh权限</h3>
<ol>
<li>
<p>编辑*/etc/ssh/sshd_config*文件</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>
<p>按<code>i</code>键，并在最后面添加配置项 <code>AllowUsers root git</code> ，按<code>esc</code>输入<code>:wq</code>保存退出</p>
</li>
<li>
<p>重启sshd服务器</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/ssh restart</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="保存ssh公钥"><a class="header-anchor" href="#保存ssh公钥">.</a>保存ssh公钥</h3>
<p>请在搜索引擎上搜索关键词：<strong>生成SSH公钥并保存</strong> ，本文不介绍如何操作</p>
<p>将本地端生成的SSH秘钥保存到服务器端的 <code>/home/git/.ssh/authorized_keys</code> 文件中保存</p>
<div class="note warning"><p>一定要是 <code>/home/git/.ssh/authorized_keys</code> 目录，不然无法免密登陆</p>
</div>
<p>执行以下命令，确保 <code>/home/git</code> 中所有目录和文件所有者都是 <code>git</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> git /home/git -R</span><br></pre></td></tr></table></figure>
<p>测试SSH连接</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -v root@server</span><br></pre></td></tr></table></figure>
<h2 id="仓库配置"><a class="header-anchor" href="#仓库配置">.</a>仓库配置</h2>
<p>先切换到git用户，以防后面创建的文件和目录的所有者不是git</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su git</span><br></pre></td></tr></table></figure>
<h3 id="新建git仓库"><a class="header-anchor" href="#新建git仓库">.</a>新建git仓库</h3>
<p>Blog将作为Git的博客仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /home/git/Blog</span><br><span class="line"><span class="built_in">chown</span> -R git:git /home/git/Blog</span><br><span class="line"><span class="built_in">chmod</span> -R 755 /home/git/Blog</span><br></pre></td></tr></table></figure>
<p>创建 Git 裸仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/Blog</span><br><span class="line">git init --bare hexoBlog.git</span><br></pre></td></tr></table></figure>
<h3 id="新建网站仓库"><a class="header-anchor" href="#新建网站仓库">.</a>新建网站仓库</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /www/wwwroot/hexo</span><br><span class="line"><span class="built_in">chown</span> -R git:git /www/wwwroot/hexo</span><br><span class="line"><span class="built_in">chmod</span> -R 755 /www/wwwroot/hexo</span><br></pre></td></tr></table></figure>
<h3 id="新建Git钩子"><a class="header-anchor" href="#新建Git钩子">.</a>新建Git钩子</h3>
<p>通过<code>/home/git/Blog/hooks</code>下的<code>post-receive</code>钩子文件，自动部署到 <code>/www/wwwroot/hexo</code> 上</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /home/git/Blog/hexoBlog.git/hooks/post-receive</span><br></pre></td></tr></table></figure>
<p>按 <code>i</code> 键编辑，输入以下内容，按 <code>Esc</code> 键输入 <code>:wq</code> 保存退出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/bin/bash</span></span><br><span class="line"></span><br><span class="line">git --work-tree=/www/wwwroot/hexo --git-dir=/home/git/Blog/hexoBlog.git checkout -f</span><br></pre></td></tr></table></figure>
<p>修改成可执行权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R git:git /home/git/Blog/hexoBlog.git/hooks/post-receive</span><br><span class="line"><span class="built_in">chmod</span> +x /home/git/Blog/hexoBlog.git/hooks/post-receive</span><br></pre></td></tr></table></figure>
<h2 id="配置网站"><a class="header-anchor" href="#配置网站">.</a>配置网站</h2>
<p>到这里，如果没出什么问题，那基本上可以部署到服务器上了，但还不能直接访问。需要配置成网站站点才能通过网址访问你的博客。</p>
<p>接下来，我将通过宝塔的网站配置来实现该功能。</p>
<ol>
<li>
<p>进入你的宝塔面板 → 进入左侧的网站 → 添加站点</p>
<p>域名：请填写你的服务器IP或域名</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/hexo-%E6%B7%BB%E5%8A%A0%E7%AB%99%E7%82%B9.png?x-oss-process=style/yunying61" alt="hexo-添加站点" /></p>
</li>
<li>
<p>然后就可以用了，当然也可以在站点设置里，进行更详细的配置。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>IT</category>
        <category>博客</category>
        <category>软件</category>
        <category>技巧</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客</tag>
        <tag>网站</tag>
        <tag>部署</tag>
      </tags>
  </entry>
  <entry>
    <title>公式编辑器的设置</title>
    <url>/2020/03/%E5%85%AC%E5%BC%8F%E7%BC%96%E8%BE%91%E5%99%A8%E7%9A%84%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="样式配置"><a class="header-anchor" href="#样式配置">.</a>样式配置</h1>
<p>用公式编辑器，首先要解决的问题就是样式的配置。</p>
<p>因为不把样式弄好，很多公式写起来非常不顺心，比如矩阵(我被恶心了好久)。</p>
<span id="more"></span>
<p>下面我把我的样式的配置图贴上，仅供大家参考，可能会有更好的，有待大家自己尝试。</p>
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/math_%E6%A0%B7%E5%BC%8F.jpg?x-oss-process=style/yunying61">
<p>还有这是我用的尺寸，我稍微调大了一点，这样在低比例下，上下标更清楚一些</p>
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/math_%E5%B0%BA%E5%AF%B8.jpg?x-oss-process=style/yunying61">]]></content>
      <categories>
        <category>IT</category>
        <category>软件</category>
        <category>技巧</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>公式编辑器</tag>
        <tag>Equation Editor</tag>
        <tag>Office</tag>
        <tag>WPS</tag>
        <tag>矩阵</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown使用emoji表情</title>
    <url>/2020/04/Markdown%E4%BD%BF%E7%94%A8emoji%E8%A1%A8%E6%83%85/</url>
    <content><![CDATA[<h1 id=""><a class="header-anchor" href="#">.</a></h1>
<span id="more"></span>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/markdown_emoji.png?x-oss-process=style/yunying61" alt="" /></p>
<h2 id="People"><a class="header-anchor" href="#People">.</a>People</h2>
<ul>
<li>
<p>:bowtie:</p>
</li>
<li>
<p>😄</p>
</li>
<li>
<p>:simple_smile:</p>
</li>
<li>
<p>😆</p>
</li>
<li>
<p>😊</p>
</li>
<li>
<p>😃</p>
</li>
<li>
<p>☺️</p>
</li>
<li>
<p>😏</p>
</li>
<li>
<p>😍</p>
</li>
<li>
<p>😘</p>
</li>
<li>
<p>😚</p>
</li>
<li>
<p>😳</p>
</li>
<li>
<p>😌</p>
</li>
<li>
<p>😆</p>
</li>
<li>
<p>😁</p>
</li>
<li>
<p>😉</p>
</li>
<li>
<p>😜</p>
</li>
<li>
<p>😝</p>
</li>
<li>
<p>😀</p>
</li>
<li>
<p>😗</p>
</li>
<li>
<p>😙</p>
</li>
<li>
<p>😛</p>
</li>
<li>
<p>😴</p>
</li>
<li>
<p>😟</p>
</li>
<li>
<p>😦</p>
</li>
<li>
<p>😧</p>
</li>
<li>
<p>😮</p>
</li>
<li>
<p>😬</p>
</li>
<li>
<p>😕</p>
</li>
<li>
<p>😯</p>
</li>
<li>
<p>😑</p>
</li>
<li>
<p>😒</p>
</li>
<li>
<p>😅</p>
</li>
<li>
<p>😓</p>
</li>
<li>
<p>😥</p>
</li>
<li>
<p>😩</p>
</li>
<li>
<p>😔</p>
</li>
<li>
<p>😞</p>
</li>
<li>
<p>😖</p>
</li>
<li>
<p>😨</p>
</li>
<li>
<p>😰</p>
</li>
<li>
<p>😣</p>
</li>
<li>
<p>😢</p>
</li>
<li>
<p>😭</p>
</li>
<li>
<p>😂</p>
</li>
<li>
<p>😲</p>
</li>
<li>
<p>😱</p>
</li>
<li>
<p>:neckbeard:</p>
</li>
<li>
<p>😫</p>
</li>
<li>
<p>😠</p>
</li>
<li>
<p>😡</p>
</li>
<li>
<p>😤</p>
</li>
<li>
<p>😪</p>
</li>
<li>
<p>😋</p>
</li>
<li>
<p>😷</p>
</li>
<li>
<p>😎</p>
</li>
<li>
<p>😵</p>
</li>
<li>
<p>👿</p>
</li>
<li>
<p>😈</p>
</li>
<li>
<p>😐</p>
</li>
<li>
<p>😶</p>
</li>
<li>
<p>😇</p>
</li>
<li>
<p>👽</p>
</li>
<li>
<p>💛</p>
</li>
<li>
<p>💙</p>
</li>
<li>
<p>💜</p>
</li>
<li>
<p>❤️</p>
</li>
<li>
<p>💚</p>
</li>
<li>
<p>💔</p>
</li>
<li>
<p>💓</p>
</li>
<li>
<p>💗</p>
</li>
<li>
<p>💕</p>
</li>
<li>
<p>💞</p>
</li>
<li>
<p>💘</p>
</li>
<li>
<p>💖</p>
</li>
<li>
<p>✨</p>
</li>
<li>
<p>⭐</p>
</li>
<li>
<p>🌟</p>
</li>
<li>
<p>💫</p>
</li>
<li>
<p>💥</p>
</li>
<li>
<p>💥</p>
</li>
<li>
<p>💢</p>
</li>
<li>
<p>❗</p>
</li>
<li>
<p>❓</p>
</li>
<li>
<p>❕</p>
</li>
<li>
<p>❔</p>
</li>
<li>
<p>💤</p>
</li>
<li>
<p>💨</p>
</li>
<li>
<p>💦</p>
</li>
<li>
<p>🎶</p>
</li>
<li>
<p>🎵</p>
</li>
<li>
<p>🔥</p>
</li>
<li>
<p>💩</p>
</li>
<li>
<p>💩</p>
</li>
<li>
<p>💩</p>
</li>
<li>
<p>👍</p>
</li>
<li>
<p>👍</p>
</li>
<li>
<p>👎</p>
</li>
<li>
<p>👎</p>
</li>
<li>
<p>👌</p>
</li>
<li>
<p>👊</p>
</li>
<li>
<p>👊</p>
</li>
<li>
<p>✊</p>
</li>
<li>
<p>✌️</p>
</li>
<li>
<p>👋</p>
</li>
<li>
<p>✋</p>
</li>
<li>
<p>✋</p>
</li>
<li>
<p>👐</p>
</li>
<li>
<p>☝️</p>
</li>
<li>
<p>👇</p>
</li>
<li>
<p>👈</p>
</li>
<li>
<p>👉</p>
</li>
<li>
<p>🙌</p>
</li>
<li>
<p>🙏</p>
</li>
<li>
<p>👆</p>
</li>
<li>
<p>👏</p>
</li>
<li>
<p>💪</p>
</li>
<li>
<p>🤘</p>
</li>
<li>
<p>🖕</p>
</li>
<li>
<p>🏃</p>
</li>
<li>
<p>🏃</p>
</li>
<li>
<p>👫</p>
</li>
<li>
<p>👪</p>
</li>
<li>
<p>👬</p>
</li>
<li>
<p>👭</p>
</li>
<li>
<p>💃</p>
</li>
<li>
<p>👯</p>
</li>
<li>
<p>🙆‍♀️</p>
</li>
<li>
<p>🙅</p>
</li>
<li>
<p>💁</p>
</li>
<li>
<p>🙋</p>
</li>
<li>
<p>👰‍♀️</p>
</li>
<li>
<p>:person_with_pouting_face:</p>
</li>
<li>
<p>:person_frowning:</p>
</li>
<li>
<p>🙇</p>
</li>
<li>
<p>💏</p>
</li>
<li>
<p>💑</p>
</li>
<li>
<p>💆</p>
</li>
<li>
<p>💇</p>
</li>
<li>
<p>💅</p>
</li>
<li>
<p>👦</p>
</li>
<li>
<p>👧</p>
</li>
<li>
<p>👩</p>
</li>
<li>
<p>👨	👶	👵	👴	:person_with_blond_hair:</p>
</li>
<li>
<p>👲</p>
</li>
<li>
<p>👳‍♂️</p>
</li>
<li>
<p>👷</p>
</li>
<li>
<p>👮</p>
</li>
<li>
<p>👼</p>
</li>
<li>
<p>👸</p>
</li>
<li>
<p>😺</p>
</li>
<li>
<p>😸</p>
</li>
<li>
<p>😻</p>
</li>
<li>
<p>😽</p>
</li>
<li>
<p>😼</p>
</li>
<li>
<p>🙀</p>
</li>
<li>
<p>😿</p>
</li>
<li>
<p>😹</p>
</li>
<li>
<p>😾</p>
</li>
<li>
<p>👹</p>
</li>
<li>
<p>👺</p>
</li>
<li>
<p>🙈</p>
</li>
<li>
<p>🙉</p>
</li>
<li>
<p>🙊</p>
</li>
<li>
<p>💂‍♂️</p>
</li>
<li>
<p>💀</p>
</li>
<li>
<p>🐾</p>
</li>
<li>
<p>👄</p>
</li>
<li>
<p>💋</p>
</li>
<li>
<p>💧</p>
</li>
<li>
<p>👂</p>
</li>
<li>
<p>👀</p>
</li>
<li>
<p>👃</p>
</li>
<li>
<p>👅</p>
</li>
<li>
<p>💌</p>
</li>
<li>
<p>👤</p>
</li>
<li>
<p>👥</p>
</li>
<li>
<p>💬</p>
</li>
<li>
<p>💭</p>
</li>
<li>
<p>:feelsgood:</p>
</li>
<li>
<p>:finnadie:</p>
</li>
<li>
<p>:goberserk:</p>
</li>
<li>
<p>:godmode:</p>
</li>
<li>
<p>:hurtrealbad:</p>
</li>
<li>
<p>:rage1:</p>
</li>
<li>
<p>:rage2:</p>
</li>
<li>
<p>:rage3:</p>
</li>
<li>
<p>:rage4:</p>
</li>
<li>
<p>:suspect:</p>
</li>
<li>
<p>:trollface:</p>
</li>
</ul>
<h2 id="Nature"><a class="header-anchor" href="#Nature">.</a>Nature</h2>
<ul>
<li>☀️</li>
<li>☔</li>
<li>☁️</li>
<li>❄️</li>
<li>⛄</li>
<li>⚡</li>
<li>🌀</li>
<li>🌁</li>
<li>🌊</li>
<li>🐱</li>
<li>🐶</li>
<li>🐭</li>
<li>🐹</li>
<li>🐰</li>
<li>🐺</li>
<li>🐸</li>
<li>🐯</li>
<li>🐨</li>
<li>🐻</li>
<li>🐷</li>
<li>🐽</li>
<li>🐮</li>
<li>🐗</li>
<li>🐵</li>
<li>🐒</li>
<li>🐴</li>
<li>🐎</li>
<li>🐫</li>
<li>🐑</li>
<li>🐘</li>
<li>🐼</li>
<li>🐍</li>
<li>🐦</li>
<li>🐤</li>
<li>🐥</li>
<li>🐣</li>
<li>🐔</li>
<li>🐧</li>
<li>🐢</li>
<li>🐛</li>
<li>🐝</li>
<li>🐜</li>
<li>🪲</li>
<li>🐌</li>
<li>🐙</li>
<li>🐠</li>
<li>🐟</li>
<li>🐳</li>
<li>🐋</li>
<li>🐬</li>
<li>🐄</li>
<li>🐏</li>
<li>🐀</li>
<li>🐃</li>
<li>🐅</li>
<li>🐇</li>
<li>🐉</li>
<li>🐐</li>
<li>🐓</li>
<li>🐕</li>
<li>🐖</li>
<li>🐁</li>
<li>🐂</li>
<li>🐲</li>
<li>🐡</li>
<li>🐊</li>
<li>🐪</li>
<li>🐆</li>
<li>🐈</li>
<li>🐩</li>
<li>🐾</li>
<li>💐</li>
<li>🌸</li>
<li>🌷</li>
<li>🍀</li>
<li>🌹</li>
<li>🌻</li>
<li>🌺</li>
<li>🍁</li>
<li>🍃</li>
<li>🍂</li>
<li>🌿</li>
<li>🍄</li>
<li>🌵</li>
<li>🌴</li>
<li>🌲</li>
<li>🌳</li>
<li>🌰</li>
<li>🌱</li>
<li>🌼</li>
<li>🌾</li>
<li>🐚</li>
<li>🌐</li>
<li>🌞</li>
<li>🌝</li>
<li>🌚</li>
<li>🌑</li>
<li>🌒</li>
<li>🌓</li>
<li>🌔</li>
<li>🌕</li>
<li>🌖</li>
<li>🌗</li>
<li>🌘</li>
<li>🌜</li>
<li>🌛</li>
<li>🌙</li>
<li>🌍</li>
<li>🌎</li>
<li>🌏</li>
<li>🌋</li>
<li>🌌</li>
<li>⛅</li>
<li>:octocat:</li>
<li>:squirrel:</li>
</ul>
<h2 id="Objects"><a class="header-anchor" href="#Objects">.</a>Objects</h2>
<ul>
<li>🎍</li>
<li>💝</li>
<li>🎎</li>
<li>🎒</li>
<li>🎓</li>
<li>🎏</li>
<li>🎆</li>
<li>🎇</li>
<li>🎐</li>
<li>🎑</li>
<li>🎃</li>
<li>👻</li>
<li>🎅</li>
<li>🎄</li>
<li>🎁</li>
<li>🔔</li>
<li>🔕</li>
<li>🎋</li>
<li>🎉</li>
<li>🎊</li>
<li>🎈</li>
<li>🔮</li>
<li>💿</li>
<li>📀</li>
<li>💾</li>
<li>📷</li>
<li>📹</li>
<li>🎥</li>
<li>💻</li>
<li>📺</li>
<li>📱</li>
<li>☎️</li>
<li>☎️</li>
<li>📞</li>
<li>📟</li>
<li>📠</li>
<li>💽</li>
<li>📼</li>
<li>🔉</li>
<li>🔈</li>
<li>🔇</li>
<li>📢</li>
<li>📣</li>
<li>⌛</li>
<li>⏳</li>
<li>⏰</li>
<li>⌚</li>
<li>📻</li>
<li>📡</li>
<li>➿</li>
<li>🔍</li>
<li>🔎</li>
<li>🔓</li>
<li>🔒</li>
<li>🔏</li>
<li>🔐</li>
<li>🔑</li>
<li>💡</li>
<li>🔦</li>
<li>🔆</li>
<li>🔅</li>
<li>🔌</li>
<li>🔋</li>
<li>📲</li>
<li>📧</li>
<li>📫</li>
<li>📮</li>
<li>🛀</li>
<li>🛁</li>
<li>🚿</li>
<li>🚽</li>
<li>🔧</li>
<li>🔩</li>
<li>🔨</li>
<li>💺</li>
<li>💰</li>
<li>💴</li>
<li>💵</li>
<li>💷</li>
<li>💶</li>
<li>💳</li>
<li>💸</li>
<li>📧</li>
<li>📥</li>
<li>📤</li>
<li>✉️</li>
<li>📨</li>
<li>📯</li>
<li>📪</li>
<li>📬</li>
<li>📭</li>
<li>📦</li>
<li>🚪</li>
<li>🚬</li>
<li>💣</li>
<li>🔫</li>
<li>🔪</li>
<li>💊</li>
<li>💉</li>
<li>📄</li>
<li>📃</li>
<li>📑</li>
<li>📊</li>
<li>📈</li>
<li>📉</li>
<li>📜</li>
<li>📋</li>
<li>📆</li>
<li>📅</li>
<li>📇</li>
<li>📁</li>
<li>📂</li>
<li>✂️</li>
<li>📌</li>
<li>📎</li>
<li>✒️</li>
<li>✏️</li>
<li>📏</li>
<li>📐</li>
<li>📕</li>
<li>📗</li>
<li>📘</li>
<li>📙</li>
<li>📓</li>
<li>📔</li>
<li>📒</li>
<li>📚</li>
<li>🔖</li>
<li>📛</li>
<li>🔬</li>
<li>🔭</li>
<li>📰</li>
<li>🏈</li>
<li>🏀</li>
<li>⚽</li>
<li>⚾</li>
<li>🎾</li>
<li>🎱</li>
<li>🏉</li>
<li>🎳</li>
<li>⛳</li>
<li>🚵</li>
<li>🚴</li>
<li>🏇</li>
<li>🏂</li>
<li>🏊</li>
<li>🏄</li>
<li>🎿</li>
<li>♠️</li>
<li>♥️</li>
<li>♣️</li>
<li>♦️</li>
<li>💎</li>
<li>💍</li>
<li>🏆</li>
<li>🎼</li>
<li>🎹</li>
<li>🎻</li>
<li>👾</li>
<li>🎮</li>
<li>🃏</li>
<li>🎴</li>
<li>🎲</li>
<li>🎯</li>
<li>🀄</li>
<li>🎬</li>
<li>📝</li>
<li>📝</li>
<li>📖</li>
<li>🎨</li>
<li>🎤</li>
<li>🎧</li>
<li>🎺</li>
<li>🎷</li>
<li>🎸</li>
<li>👞</li>
<li>👡</li>
<li>👠</li>
<li>💄</li>
<li>👢</li>
<li>👕</li>
<li>👕</li>
<li>👔</li>
<li>👚</li>
<li>👗</li>
<li>🎽</li>
<li>👖</li>
<li>👘</li>
<li>👙</li>
<li>🎀</li>
<li>🎩</li>
<li>👑</li>
<li>👒</li>
<li>👞</li>
<li>🌂</li>
<li>💼</li>
<li>👜</li>
<li>👝</li>
<li>👛</li>
<li>👓</li>
<li>🎣</li>
<li>☕</li>
<li>🍵</li>
<li>🍶</li>
<li>🍼</li>
<li>🍺</li>
<li>🍻</li>
<li>🍸</li>
<li>🍹</li>
<li>🍷</li>
<li>🍴</li>
<li>🍕</li>
<li>🍔</li>
<li>🍟</li>
<li>🍗</li>
<li>🍖</li>
<li>🍝</li>
<li>🍛</li>
<li>🍤</li>
<li>🍱</li>
<li>🍣</li>
<li>🍥</li>
<li>🍙</li>
<li>🍘</li>
<li>🍚</li>
<li>🍜</li>
<li>🍲</li>
<li>🍢</li>
<li>🍡</li>
<li>🥚</li>
<li>🍞</li>
<li>🍩</li>
<li>🍮</li>
<li>🍦</li>
<li>🍨</li>
<li>🍧</li>
<li>🎂</li>
<li>🍰</li>
<li>🍪</li>
<li>🍫</li>
<li>🍬</li>
<li>🍭</li>
<li>🍯</li>
<li>🍎</li>
<li>🍏</li>
<li>🍊</li>
<li>🍋</li>
<li>🍒</li>
<li>🍇</li>
<li>🍉</li>
<li>🍓</li>
<li>🍑</li>
<li>🍈</li>
<li>🍌</li>
<li>🍐</li>
<li>🍍</li>
<li>🍠</li>
<li>🍆</li>
<li>🍅</li>
<li>🌽</li>
</ul>
<h2 id="Places"><a class="header-anchor" href="#Places">.</a>Places</h2>
<ul>
<li>🏠</li>
<li>🏡</li>
<li>🏫</li>
<li>🏢</li>
<li>🏣</li>
<li>🏥</li>
<li>🏦</li>
<li>🏪</li>
<li>🏩</li>
<li>🏨</li>
<li>💒</li>
<li>⛪</li>
<li>🏬</li>
<li>🏤</li>
<li>🌇</li>
<li>🌆</li>
<li>🏯</li>
<li>🏰</li>
<li>⛺</li>
<li>🏭</li>
<li>🗼</li>
<li>🗾</li>
<li>🗻</li>
<li>🌄</li>
<li>🌅</li>
<li>🌠</li>
<li>🗽</li>
<li>🌉</li>
<li>🎠</li>
<li>🌈</li>
<li>🎡</li>
<li>⛲</li>
<li>🎢</li>
<li>🚢</li>
<li>🚤</li>
<li>⛵</li>
<li>⛵</li>
<li>🚣</li>
<li>⚓</li>
<li>🚀</li>
<li>✈️</li>
<li>🚁</li>
<li>🚂</li>
<li>🚊</li>
<li>🚞</li>
<li>🚲</li>
<li>🚡</li>
<li>🚟</li>
<li>🚠</li>
<li>🚜</li>
<li>🚙</li>
<li>🚘</li>
<li>🚗</li>
<li>🚗</li>
<li>🚕</li>
<li>🚖</li>
<li>🚛</li>
<li>🚌</li>
<li>🚍</li>
<li>🚨</li>
<li>🚓</li>
<li>🚔</li>
<li>🚒</li>
<li>🚑</li>
<li>🚐</li>
<li>🚚</li>
<li>🚋</li>
<li>🚉</li>
<li>🚆</li>
<li>🚅</li>
<li>🚄</li>
<li>🚈</li>
<li>🚝</li>
<li>🚃</li>
<li>🚎</li>
<li>🎫</li>
<li>⛽</li>
<li>🚦</li>
<li>🚥</li>
<li>⚠️</li>
<li>🚧</li>
<li>🔰</li>
<li>🏧</li>
<li>🎰</li>
<li>🚏</li>
<li>💈</li>
<li>♨️</li>
<li>🏁</li>
<li>🎌</li>
<li>🏮</li>
<li>🗿</li>
<li>🎪</li>
<li>🎭</li>
<li>📍</li>
<li>🚩</li>
<li>🇯🇵</li>
<li>🇰🇷</li>
<li>🇨🇳</li>
<li>🇺🇸</li>
<li>🇫🇷</li>
<li>🇪🇸</li>
<li>🇮🇹</li>
<li>🇷🇺</li>
<li>🇬🇧</li>
<li>🇬🇧</li>
<li>🇩🇪</li>
</ul>
<h2 id="Symbols"><a class="header-anchor" href="#Symbols">.</a>Symbols</h2>
<ul>
<li>1️⃣</li>
<li>2️⃣</li>
<li>3️⃣</li>
<li>4️⃣</li>
<li>5️⃣</li>
<li>6️⃣</li>
<li>7️⃣</li>
<li>8️⃣</li>
<li>9️⃣</li>
<li>🔟</li>
<li>🔢</li>
<li>0️⃣</li>
<li>#️⃣</li>
<li>🔣</li>
<li>◀️</li>
<li>⬇️</li>
<li>▶️</li>
<li>⬅️</li>
<li>🔠</li>
<li>🔡</li>
<li>🔤</li>
<li>↙️</li>
<li>↘️</li>
<li>➡️</li>
<li>⬆️</li>
<li>↖️</li>
<li>↗️</li>
<li>⏬</li>
<li>⏫</li>
<li>🔽</li>
<li>⤵️</li>
<li>⤴️</li>
<li>↩️</li>
<li>↪️</li>
<li>↔️</li>
<li>↕️</li>
<li>🔼</li>
<li>🔃</li>
<li>🔄</li>
<li>⏪</li>
<li>⏩</li>
<li>ℹ️</li>
<li>🆗</li>
<li>🔀</li>
<li>🔁</li>
<li>🔂</li>
<li>🆕</li>
<li>🔝</li>
<li>🆙</li>
<li>🆒</li>
<li>🆓</li>
<li>🆖</li>
<li>🎦</li>
<li>🈁</li>
<li>📶</li>
<li>:u5272:</li>
<li>:u5408:</li>
<li>:u55b6:</li>
<li>:u6307:</li>
<li>:u6708:</li>
<li>:u6709:</li>
<li>🈵</li>
<li>:u7121:</li>
<li>:u7533:</li>
<li>:u7a7a:</li>
<li>:u7981:</li>
<li>🈂️</li>
<li>🚻</li>
<li>🚹</li>
<li>🚺</li>
<li>🚼</li>
<li>🚭</li>
<li>🅿️</li>
<li>♿</li>
<li>🚇</li>
<li>🛄</li>
<li>🉑</li>
<li>🚾</li>
<li>🚰</li>
<li>🚮</li>
<li>㊙️</li>
<li>㊗️</li>
<li>Ⓜ️</li>
<li>🛂</li>
<li>🛅</li>
<li>🛃</li>
<li>🉐</li>
<li>🆑</li>
<li>🆘</li>
<li>🆔</li>
<li>🚫</li>
<li>🔞</li>
<li>📵</li>
<li>🚯</li>
<li>🚱</li>
<li>🚳</li>
<li>🚷</li>
<li>🚸</li>
<li>⛔</li>
<li>✳️</li>
<li>❇️</li>
<li>✴️</li>
<li>💟</li>
<li>🆚</li>
<li>📳</li>
<li>📴</li>
<li>💹</li>
<li>💱</li>
<li>♈</li>
<li>♉</li>
<li>♊</li>
<li>♋</li>
<li>♌</li>
<li>♍</li>
<li>♎</li>
<li>♏</li>
<li>♐</li>
<li>♑</li>
<li>♒</li>
<li>♓</li>
<li>⛎</li>
<li>🔯</li>
<li>❎</li>
<li>🅰️</li>
<li>🅱️</li>
<li>🆎</li>
<li>🅾️</li>
<li>💠</li>
<li>♻️</li>
<li>🔚</li>
<li>🔙</li>
<li>🔛</li>
<li>🔜</li>
<li>🕐</li>
<li>🕜</li>
<li>🕙</li>
<li>🕥</li>
<li>🕚</li>
<li>🕦</li>
<li>🕛</li>
<li>🕧</li>
<li>🕑</li>
<li>🕝</li>
<li>🕒</li>
<li>🕞</li>
<li>🕓</li>
<li>🕟</li>
<li>🕔</li>
<li>🕠</li>
<li>🕕</li>
<li>🕡</li>
<li>🕖</li>
<li>🕢</li>
<li>🕗</li>
<li>🕣</li>
<li>🕘</li>
<li>🕤</li>
<li>💲</li>
<li>©️</li>
<li>®️</li>
<li>™️</li>
<li>❌</li>
<li>❗</li>
<li>‼️</li>
<li>⁉️</li>
<li>⭕</li>
<li>✖️</li>
<li>➕</li>
<li>➖</li>
<li>➗</li>
<li>💮</li>
<li>💯</li>
<li>✔️</li>
<li>☑️</li>
<li>🔘</li>
<li>🔗</li>
<li>➰</li>
<li>〰️</li>
<li>〽️</li>
<li>🔱</li>
<li>▪️</li>
<li>▫️</li>
<li>◾</li>
<li>◽</li>
<li>◼️</li>
<li>◻️</li>
<li>⬛</li>
<li>⬜</li>
<li>✅</li>
<li>🔲</li>
<li>🔳</li>
<li>⚫</li>
<li>⚪</li>
<li>🔴</li>
<li>🔵</li>
<li>🔷</li>
<li>🔶</li>
<li>🔹</li>
<li>🔸</li>
<li>🔺</li>
<li>🔻</li>
<li>:shipit:</li>
</ul>
<h3 id="Campfire-also-supports-a-few-sounds"><a class="header-anchor" href="#Campfire-also-supports-a-few-sounds">.</a>Campfire also supports a few sounds</h3>
<ul>
<li>/play secret</li>
<li>/play trombone</li>
<li>/play crickets</li>
<li>/play rimshot</li>
<li>/play vuvuzela</li>
<li>/play tmyk</li>
<li>/play live</li>
<li>/play drama</li>
<li>/play yeah</li>
<li>/play greatjob</li>
<li>/play pushit</li>
<li>/play nyan</li>
<li>/play tada</li>
<li>/play ohmy</li>
<li>/play bueller</li>
<li>/play ohyeah</li>
<li>/play 56k</li>
<li>/play dangerzone</li>
<li>/play horn</li>
<li>/play horror</li>
<li>/play loggins</li>
<li>/play yodel</li>
<li>/play sax</li>
<li>/play noooo</li>
<li>/play heygirl</li>
<li>/play inconceivable</li>
<li>/play deeper</li>
<li>/play whoomp</li>
<li>/play clowntown</li>
<li>/play what</li>
<li>/play bezos</li>
<li>/play trololo</li>
<li>/play makeitso</li>
<li>/play sexyback</li>
<li>/play bell</li>
<li>/play danielsan</li>
<li>/play greyjoy</li>
<li>/play story</li>
<li>/play dadgummit</li>
<li>/play rollout</li>
<li>/play cottoneyejoe</li>
<li>/play rumble</li>
<li>/play guarantee</li>
<li>/play unix</li>
<li>/play letitgo</li>
<li>/play wups</li>
<li>/play flawless</li>
<li>/play butts</li>
</ul>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>语法</tag>
        <tag>markdown</tag>
        <tag>emoji</tag>
        <tag>表情</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 中 const 的用法</title>
    <url>/2020/05/C++-%E4%B8%AD-const-%E7%9A%84%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<h1 id="C-函数-const-的用法"><a class="header-anchor" href="#C-函数-const-的用法">.</a>C++ 函数 - const 的用法</h1>
<p><a href="https://www.cnblogs.com/xudong-bupt/p/3509567.html">https://www.cnblogs.com/xudong-bupt/p/3509567.html</a></p>
<p><a href="https://www.runoob.com/w3cnote/cpp-const-keyword.html">https://www.runoob.com/w3cnote/cpp-const-keyword.html</a></p>
<span id="more"></span>
<h2 id="描述"><a class="header-anchor" href="#描述">.</a>描述</h2>
<p>const 是 constant 的缩写，本意是不变的，不易改变的意思。在 C++ 中是用来修饰内置类型变量，自定义对象，成员函数，返回值，函数参数。</p>
<p>const 允许指定一个语义约束，编译器会强制实施这个约束，允许程序员告诉编译器某值是保持不变的。如果在编程中确实有某个值保持不变，就应该明确使用const，这样可以获得编译器的帮助。</p>
<blockquote>
<p>例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span>  a = <span class="number">7</span>; </span><br><span class="line"><span class="type">int</span>  b = a; <span class="comment">// 正确</span></span><br><span class="line">a = <span class="number">8</span>;       <span class="comment">// 错误，不能改变</span></span><br></pre></td></tr></table></figure>
<p>a 被定义为一个常量，并且可以将 a 赋值给 b，但是不能给 a 再次赋值。对一个常量赋值是违法的事情，因为 a 被编译器认为是一个常量，其值不允许修改。</p>
</blockquote>
<hr />
<p>const 修饰<strong>指针变量</strong>有以下三种情况。</p>
<ul>
<li>1: const 修饰指针指向的内容，则内容为不可变量。</li>
<li>2: const 修饰指针，则指针为不可变量。</li>
<li>3: const 修饰指针和指针指向的内容，则指针和指针指向的内容都为不可变量。</li>
</ul>
<ol>
<li>只有一个const，如果const位于 * 左侧，表示指针所指数据是常量，不能通过解引用修改该数据；指针本身是变量，可以指向其他的内存单元。</li>
<li>只有一个const，如果const位于 * 右侧，表示指针本身是常量，不能指向其他内存地址；指针所指的数据可以通过解引用修改。</li>
<li>两个const， * 左右各一个，表示指针和指针所指数据都不能修改。</li>
</ol>
<h2 id="用法"><a class="header-anchor" href="#用法">.</a>用法</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a1=<span class="number">3</span>;   <span class="comment">///non-const data 数据不是常量，是变量a1</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> a2=a1;    <span class="comment">///const data 数据是常量</span></span><br><span class="line"><span class="type">int</span> * a3 = &amp;a1;   <span class="comment">///non-const data,non-const pointer 数据不是常量，指针不是常量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> * a4 = &amp;a1;   <span class="comment">///const data,non-const pointer 数据是常量，指针不是常量</span></span><br><span class="line"><span class="type">int</span> * <span class="type">const</span> a5 = &amp;a1;   <span class="comment">///non-const data,const pointer 数据不是常量，指针是常量</span></span><br><span class="line"><span class="type">int</span> <span class="type">const</span> * <span class="type">const</span> a6 = &amp;a1;   <span class="comment">///const data,const pointer 数据是常量，指针是常量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> * <span class="type">const</span> a7 = &amp;a1;   <span class="comment">///const data,const pointer 数据是常量，指针是常量</span></span><br></pre></td></tr></table></figure>
<h2 id="返回值"><a class="header-anchor" href="#返回值">.</a>返回值</h2>
<p>返回一个常量。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C++</tag>
        <tag>const</tag>
      </tags>
  </entry>
  <entry>
    <title>Win+R运行没有历史记录的解决方法</title>
    <url>/2020/04/Win-R%E8%BF%90%E8%A1%8C%E6%B2%A1%E6%9C%89%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>我一开始也是遇到了这个问题，而且跟一般的情况完全不同，我参考了网上很多解决方法，无非就那3种：win10设置、注册表、本地组策略。</p>
<span id="more"></span>
<p>但是！第一个和第三个我都没问题，问题就出在第二个注册表上，而且还特别隐秘😂，我还是再一次无意的尝试中才解决了问题，原来是注册表中一个值不对劲。</p>
<p>好了，我的经历的吐槽到此结束，接下来进入正题。</p>
<h2 id="win10设置"><a class="header-anchor" href="#win10设置">.</a>win10设置</h2>
<ol>
<li>按win+i进入设置，然后先去  <u>隐私 - 常规 - 更改隐私选项</u>，如图打开<code>允许Windows跟踪应用启动，以改进开始和搜索结果</code><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Windows/%E8%AE%BE%E7%BD%AE-%E9%9A%90%E7%A7%81.jpg?x-oss-process=style/yunying61" alt="" /></li>
<li>再去  <u>个性化 - 开始</u> ，如图打开<code>显示最近添加的应用</code>和<code>显示最常用的应用</code><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Windows/%E8%AE%BE%E7%BD%AE-%E5%BC%80%E5%A7%8B.jpg?x-oss-process=style/yunying61" alt="" /></li>
</ol>
<blockquote>
<p>如果 win10 <u>设置 - 隐私 - 常规</u>：<code>允许Windows跟踪应用启动，以改进开始和搜索结果</code>，这个选项是灰的，无法打开该怎么办？如图：</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Windows/%E8%AE%BE%E7%BD%AE-%E9%9A%90%E7%A7%81-%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80.jpg" alt="" /></p>
<ol>
<li>
<p>通过 本地组策略 来解决：</p>
<p>首先win+R打开运行，输入 <code>gpedit.msc</code> 并打开，在 本地组策略编辑器 左边窗口找到，<u>用户配置 - 管理模板 - &quot;开始&quot;菜单和任务栏</u> ，找到<code>关闭用户跟踪</code> ，双击打开对话框，选择“已禁用”，点应用，确定就OK了</p>
</li>
<li>
<p>通过 注册表 来解决：</p>
<p>首先win+R打开运行，输入 <code>regedit</code> 并打开，导航到以下关键路径 ：</p>
<blockquote>
<p><code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced</code></p>
</blockquote>
<p>然后在Advanced文件夹中找到<code>Start_TrackProgs</code>（如果没有，请自行右键新建一个新的32位DWORD值，并将其命名为<code>Start_TrackProgs</code>）。将其值设置为“ 1 ”以启用应用启动跟踪。要禁用应用启动跟踪，请将值设置为“ 0 ”。</p>
<p>单击确定，然后重新启动系统。</p>
</li>
</ol>
</blockquote>
<h2 id="本地组策略"><a class="header-anchor" href="#本地组策略">.</a>本地组策略</h2>
<p>鉴于这个方法，我也不确定有没有用，所以我给个路子，大家自行看着配置。</p>
<blockquote>
<p>win+R打开运行，输入 <code>gpedit.msc</code> 并打开，在 本地组策略编辑器 左边窗口找到，<u>用户配置 - 管理模板 - &quot;开始&quot;菜单和任务栏</u> ，在 <code>&quot;开始&quot;菜单和任务栏 </code>下自己看看那个可能与运行的历史记录有关，我估计有这几个：</p>
<ol>
<li>退出系统时清除最近打开的文档的历史</li>
<li>从“开始”菜单中删除”最近添加”列表</li>
<li>将“在单独的内存空间运行”复选框添加到“运行”对话框</li>
<li>从“开始”菜单中删除常用程序列表</li>
<li>不保留最近打开文档的历史</li>
<li>从“开始”菜单中册删除“最近使用的项目”菜单</li>
<li>从“开始”菜单中删除&quot;运行”菜单</li>
</ol>
</blockquote>
<h2 id="Windows注册表"><a class="header-anchor" href="#Windows注册表">.</a>Windows注册表</h2>
<p>重头戏来了！我就栽在这了。</p>
<p>首先win+R打开运行，输入 <code>regedit</code> 并打开，导航到以下关键路径 ：</p>
<blockquote>
<p><code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU</code></p>
</blockquote>
<p>然后在RunMRU文件夹中找到<code>MRUList</code>（如果没有，请自行右键新建一个新的字符串值，并将其命名为<code>MRUList</code>）。</p>
<blockquote>
<p>重点重点，来啦！！！</p>
<p>将<code>MRUList</code>的值（数值数据）设为***<code>ba</code><em><strong>，对就是</strong><code>ba</code></em>*。</p>
</blockquote>
<h2 id="写在最后"><a class="header-anchor" href="#写在最后">.</a>写在最后</h2>
<p>我一开始的值是a，然后无意中看到了，就想着加上去了，然后就有用了​，😭，我从开始遇到这个问题到解决问题，过去了两三个月。。。哎，<s>总算解决</s>了（实际上并没有解决，只能短暂地解决，估计我这台电脑有更深层次的原因）。</p>
<p>最后希望能帮到大家😊</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>Windows</category>
        <category>软件</category>
        <category>技巧</category>
        <category>问题解决</category>
      </categories>
      <tags>
        <tag>运行</tag>
        <tag>历史记录</tag>
        <tag>问题解决</tag>
        <tag>记录</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 中 setw() 函数  控制字段宽度</title>
    <url>/2020/05/C++-%E4%B8%AD-setw-%E5%87%BD%E6%95%B0-%E6%8E%A7%E5%88%B6%E5%AD%97%E6%AE%B5%E5%AE%BD%E5%BA%A6/</url>
    <content><![CDATA[<h1 id="C-函数-setw"><a class="header-anchor" href="#C-函数-setw">.</a>C++ 函数 - setw()</h1>
<p>https://www.runoob.com/cplusplus/cpp-tutorial.html</p>
<p>位于C++ 标准库 #include <iomanip></p>
<p>其中io代表输入输出，manip是manipulator（操纵器）的缩写</p>
<span id="more"></span>
<h2 id="描述-2"><a class="header-anchor" href="#描述-2">.</a>描述</h2>
<p>设定栏位宽度，设置要在输出操作前使用的<em>字段宽度</em>。</p>
<p>主要是对cin,cout之类的一些操纵运算子，比如setfill,setw,setbase,setprecision等等。它是I/O流控制头文件,就像C里面的格式化输出一样。</p>
<p>setw(int n)是c++中在输出操作中使用的字段宽度设置，设置输出的域宽，n表示字段宽度（<code>该字段宽度包括要输出的字符和空格</code>）。只对紧接着的输出有效，紧接着的输出结束后又变回默认的域宽。</p>
<p>当后面紧跟着的输出字段长度小于n的时候，在<code>该字段前面</code>用空格补齐；当输出字段长度大于n时，全部<code>整体输出</code>（等于没有用setw）。</p>
<h2 id="用法-2"><a class="header-anchor" href="#用法-2">.</a>用法</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// setw 的例子</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span>     <span class="comment">// std::cout, std::endl</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span>      <span class="comment">// std::setw</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  cout &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>);</span><br><span class="line">  cout &lt;&lt; <span class="number">77</span> &lt;&lt; endl;</span><br><span class="line">  cout &lt;&lt; <span class="number">12</span> &lt;&lt; <span class="built_in">setw</span>(<span class="number">4</span>) &lt;&lt; <span class="number">12345</span> &lt;&lt; <span class="number">12</span> &lt;&lt; <span class="built_in">setw</span>(<span class="number">5</span>) &lt;&lt; <span class="number">678</span> &lt;&lt; endl;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">        <span class="number">77</span></span><br><span class="line"><span class="comment">// 前面8个空格+两个数字，共占域宽10</span></span><br><span class="line"><span class="number">121234512</span>  <span class="number">678</span></span><br><span class="line"><span class="comment">// 因为12345超过了4个宽度限制所以无效，而678没有超过5个宽度限制所以前面补上2个空格</span></span><br></pre></td></tr></table></figure>
<h2 id="返回值-2"><a class="header-anchor" href="#返回值-2">.</a>返回值</h2>
<p>未指定。此函数只能用作 流操纵器。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C++</tag>
        <tag>setw</tag>
        <tag>字符控制</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 中 new 的用法</title>
    <url>/2020/05/C++-%E4%B8%AD-new-%E7%9A%84%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<h1 id="C-关键字-new-的用法"><a class="header-anchor" href="#C-关键字-new-的用法">.</a>C++ 关键字 - new 的用法</h1>
<p><a href="https://www.runoob.com/cprogramming/c-standard-library.html">https://www.runoob.com/cprogramming/c-standard-library.html</a></p>
<p>位于C++ 标准库 #include <iostream></p>
<span id="more"></span>
<h2 id="描述-3"><a class="header-anchor" href="#描述-3">.</a>描述</h2>
<p>new其实就是告诉计算机开辟一段新的空间，但是和一般的声明不同的是，new开辟的空间在<code>堆上</code>，而一般声明的变量存放在<code>栈上</code>。通常来说，当在局部函数中new出一段新的空间，该段空间在局部函数调用结束后仍然能够使用，可以用来向主函数传递参数。</p>
<p>另外需要注意的是，new的使用格式，new出来的是一段空间的首地址。所以一般需要用指针来存放这段地址。</p>
<p>一般用 <code>delete</code> 回收这个存储空间。</p>
<h2 id="语法规则"><a class="header-anchor" href="#语法规则">.</a>语法规则</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> *x = <span class="keyword">new</span> <span class="type">int</span>;       	<span class="comment">//开辟一个存放整数的存储空间，返回一个指向该存储空间的地址(即指针)</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> *a = <span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">100</span>);  	<span class="comment">//开辟一个存放整数的空间，并指定该整数的初值为100，返回一个指向该存储空间的地址</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> *b = <span class="keyword">new</span> <span class="type">char</span>[<span class="number">10</span>]; 	<span class="comment">//开辟一个存放‘字符数组’(包括10个元素)的空间，返回首元素的地址</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> *p=<span class="keyword">new</span> <span class="built_in">float</span> (<span class="number">3.14159</span>);<span class="comment">//开辟一个存放单精度数的空间，并指定该实数的初值为//3.14159，将返回的该空间的地址赋给指针变量p</span></span><br></pre></td></tr></table></figure>
<h2 id="用法-3"><a class="header-anchor" href="#用法-3">.</a>用法</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">example1</span><span class="params">()</span><span class="comment">//新建函数1</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//可以在new后面直接赋值</span></span><br><span class="line">  <span class="type">int</span> *p = <span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">3</span>);</span><br><span class="line">  <span class="comment">//也可以单独赋值</span></span><br><span class="line">  <span class="comment">//*p = 3;</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment">//如果不想使用指针，可以定义一个变量，在new之前用“*”表示new出来的内容</span></span><br><span class="line">  <span class="type">int</span> q = *<span class="keyword">new</span> <span class="type">int</span>;</span><br><span class="line">  q = <span class="number">1</span>;</span><br><span class="line">  cout &lt;&lt; q &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> *p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">example2</span><span class="params">()</span><span class="comment">//新建函数2</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//当new一个数组时，同样用一个指针接住数组的首地址</span></span><br><span class="line">  <span class="type">int</span> *q = <span class="keyword">new</span> <span class="type">int</span>[<span class="number">3</span>];</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++)</span><br><span class="line">    q[i] = i;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> q;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line">  string name;</span><br><span class="line">  <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function">student* <span class="title">example3</span><span class="params">()</span><span class="comment">//新建函数3</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//这里是用一个结构体指针接住结构体数组的首地址</span></span><br><span class="line">  <span class="comment">//对于结构体指针，个人认为目前这种赋值方法比较方便</span></span><br><span class="line">  student *stlist = <span class="keyword">new</span> student[<span class="number">3</span>]&#123;&#123;<span class="string">&quot;abc&quot;</span>, <span class="number">90</span>&#125;, &#123;<span class="string">&quot;bac&quot;</span>, <span class="number">78</span>&#125;, &#123;<span class="string">&quot;ccd&quot;</span>, <span class="number">93</span>&#125;&#125;;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> stlist;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span><span class="comment">//主函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> e1 = <span class="built_in">example1</span>();</span><br><span class="line">  cout &lt;&lt;<span class="string">&quot;e1: &quot;</span>&lt;&lt; e1 &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line">  <span class="type">int</span> *e2 = <span class="built_in">example2</span>();</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++)</span><br><span class="line">    cout &lt;&lt; e2[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">  cout &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  student *st1 = <span class="built_in">example3</span>();</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++)</span><br><span class="line">    cout &lt;&lt; st1[i].name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; st1[i].score &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="返回值-3"><a class="header-anchor" href="#返回值-3">.</a>返回值</h2>
<p>该函数返回一个存储空间的首地址（指针）。一般用 <code>delete</code> 回收这个存储空间。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C++</tag>
        <tag>new</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 中 static 静态存储</title>
    <url>/2020/05/C++-%E4%B8%AD-static-%E9%9D%99%E6%80%81%E5%AD%98%E5%82%A8/</url>
    <content><![CDATA[<h1 id="C-中-static-静态存储"><a class="header-anchor" href="#C-中-static-静态存储">.</a>C++ 中 static 静态存储</h1>
<p><a href="https://blog.csdn.net/guotianqing/article/details/79828100">https://blog.csdn.net/guotianqing/article/details/79828100</a></p>
<h2 id="描述-4"><a class="header-anchor" href="#描述-4">.</a>描述</h2>
<p>static关键字在c语言中比较常用，使用恰当能够大大提高程序的模块化特性，有利于扩展和维护。</p>
<p>但是对于c语言初学者，static由于使用灵活，并不容易掌握。</p>
<span id="more"></span>
<p><strong>特点</strong></p>
<ol>
<li>默认值，0或\0</li>
<li>值会一直保留</li>
</ol>
<p><strong>静态局部变量</strong>使用static修饰符定义，即使在声明时未赋初值，编译器也会把它初始化为0。且静态局部变量存储于进程的全局数据区，即使函数返回，它的值也会保持不变。</p>
<blockquote>
<p>变量在全局数据区分配内存空间；编译器自动对其初始化<br />
其作用域为局部作用域，当<strong>定义它的函数结束时</strong>，其作用域随之结束</p>
</blockquote>
<p><strong>静态全局变量</strong>仅对当前文件可见，其他文件不可访问，其他文件可以定义与其同名的变量，两者互不影响。</p>
<blockquote>
<p>在定义不需要与其他文件共享的全局变量时，加上static关键字能够有效地降低程序模块之间的耦合，避免不同文件同名变量的冲突，且不会误使用。</p>
</blockquote>
<p><strong>静态函数</strong>的使用方式与全局变量类似，在函数的返回类型前加上static。</p>
<p>其特性如下：</p>
<ul>
<li>静态函数只能在声明它的文件中可见，其他文件不能引用该函数</li>
<li>不同的文件可以使用相同名字的静态函数，互不影响</li>
</ul>
<blockquote>
<p>非静态函数可以在另一个文件中直接引用，甚至不必使用extern声明</p>
</blockquote>
<h2 id="用法-4"><a class="header-anchor" href="#用法-4">.</a>用法</h2>
<p>static int  a;</p>
<h2 id="实例"><a class="header-anchor" href="#实例">.</a>实例</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fn</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;n=%d\n&quot;</span>, n);</span><br><span class="line">    n++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;n++=%d\n&quot;</span>, n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fn_static</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> n = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;static n=%d\n&quot;</span>, n);</span><br><span class="line">    n++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;n++=%d\n&quot;</span>, n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">fn</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;--------------------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fn_static</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;--------------------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fn</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;--------------------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fn_static</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">-&gt; % ./a.out </span><br><span class="line">n=<span class="number">10</span></span><br><span class="line">n++=<span class="number">11</span></span><br><span class="line">--------------------</span><br><span class="line"><span class="type">static</span> n=<span class="number">10</span></span><br><span class="line">n++=<span class="number">11</span></span><br><span class="line">--------------------</span><br><span class="line">n=<span class="number">10</span></span><br><span class="line">n++=<span class="number">11</span></span><br><span class="line">--------------------</span><br><span class="line"><span class="type">static</span> n=<span class="number">11</span></span><br><span class="line">n++=<span class="number">12</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>可见，静态局部变量的效果跟全局变量有一拼，但是位于函数体内部，就极有利于程序的模块化了。</p>
<h2 id="C-中的-静态存储"><a class="header-anchor" href="#C-中的-静态存储">.</a>C++ 中的 静态存储</h2>
<h5 id="静态数据成员"><a class="header-anchor" href="#静态数据成员">.</a>静态数据成员</h5>
<p>在类内数据成员的声明前加上static关键字，该数据成员就是类内的静态数据成员。其特点如下：</p>
<ul>
<li>静态数据成员存储在全局数据区，静态数据成员在定义时分配存储空间，所以不能在类声明中定义</li>
<li>静态数据成员是类的成员，无论定义了多少个类的对象，静态数据成员的拷贝只有一个，且对该类的所有对象可见。也就是说任一对象都可以对静态数据成员进行操作。而对于非静态数据成员，每个对象都有自己的一份拷贝。</li>
<li>由于上面的原因，静态数据成员不属于任何对象，在没有类的实例时其作用域就可见，在没有任何对象时，就可以进行操作</li>
<li>和普通数据成员一样，静态数据成员也遵从<code>public, protected, private</code>访问规则</li>
<li>静态数据成员的初始化格式：<code>&lt;数据类型&gt;&lt;类名&gt;::&lt;静态数据成员名&gt;=&lt;值&gt;</code></li>
<li>类的静态数据成员有两种访问方式：<code>&lt;类对象名&gt;.&lt;静态数据成员名&gt; 或 &lt;类类型名&gt;::&lt;静态数据成员名&gt;</code></li>
</ul>
<p>同全局变量相比，使用静态数据成员有两个优势：</p>
<ul>
<li>静态数据成员没有进入程序的全局名字空间，因此不存在与程序中其它全局名字冲突的可能性</li>
<li>可以实现信息隐藏。静态数据成员可以是private成员，而全局变量不能</li>
</ul>
<h5 id="静态成员函数"><a class="header-anchor" href="#静态成员函数">.</a>静态成员函数</h5>
<p>与静态数据成员类似，静态成员函数属于整个类，而不是某一个对象，其特性如下：</p>
<ul>
<li>静态成员函数没有this指针，它无法访问属于类对象的非静态数据成员，也无法访问非静态成员函数，它只能调用其余的静态成员函数</li>
<li>出现在类体外的函数定义不能指定关键字static</li>
<li>非静态成员函数可以任意地访问静态成员函数和静态数据成员</li>
</ul>
<h3 id="总结-3"><a class="header-anchor" href="#总结-3">.</a>总结</h3>
<p>static是一个很有用的关键字，使用得当可以使程序锦上添花。当然，有的公司编码规范明确规定只用于本文件的函数要全部使用static关键字声明，这是一个良好的编码风格。</p>
<p>无论如何，要在实际编码时注意自己的编码习惯，尽量体现出语言本身的优雅和编码者的编码素质。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C++</tag>
        <tag>static</tag>
        <tag>静态存储</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 中的 引用</title>
    <url>/2020/05/C++-%E4%B8%AD%E7%9A%84-%E5%BC%95%E7%94%A8/</url>
    <content><![CDATA[<h1 id="引用调用-reference"><a class="header-anchor" href="#引用调用-reference">.</a>引用调用(reference)</h1>
<p>引用是C<ins>特有的概念，它是程序设计语言发展的产物。C</ins>提供的引用应用于函数既满足使用时的简单方便，又保证执行的效率。C和C<ins>的函数调用的主要区别是C</ins>中使用了引用调用。</p>
<p>引用调用是函数传递参数的一种方式，使用引用调用，可以在子函数中对形参所做的更改对主函数中的实参有效。</p>
<p>引用可以看成是一种特殊类型的变量可以被认为是另一个变量的<code>别名</code>，就好比人的绰号一样，虽然名字不同，但所指向的人是一样的，所以引用还与指针有类似的地方。</p>
<span id="more"></span>
<h2 id="举例如下"><a class="header-anchor" href="#举例如下">.</a>举例如下:</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i,j;</span><br><span class="line"><span class="type">int</span> &amp;ri=i; <span class="comment">//建立一个int型的引用ri，并将其初始化为变量i的一个别名</span></span><br><span class="line">j=<span class="number">10</span>;</span><br><span class="line">ri=j; 	<span class="comment">//相当于i=j;</span></span><br></pre></td></tr></table></figure>
<h2 id="注意事项"><a class="header-anchor" href="#注意事项">.</a>注意事项</h2>
<p>需要注意的是:</p>
<ol>
<li>声明一个引用时，必须同时对它进行初始化，使它指向一个<code>已经存在的对象</code>。</li>
<li>一旦一个引用被初始化后，就不能改为指向其它对象(也就是说，<code>一个引用只能被赋予一次定义</code>，一个引用从它诞生之时起，就必须确定是哪个变量的别名，而且始终只能作为这个变量的别名不能另作他用)</li>
<li>引用也可以作为形参，作为形参时候，情况稍有不同，这是因为，形参的初始化不在类型说明时候进行，而是在执行主调函数的调用表达式时 ，才为形参分配内存空间，同时用实参来初始化形参。这样引用类型的形参就通过形实结合，成为实参的一个别名，对形参的任何操作也就会直接作用于实参。</li>
</ol>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C++</tag>
        <tag>引用</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 内联函数</title>
    <url>/2020/05/C++-%E5%86%85%E8%81%94%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="C-内联函数"><a class="header-anchor" href="#C-内联函数">.</a>C++ 内联函数</h1>
<p>C++中支持内联函数，其目的是为了提高函数的执行效率，用关键字 inline 放在函数定义的前面(注意是定义而非声明)即可将函数指定为内联函数，内联函数通常就是将它在程序中的每个调用点上“内联地”展开。</p>
<p>内联函数有效地提高函数的执行效率，如果写成函数有一个潜在的缺点：调用函数比求解等价表达式要慢得多。在大多数的机器上，调用函数都要做很多工作：调用前要先保存寄存器，并在返回时恢复，复制实参，程序还必须转向一个新位置执行。</p>
<h2 id="描述-5"><a class="header-anchor" href="#描述-5">.</a>描述</h2>
<p>C++ <strong>内联函数</strong>是通常与<a href="https://www.runoob.com/cplusplus/cpp-classes-objects.html">类</a>一起使用。如果一个函数是内联的，那么在编译时，编译器会把该函数的代码副本放置在每个调用该函数的地方。</p>
<p>对内联函数进行任何修改，都需要<strong>重新编译</strong>函数的所有客户端，因为编译器需要重新更换一次所有的代码，否则将会继续使用旧的函数。</p>
<p>如果想把一个函数定义为内联函数，则需要定义函数时在函数名前面放置关键字 <strong><u>inline</u></strong>，在调用函数之前需要对函数进行定义。如果已定义的函数多于一行，编译器会忽略 inline 限定符。</p>
<blockquote>
<p>在类定义中的定义的函数都是内联函数，即使没有使用 <strong>inline</strong> 说明符。</p>
</blockquote>
<p>注意：</p>
<blockquote>
<p>1.在内联函数内不允许使用<u>循环语句、switch和开关语句</u>；<br />
2.内联函数的定义必须出现在内联函数<code>第一次调用之前</code>（也就是使用这个函数之前）；<br />
3.类结构中所在的类说明内部定义的函数（有函数体）默认是内联函数。<br />
在类里面声明的函数（不包含函数体，函数体在类外面）不是默认内联函数</p>
</blockquote>
<h3 id="提示："><a class="header-anchor" href="#提示：">.</a>提示：</h3>
<ul>
<li>
<p>只有当函数只有 10 行甚至更少时才将其定义为内联函数.</p>
</li>
<li>
<p>定义: 当函数被声明为内联函数之后, 编译器会将其内联展开, 而不是按通常的函数调用机制进行调用.</p>
</li>
<li>
<p>优点: 当函数体比较小的时候, 内联该函数可以令目标代码更加高效. 对于存取函数以及其它函数体比较短, 性能关键的函数, 鼓励使用内联.</p>
</li>
<li>
<p>缺点: 滥用内联将导致程序变慢. 内联可能使目标代码量或增或减, 这取决于内联函数的大小. 内联非常短小的存取函数通常会减少代码大小, 但内联一个相当大的函数将戏剧性的增加代码大小. 现代处理器由于更好的利用了指令缓存, 小巧的代码往往执行更快。</p>
</li>
<li>
<p>结论: 一个较为合理的经验准则是, 不要内联超过 10 行的函数. 谨慎对待析构函数, 析构函数往往比其表面看起来要更长, 因为有隐含的成员和基类析构函数被调用!</p>
</li>
<li>
<p>另一个实用的经验准则: 内联那些包含循环或 switch 语句的函数常常是得不偿失 (除非在大多数情况下, 这些循环或 switch 语句从不被执行).</p>
</li>
<li>
<p>有些函数即使声明为内联的也不一定会被编译器内联, 这点很重要; 比如虚函数和递归函数就不会被正常内联. 通常, 递归函数不应该声明成内联函数.(递归调用堆栈的展开并不像循环那么简单, 比如递归层数在编译时可能是未知的, 大多数编译器都不支持内联递归函数). 虚函数内联的主要原因则是想把它的函数体放在类定义内, 为了图个方便, 抑或是当作文档描述其行为, 比如精短的存取函数.</p>
</li>
</ul>
<h2 id="实例-2"><a class="header-anchor" href="#实例-2">.</a>实例</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line">则调用： cout&lt;&lt; <span class="built_in">max</span>(a, b) &lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">在编译时会展开为： cout&lt;&lt; (a &gt; b ? a : b) &lt;&lt;endl;</span><br><span class="line">从而消除了把 max写成函数的额外执行开销</span><br></pre></td></tr></table></figure>
<p>关键字 inline 必须与函数定义体放在一起才能使函数成为内联，仅将 inline 放在函数声明前面不起任何作用。<u>声明与定义不可混为一谈</u></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">如下的函数 Foo 不能成为内联函数：</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">Foo</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span>;   <span class="comment">// inline 仅与函数声明放在一起 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;...&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Foo</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span>&#123;...&#125;</span><br><span class="line"></span><br><span class="line">而如下风格的函数 Foo 则成为内联函数：</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Foo</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;...&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">Foo</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span>&#123;...&#125;   <span class="comment">// inline 与函数定义体放在一起</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C++</tag>
        <tag>内联函数</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 自定义函数 默认形参</title>
    <url>/2020/05/C++-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0-%E9%BB%98%E8%AE%A4%E5%BD%A2%E5%8F%82/</url>
    <content><![CDATA[<h1 id="C-自定义函数-默认形参"><a class="header-anchor" href="#C-自定义函数-默认形参">.</a>C 自定义函数 默认形参</h1>
<h2 id="描述-6"><a class="header-anchor" href="#描述-6">.</a>描述</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">fun</span> <span class="params">(<span class="type">int</span> a , <span class="type">int</span> b = <span class="number">4</span> , <span class="type">int</span> c = <span class="number">9</span>)</span></span>&#123;&#125; </span><br></pre></td></tr></table></figure>
<p>这样在<code>c语言</code>中是不可以的，这是<code>c++的概念</code>，<strong>默认参数</strong>。</p>
<span id="more"></span>
<p>以上面的fun函数为例</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">fun</span>(<span class="number">2</span>);			<span class="comment">// 默认b=4 , c=9。</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">fun</span>(<span class="number">4</span>,<span class="number">5</span>,<span class="number">23</span>); 	<span class="comment">// 这里在函数中a=4 , b=5 , c=23。 </span></span><br></pre></td></tr></table></figure>
<p>就是说，如果调用时有了实参代入，就使用实参的值；如果没有，就使用默认的形参值。</p>
<blockquote>
<p>规则：</p>
<ol>
<li>默认参数从后往前使用</li>
</ol>
  <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">fun</span> <span class="params">(<span class="type">char</span> a = <span class="string">&#x27;a&#x27;</span> , <span class="type">int</span> b , <span class="type">int</span> c )</span></span>&#123;&#125;  <span class="comment">// 是错【X】的</span></span><br></pre></td></tr></table></figure>
<p>默认参数不能间断使用</p>
  <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">fun</span> <span class="params">(<span class="type">char</span> a = <span class="string">&#x27;a&#x27;</span> , <span class="type">int</span> b , <span class="type">int</span> c = <span class="number">9</span>)</span></span>&#123;&#125;  <span class="comment">// 是错【X】的</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>默认形参要在调用之前使用：</li>
</ol>
<p>用了函数原型(函数的声明)就要在函数原型里定义默认形参</p>
<p>如果函数定义在调用之前，则可直接在函数定义里使用默认形参</p>
</blockquote>
<h2 id="用法-5"><a class="header-anchor" href="#用法-5">.</a>用法</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">fun1</span> <span class="params">(<span class="type">char</span> a = <span class="string">&#x27;a&#x27;</span> , <span class="type">int</span> b = <span class="number">4</span> , <span class="type">int</span> c = <span class="number">9</span>)</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">fun2</span> <span class="params">(<span class="type">char</span> a , <span class="type">int</span> b = <span class="number">4</span> , <span class="type">int</span> c = <span class="number">9</span>)</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">fun3</span> <span class="params">(<span class="type">char</span> a , <span class="type">int</span> b , <span class="type">char</span> c = <span class="string">&#x27;d&#x27;</span>)</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C++</tag>
        <tag>形参</tag>
      </tags>
  </entry>
  <entry>
    <title>C++类与对象</title>
    <url>/2020/05/C++-%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="C-类与对象"><a class="header-anchor" href="#C-类与对象">.</a>C++ 类与对象</h1>
<p>C++ 在 C 语言的基础上增加了面向对象编程，C++ 支持面向对象程序设计。类是 C++ 的核心特性，通常被称为用户定义的类型。</p>
<p>类用于指定对象的形式，它包含了数据表示法和用于处理数据的方法。类中的数据和方法称为类的成员。函数在一个类中被称为类的成员。</p>
<span id="more"></span>
<h2 id="C-类定义"><a class="header-anchor" href="#C-类定义">.</a>C++ 类定义</h2>
<p>定义一个类，本质上是定义一个数据类型的蓝图。这实际上并没有定义任何数据，但它定义了类的名称意味着它定义了类的对象包括了什么，以及可以在这个对象上执行哪些操作。</p>
<p>类定义是以关键字 <strong>class</strong> 开头，后跟类的名称。类的主体是包含在一对花括号中。类定义后必须跟着一个分号或一个声明列表。<u>并且其中的成员数据（变量）不能赋初始值</u>。例如，我们使用关键字 <strong>class</strong> 定义 Box 数据类型，如下所示：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Box</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">V</span><span class="params">()</span></span>&#123;v=length*breadth*height;<span class="keyword">return</span> v;&#125;		<span class="comment">//计算体积</span></span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">C</span><span class="params">()</span></span>&#123;c=<span class="number">4</span>*(length+breadth+height);<span class="keyword">return</span> c;&#125;	<span class="comment">//计算周长</span></span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">    	<span class="type">double</span> length;   <span class="comment">// 盒子的长度</span></span><br><span class="line"> 		<span class="type">double</span> breadth;  <span class="comment">// 盒子的宽度</span></span><br><span class="line"> 		<span class="type">double</span> height;   <span class="comment">// 盒子的高度</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="类成员的访问限制-权限"><a class="header-anchor" href="#类成员的访问限制-权限">.</a>类成员的访问限制(权限)</h2>
<p>数据封装是面向对象编程的一个重要特点，它防止函数直接访问类类型的内部成员。类成员的访问限制是通过在类主体内部对各个区域标记 <strong>public、private、protected</strong> 来指定的。关键字 <strong>public、private、protected</strong> 称为访问修饰符。</p>
<p>一个类可以有多个 public、protected 或 private 标记区域。<code>每个标记区域在下一个标记区域开始之前</code>或者<code>在遇到类主体结束右括号之前</code>都是有效的。<u>成员和类的默认访问修饰符是 private</u>。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">		<span class="comment">// 公有成员</span></span><br><span class="line">	<span class="keyword">protected</span>:</span><br><span class="line"> 		<span class="comment">// 受保护成员</span></span><br><span class="line">	<span class="keyword">private</span>:</span><br><span class="line">		<span class="comment">// 私有成员</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="公有（public）成员"><a class="header-anchor" href="#公有（public）成员">.</a>公有（public）成员</h3>
<p><strong>公有</strong>成员在程序中类的外部是可访问的。您可以不使用任何成员函数来设置和获取公有变量的值。</p>
<h3 id="私有（private）成员"><a class="header-anchor" href="#私有（private）成员">.</a>私有（private）成员</h3>
<p><strong>私有</strong>成员变量或函数在类的外部是不可访问的，甚至是不可查看的。只有类和友元函数可以访问私有成员。</p>
<p>默认情况下，如果您没有使用任何访问修饰符，类的成员将被假定为私有成员。</p>
<h3 id="保护（protected）成员"><a class="header-anchor" href="#保护（protected）成员">.</a>保护（protected）成员</h3>
<p><strong>保护</strong>成员变量或函数与私有成员十分相似，但有一点不同，保护成员在派生类（即子类）中是可访问的。</p>
<h4 id="代码演示："><a class="header-anchor" href="#代码演示：">.</a>代码演示：</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">text</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    	<span class="type">int</span> a;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">    	<span class="type">int</span> b;</span><br><span class="line">    <span class="keyword">protected</span>:</span><br><span class="line">    	<span class="type">int</span> c;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">setb</span><span class="params">(<span class="type">int</span> Bb)</span></span>&#123;b=Bb;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">t</span>::text	<span class="comment">// t 是 text 的派生类</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">setc</span><span class="params">(<span class="type">int</span> Cc)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">t::setc</span><span class="params">(<span class="type">int</span> Cc)</span> </span>&#123;c=Cc;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    text text1;</span><br><span class="line">    text1.a = <span class="number">5</span>;	<span class="comment">//这是允许的，因为 a 是公有的</span></span><br><span class="line">    text1.b = <span class="number">10</span>;	<span class="comment">//这是不允许的，因为 b 是私有的</span></span><br><span class="line">    text1.<span class="built_in">setb</span>(<span class="number">10</span>);	<span class="comment">//这是允许的，因为 b 的赋值是通过外部接口去给 b 赋值</span></span><br><span class="line">    </span><br><span class="line">    t text2;</span><br><span class="line">    t.<span class="built_in">setc</span>(<span class="number">15</span>);		<span class="comment">//这里使用了成员函数给 text 中的 c 赋值了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="定义-类-的对象"><a class="header-anchor" href="#定义-类-的对象">.</a>定义 类 的对象</h2>
<p>类提供了对象的蓝图，所以基本上，对象是根据类来创建的。声明类的对象，就像声明基本类型的变量一样。下面的语句声明了类 Box 的两个对象：</p>
<p>Box Box1;          // 声明 Box1，类型为 Box<br />
Box Box2;          // 声明 Box2，类型为 Box</p>
<p>对象 Box1 和 Box2 都有它们各自的数据成员。</p>
<h2 id="访问-对象-里的数据成员"><a class="header-anchor" href="#访问-对象-里的数据成员">.</a>访问 对象 里的数据成员</h2>
<p>**<u>在 类 外</u>**访问 类的对象里 的<code>公共数据成员</code>可以使用直接成员访问运算符 <code>.</code> 来访问。<br />
如使用  “对象名.成员名”  的方式访问<code>public</code>属性的成员</p>
<p>为了更好地理解这些概念，让我们尝试一下下面的实例：</p>
<h3 id="实例-3"><a class="header-anchor" href="#实例-3">.</a>实例</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Box</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="type">double</span> length;   <span class="comment">// 长度</span></span><br><span class="line">      <span class="type">double</span> breadth;  <span class="comment">// 宽度</span></span><br><span class="line">      <span class="type">double</span> height;   <span class="comment">// 高度</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   Box Box1;        <span class="comment">// 声明 Box1，类型为 Box</span></span><br><span class="line">   Box Box2;        <span class="comment">// 声明 Box2，类型为 Box</span></span><br><span class="line">   <span class="type">double</span> volume = <span class="number">0.0</span>;     <span class="comment">// 用于存储体积</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">// box 1 详述</span></span><br><span class="line">   Box1.height = <span class="number">5.0</span>; </span><br><span class="line">   Box1.length = <span class="number">6.0</span>; </span><br><span class="line">   Box1.breadth = <span class="number">7.0</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// box 2 详述</span></span><br><span class="line">   Box2.height = <span class="number">10.0</span>;</span><br><span class="line">   Box2.length = <span class="number">12.0</span>;</span><br><span class="line">   Box2.breadth = <span class="number">13.0</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// box 1 的体积</span></span><br><span class="line">   volume = Box1.height * Box1.length * Box1.breadth;</span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Box1 的体积：&quot;</span> &lt;&lt; volume &lt;&lt;endl;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// box 2 的体积</span></span><br><span class="line">   volume = Box2.height * Box2.length * Box2.breadth;</span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Box2 的体积：&quot;</span> &lt;&lt; volume &lt;&lt;endl;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当上面的代码被编译和执行时，它会产生下列结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Box1 的体积：210</span><br><span class="line">Box2 的体积：1560</span><br></pre></td></tr></table></figure>
<p>需要注意的是，私有的成员和受保护的成员不能使用直接成员访问运算符 <code>.</code> 来直接访问。我们将在后续的教程中学习如何访问私有成员和受保护的成员。</p>
<h2 id="类的构造函数"><a class="header-anchor" href="#类的构造函数">.</a>类的构造函数</h2>
<p>类的<strong>构造函数</strong>是类的一种特殊的成员函数，它会在每次创建类的新对象时执行。</p>
<p><strong>特点：</strong></p>
<ol>
<li>构造函数的名称与类的名称是完全相同的，</li>
<li>并且不会返回任何类型，</li>
<li>也不会返回 void。</li>
</ol>
<p>**作用：**构造函数可用于为某些成员变量设置初始值。</p>
<blockquote>
<p>在创建派生类对象时,构造函数的执行顺序：<br />
基类构造函数  →  对象成员构造函数  →  派生类本身的构造函数</p>
</blockquote>
<p>下面的实例有助于更好地理解构造函数的概念：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Line</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">		<span class="function"><span class="type">void</span> <span class="title">setLength</span><span class="params">( <span class="type">double</span> len )</span></span>;</span><br><span class="line">		<span class="function"><span class="type">double</span> <span class="title">getLength</span><span class="params">( <span class="type">void</span> )</span></span>;</span><br><span class="line">		<span class="built_in">Line</span>();  <span class="comment">// 这是不带参数的构造函数，可以用于旁白。</span></span><br><span class="line">		<span class="built_in">Line</span>(<span class="type">double</span> len);  <span class="comment">// 这是带参数的构造函数,在创建对象时就会给对象赋初始值</span></span><br><span class="line">		<span class="comment">//这里的两个Line是使用了重载函数</span></span><br><span class="line">    </span><br><span class="line">   <span class="keyword">private</span>:</span><br><span class="line">      <span class="type">double</span> length;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 成员函数定义，包括构造函数</span></span><br><span class="line">Line::<span class="built_in">Line</span>(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Object is being created&quot;</span> &lt;&lt; endl;</span><br><span class="line">    length = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">Line::<span class="built_in">Line</span>( <span class="type">double</span> len)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Object is being created, length = &quot;</span> &lt;&lt; len &lt;&lt; endl;</span><br><span class="line">    length = len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Line::setLength</span><span class="params">( <span class="type">double</span> len )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    length = len;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Line::getLength</span><span class="params">( <span class="type">void</span> )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 程序的主函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Line line1;			<span class="comment">//自动指向不带参数的</span></span><br><span class="line">    <span class="function">Line <span class="title">line2</span><span class="params">(<span class="number">10.0</span>)</span></span>;	<span class="comment">//自动指向带参数的</span></span><br><span class="line"> </span><br><span class="line">   <span class="comment">// 设置长度</span></span><br><span class="line">   line.<span class="built_in">setLength</span>(<span class="number">6.0</span>); </span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Length of line : &quot;</span> &lt;&lt; line.<span class="built_in">getLength</span>() &lt;&lt;endl;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="使用初始化列表来初始化字段"><a class="header-anchor" href="#使用初始化列表来初始化字段">.</a>使用初始化列表来初始化字段</h3>
<p>主要是用于 较多参数 时的值的初始化</p>
<p>使用初始化列表来初始化字段：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Line::<span class="built_in">Line</span>( <span class="type">double</span> len): <span class="built_in">length</span>(len)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Object is being created, length = &quot;</span> &lt;&lt; len &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的语法等同于如下语法：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Line::<span class="built_in">Line</span>( <span class="type">double</span> len)</span><br><span class="line">&#123;</span><br><span class="line">    length = len;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Object is being created, length = &quot;</span> &lt;&lt; len &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>假设有一个类 C，具有多个字段 X、Y、Z 等需要进行初始化，同理地，您可以使用上面的语法，只需要在不同的字段使用逗号进行分隔，如下所示：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">C::<span class="built_in">C</span>( <span class="type">double</span> a, <span class="type">double</span> b, <span class="type">double</span> c): <span class="built_in">X</span>(a), <span class="built_in">Y</span>(b), <span class="built_in">Z</span>(c)</span><br><span class="line">&#123;</span><br><span class="line">  ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="类的析构函数"><a class="header-anchor" href="#类的析构函数">.</a>类的析构函数</h2>
<p>类的<strong>析构函数</strong>是类的一种特殊的成员函数，它会在每次删除所创建的对象时执行。</p>
<p>析构函数的名称与类的名称是完全相同的，只是在前面加了个波浪号（~）作为前缀，它不会返回任何值，也不能带有任何参数。析构函数有助于在跳出程序（比如关闭文件、释放内存等）前释放资源。</p>
<blockquote>
<p>在具有继承关系的类层次体系中,析构函数执行的顺序：<br />
派生类本身的析构函数  →  对象成员析构函数  →  基类析构函数</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Line</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">setLength</span><span class="params">( <span class="type">double</span> len )</span></span>;</span><br><span class="line">      <span class="function"><span class="type">double</span> <span class="title">getLength</span><span class="params">( <span class="type">void</span> )</span></span>;</span><br><span class="line">      <span class="built_in">Line</span>();   <span class="comment">// 这是构造函数声明</span></span><br><span class="line">      ~<span class="built_in">Line</span>();  <span class="comment">// 这是析构函数声明</span></span><br><span class="line"> </span><br><span class="line">   <span class="keyword">private</span>:</span><br><span class="line">      <span class="type">double</span> length;</span><br><span class="line">&#125;;</span><br><span class="line"> <span class="comment">// 成员函数定义，包括构造函数</span></span><br><span class="line">Line::<span class="built_in">Line</span>(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;对象已被创建&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">Line::~<span class="built_in">Line</span>(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;对象已被删除&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Line::setLength</span><span class="params">( <span class="type">double</span> len )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    length = len;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Line::getLength</span><span class="params">( <span class="type">void</span> )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">// 程序的主函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Line line;</span><br><span class="line"> 	<span class="comment">// 设置长度</span></span><br><span class="line">	line.<span class="built_in">setLength</span>(<span class="number">6.0</span>); </span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;Length of line : &quot;</span> &lt;&lt; line.<span class="built_in">getLength</span>() &lt;&lt;endl;</span><br><span class="line"> 	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行后的结果为：</p>
<blockquote>
<p>对象已被创建<br />
Length of line : 6<br />
对象已被删除</p>
</blockquote>
<h2 id="类的拷贝构造函数"><a class="header-anchor" href="#类的拷贝构造函数">.</a>类的拷贝构造函数</h2>
<h2 id="类的友元函数"><a class="header-anchor" href="#类的友元函数">.</a>类的友元函数</h2>
<p>类的友元函数是定义在类外部，但有权访问类的所有私有（private）成员和保护（protected）成员。尽管友元函数的原型有在类的定义中出现过，但是友元函数并不是成员函数。<br />
友元可以是一个函数，该函数被称为友元函数；友元也可以是一个类，该类被称为友元类，在这种情况下，整个类及其所有成员都是友元。<br />
如果要声明函数为一个类的友元，需要在类定义中该函数原型前使用关键字 <strong><u>friend</u></strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Box</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> width;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">printWidth</span><span class="params">(Box box1)</span></span>;<span class="comment">//也可以是(Box &amp;box1)，在于是否需要形参改变实参。</span></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">class</span> <span class="title class_">BigBox</span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setWidth</span><span class="params">(<span class="type">double</span> wid)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BigBox</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> :</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">Print</span><span class="params">(<span class="type">int</span> width, Box &amp;box2)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// BigBox是Box的友元类，它可以直接访问Box类的任何成员</span></span><br><span class="line">        box2.<span class="built_in">setWidth</span>(width);</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Width of box : &quot;</span> &lt;&lt; box2.width &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 成员函数定义</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Box::setWidth</span><span class="params">(<span class="type">double</span> wid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    width = wid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请注意：printWidth() 不是任何类的成员函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printWidth</span><span class="params">(Box box1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 因为 printWidth() 是 Box 的友元，它可以直接访问该类的任何成员 */</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Width of box : &quot;</span> &lt;&lt; box1.width &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 程序的主函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Box box;</span><br><span class="line">    BigBox big;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用成员函数设置宽度</span></span><br><span class="line">    box.<span class="built_in">setWidth</span>(<span class="number">10.0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用友元函数输出宽度</span></span><br><span class="line">    <span class="built_in">printWidth</span>(box);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用友元类中的方法设置宽度</span></span><br><span class="line">    big.<span class="built_in">Print</span>(<span class="number">20</span>, box);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="类-与-对象详解"><a class="header-anchor" href="#类-与-对象详解">.</a>类 与 对象详解</h1>
<p>到目前为止，我们已经对 C++ 的类和对象有了基本的了解。下面的列表中还列出了其他一些 C++ 类和对象相关的概念，可以点击相应的链接进行学习。</p>
<table>
<thead>
<tr>
<th style="text-align:left">概念</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-class-member-functions.html">类成员函数</a></td>
<td style="text-align:left">类的成员函数是指那些把定义和原型写在类定义内部的函数，就像类定义中的其他变量一样。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-class-access-modifiers.html">类访问修饰符</a></td>
<td style="text-align:left">类成员可以被定义为 public、private 或 protected。默认情况下是定义为 private。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-constructor-destructor.html">构造函数 与 析构函数</a></td>
<td style="text-align:left">类的构造函数是一种特殊的函数，在创建一个新的对象时调用。类的析构函数也是一种特殊的函数，在删除所创建的对象时调用。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-copy-constructor.html">C++ 拷贝构造函数</a></td>
<td style="text-align:left">拷贝构造函数，是一种特殊的构造函数，它在创建对象时，是使用同一类中之前创建的对象来初始化新创建的对象。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-friend-functions.html">C++ 友元函数</a></td>
<td style="text-align:left"><strong>友元函数</strong>可以访问类的 private 和 protected 成员。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-inline-functions.html">C++ 内联函数</a></td>
<td style="text-align:left">通过内联函数，编译器试图在调用函数的地方扩展函数体中的代码。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-this-pointer.html">C++ 中的 this 指针</a></td>
<td style="text-align:left">每个对象都有一个特殊的指针 <strong>this</strong>，它指向对象本身。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-pointer-to-class.html">C++ 中指向类的指针</a></td>
<td style="text-align:left">指向类的指针方式如同指向结构的指针。实际上，类可以看成是一个带有函数的结构。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-static-members.html">C++ 类的静态成员</a></td>
<td style="text-align:left">类的数据成员和函数成员都可以被声明为静态的。</td>
</tr>
</tbody>
</table>
<h1 id="继承-与-派生"><a class="header-anchor" href="#继承-与-派生">.</a>继承 与 派生</h1>
<h2 id="单继承"><a class="header-anchor" href="#单继承">.</a>单继承</h2>
<p>一个类可以派生自多个类，这意味着，它可以从多个基类继承数据和函数。定义一个派生类，我们使用一个类派生列表来指定基类。类派生列表以一个或多个基类命名，形式如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">derived_class</span>: access_specifier base_class</span><br></pre></td></tr></table></figure>
<p>其中，访问修饰符 access_specifier 是 <strong>public</strong>、<strong>protected</strong> 或 <strong>private</strong> 其中的一个，base_class 是之前定义过的某个类（基类）的名称。如果未使用访问修饰符 access_specifier，则<code>默认为 private</code>。</p>
<h2 id="多继承"><a class="header-anchor" href="#多继承">.</a>多继承</h2>
<p>多继承即一个子类可以有多个父类，它继承了多个父类的特性。</p>
<p>C++ 类可以从多个类 继承成员，语法如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> &lt;派生类名&gt;:&lt;继承方式<span class="number">1</span>&gt;&lt;基类名<span class="number">1</span>&gt;,&lt;继承方式<span class="number">2</span>&gt;&lt;基类名<span class="number">2</span>&gt;,...</span><br><span class="line">&#123;&lt;派生类类体&gt;&#125;;</span><br></pre></td></tr></table></figure>
<p>其中，访问修饰符 继承方式 是 <strong>public</strong>、<strong>protected</strong> 或 <strong>private</strong> 其中的一个，用来修饰每个基类，各个基类之间用逗号分隔。</p>
<h2 id="按访问范围分"><a class="header-anchor" href="#按访问范围分">.</a>按访问范围分</h2>
<p><strong>总结一下三种继承方式：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">继承方式</th>
<th style="text-align:left">基类的public成员</th>
<th style="text-align:left">基类的protected成员</th>
<th style="text-align:left">基类的private成员</th>
<th style="text-align:left">继承引起的访问控制关系变化概括</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">public继承</td>
<td style="text-align:left">仍为public成员</td>
<td style="text-align:left">仍为protected成员</td>
<td style="text-align:left">不可访问</td>
<td style="text-align:left">基类的非私有成员在子类的访问属性不变</td>
</tr>
<tr>
<td style="text-align:left">protected继承</td>
<td style="text-align:left">变为protected成员</td>
<td style="text-align:left">仍为protected成员</td>
<td style="text-align:left">不可访问</td>
<td style="text-align:left">基类的非私有成员都为子类的保护成员</td>
</tr>
<tr>
<td style="text-align:left">private继承</td>
<td style="text-align:left">变为private成员</td>
<td style="text-align:left">变为private成员</td>
<td style="text-align:left">不可访问</td>
<td style="text-align:left">基类中的非私有成员都称为子类的私有成员</td>
</tr>
</tbody>
</table>
<h3 id="公有继承-pubilc"><a class="header-anchor" href="#公有继承-pubilc">.</a>公有继承 pubilc</h3>
<ul>
<li>基类的public和protected<code>成员</code>的访问属性在派生类中保持不变，但基类的private<code>成员</code>不可直接访问。</li>
<li>派生类中的<code>成员函数</code>可以直接访问基类中的public和protected成员，但不能直接访问基类的private成员。</li>
<li>通过派生类的<code>对象</code>只能访问基类的public成员。</li>
</ul>
<h3 id="保护继承-protected"><a class="header-anchor" href="#保护继承-protected">.</a>保护继承 protected</h3>
<ul>
<li>基类的public和protected<code>成员</code>都以protected<code>权限</code>出现在派生类中，但基类的private<code>成员</code>不可直接访问。</li>
<li>派生类中的<code>成员函数</code>可以直接访问基类中的public和protected成员，但不能直接访问基类的private成员。</li>
<li>通过派生类的<code>对象</code>不能直接访问基类中的<strong>任何成员</strong></li>
</ul>
<h3 id="私有继承-private"><a class="header-anchor" href="#私有继承-private">.</a>私有继承 private</h3>
<ul>
<li>基类的public和protected<code>成员</code>都以private<code>权限</code>出现在派生类中，但基类的private<code>成员</code>不可直接访问，且以 <code>该派生类</code> 为 <strong>基类</strong> 的派生类不能访问 <code>该基类</code> 的<strong>任何成员</strong>。</li>
<li>派生类中的<code>成员函数</code>可以直接访问基类中的public和protected成员，但不能直接访问基类的private成员。</li>
<li>通过派生类的<code>对象</code>不能直接访问基类中的<strong>任何成员</strong>。</li>
</ul>
<hr />
<p><strong>派生后 继承 到的 权限 所对应的：</strong></p>
<p>派生类的<code>成员</code>对基类成员的访问</p>
<p>派生类的<code>对象</code>对基类成员的访问</p>
<p><strong>一个派生类继承了所有的基类方法，但下列情况除外：</strong></p>
<ul>
<li>基类的构造函数、析构函数和拷贝构造函数。</li>
<li>基类的重载运算符。</li>
<li>基类的友元函数。</li>
</ul>
<h2 id="二义性问题"><a class="header-anchor" href="#二义性问题">.</a>二义性问题</h2>
<h2 id="虚基类"><a class="header-anchor" href="#虚基类">.</a>虚基类</h2>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C++</tag>
        <tag>类</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言 标准头文件(详)</title>
    <url>/2020/05/C%E8%AF%AD%E8%A8%80-%E6%A0%87%E5%87%86%E5%A4%B4%E6%96%87%E4%BB%B6-%E8%AF%A6/</url>
    <content><![CDATA[<h1 id="C语言-标准头文件-详"><a class="header-anchor" href="#C语言-标准头文件-详">.</a>C语言 标准头文件(详)</h1>
<p><a href="https://blog.csdn.net/qq_35782149/article/details/79391154">https://blog.csdn.net/qq_35782149/article/details/79391154</a></p>
<p><a href="https://blog.csdn.net/qq_36955347/article/details/71511900">https://blog.csdn.net/qq_36955347/article/details/71511900</a></p>
<p>位于C 源代码 开头的 <code>头文件</code>引用</p>
<p><code>#include &quot;xxx.h&quot;</code></p>
<span id="more"></span>
<h2 id="标准头文件"><a class="header-anchor" href="#标准头文件">.</a>标准头文件</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;assert.h&gt; 		断言</span><br><span class="line">&lt;ctype.h&gt; 		字符类测试 </span><br><span class="line">&lt;errno.h&gt; 		（部分）库函数抛出的错误代码 </span><br><span class="line">&lt;float.h&gt; 		浮点数运算 </span><br><span class="line">&lt;limits.h&gt; 		检测整型数据类型值范围 </span><br><span class="line">&lt;locale.h&gt; 		本土化 </span><br><span class="line">&lt;math.h&gt; 		数学函数 </span><br><span class="line">&lt;setjmp.h&gt; 		“非局部跳转” </span><br><span class="line">&lt;signal.h&gt; 		信号 </span><br><span class="line">&lt;stdarg.h&gt; 		可变参数列表 </span><br><span class="line">&lt;stddef.h&gt; 		一些常数，类型和变量 </span><br><span class="line">&lt;stdio.h&gt; 		输入和输出 </span><br><span class="line">&lt;stdlib.h&gt; 		实用功能 </span><br><span class="line">&lt;string.h&gt; 		字符串函数 </span><br><span class="line">&lt;time.h&gt; 		时间和日期函数</span><br></pre></td></tr></table></figure>
<h2 id="stdio-h-输入和输出"><a class="header-anchor" href="#stdio-h-输入和输出">.</a>&lt;stdio.h&gt; 输入和输出</h2>
<p>&lt;stdio.h&gt;头文件定义了用于输入和输出的函数、类型和宏。最重要的类型是用于声明文件指针的file。另外两个常用的类型是 size_t和fpos_t，<br />
size_t是由运算符sizeof产生的无符号整类型；<br />
fpos_t类型定义能够唯一说明文件中的每个位置的对象。由头部 定义的最有用的宏是EOF，其值代表文件的结尾。</p>
<p>变量：</p>
<blockquote>
<p>typedef size_t<br />
typedef FILE<br />
typedef fpos_t</p>
</blockquote>
<p>常量 ：</p>
<blockquote>
<p>NULL 空值<br />
_IOFBF 表示完全缓冲<br />
_IOLBF 表示线缓冲<br />
_IONBF 表示无缓存<br />
BUFSIZ setbuf函数所使用的缓冲区的大小<br />
EOF EOF是负整数表示END OF FILE<br />
FOPEN_MAX (20)同时打开的文件的最大数量<br />
FILENAME_MAX 文件名的最大长度<br />
L_tmpnam整数，最大长度的临时文件名<br />
SEEK_CUR取得目前文件位置<br />
SEEK_END将读写位置移到文件尾时<br />
SEEK_SET将读写位置移到文件开头<br />
TMP_MAXtmpnam最多次数<br />
stderr标准错误流，默认为屏幕, 可输出到文件。<br />
stdin标准输入流，默认为键盘<br />
stdout标准输出流，默认为屏幕</p>
</blockquote>
<p>所有函数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">clearerr(); 		复位错误标志</span><br><span class="line">fclose(); 			关闭一个流。</span><br><span class="line">feof(); 			检测文件结束符</span><br><span class="line">ferror(); 			检查流是否有错误</span><br><span class="line">fflush();			更新缓冲区</span><br><span class="line">fgetpos(); 			移动文件流的读写位置</span><br><span class="line">fopen();			打开文件</span><br><span class="line">fread(); 			从文件流读取数据</span><br><span class="line">freopen(); 			打开文件</span><br><span class="line">fseek(); 			移动文件流的读写位置</span><br><span class="line">fsetpos();			定位流上的文件指针</span><br><span class="line">ftell(); 			取得文件流的读取位置</span><br><span class="line">fwrite(); 			将数据写至文件流</span><br><span class="line">fgetc(); 			由文件中读取一个字符</span><br><span class="line">fgets(); 			文件中读取一字符串</span><br><span class="line">fputc(); 			将一指定字符写入文件流中</span><br><span class="line">fputs(); 			将一指定的字符串写入文件内</span><br><span class="line">fprintf(); 			格式化输出数据至文件</span><br><span class="line">fscanf(); 			格式化字符串输入</span><br><span class="line">getc(); 			由文件中读取一个字符</span><br><span class="line">getchar(); 			由标准输入设备内读进一字符</span><br><span class="line">gets(); 			由标准输入设备内读进一字符串</span><br><span class="line">putc(); 			将一指定字符写入文件中</span><br><span class="line">putchar(); 			将指定的字符写到标准输出设备</span><br><span class="line">puts(); 			送一字符串到流stdout中</span><br><span class="line">printf(); 			格式化输出数据</span><br><span class="line">perror(); 			打印出错误原因信息字符串 </span><br><span class="line">remove(); 			删除文件</span><br><span class="line">rename(); 			更改文件名称或位置</span><br><span class="line">rewind(); 			重设读取目录的位置为开头位置</span><br><span class="line">setbuf(); 			把缓冲区与流相联</span><br><span class="line">setvbuf(); 			把缓冲区与流相关</span><br><span class="line">scanf(); 			格式输入函数</span><br><span class="line">sprintf(); 			格式化字符串复制</span><br><span class="line">sscanf(); 			格式化字符串输入</span><br><span class="line">tmpfile(); 			以wb+形式创建一个临时二进制文件</span><br><span class="line">tmpnam();			产生一个唯一的文件名</span><br><span class="line">vfprintf(); 		格式化输出数据至文件</span><br><span class="line">vprintf(); 			格式化输出数据</span><br><span class="line">vsprintf(); 		格式化字符串复制</span><br><span class="line">ungetc();			将指定字符写回文件流中</span><br></pre></td></tr></table></figure>
<h2 id="math-h-数学函数"><a class="header-anchor" href="#math-h-数学函数">.</a>&lt;math.h&gt; 数学函数</h2>
<p>&lt;math.h&gt; 是C语言中的数学函数库</p>
<p>三角函数（x代表了一个以弧度表示的角度）</p>
<blockquote>
<p>double sin(double x); 求 x 的正弦<br />
double cos(double x); 求 x 的余弦<br />
double tan(double x); 求 x 的正切<br />
//cot三角函数，可以使用tan(PI/2-x)来实现。</p>
</blockquote>
<p>反三角函数（PI = 3.14159265 ， x代表了一个以弧度表示的角度）</p>
<blockquote>
<p>double asin(double x); 					 求x的反正弦，结果在[-PI/2, PI/2]<br />
double acos(double x); 					求x的反余弦，结果在[0, PI]<br />
double atan(double x);					  求x的反正切，结果在[-PI/2, PI/2]<br />
double atan2(double y,double x);	求以弧度表示的y/x的反正切(整圆值)<br />
x代表 x 轴坐标的浮点值，y代表 y 轴坐标的浮点值。y 和 x 的值的符号决定了正确的象限。结果介于[-PI, PI]。</p>
</blockquote>
<p>双曲三角函数</p>
<blockquote>
<p>double sinh(double x); 			求 x 的双曲正弦<br />
double cosh(double x); 			求 x 的双曲余弦<br />
double tanh(double x); 			求 x 的双曲正切</p>
</blockquote>
<p>指数与对数</p>
<blockquote>
<p>double exp(double x); 					求e的x次幂的值<br />
double sqrt(double x); 					求平方根<br />
double log(double x); 					 求以e为底的对数<br />
double log10(double x); 				 求以10为底的对数<br />
double pow(double x, double y);	计算以 x 的 y 次幂<br />
float powf(float x, float y);			   与pow一致，输入与输出皆为浮点数</p>
</blockquote>
<p>取整</p>
<blockquote>
<p>double ceil(double); 			   取上整<br />
double floor(double); 			取下整</p>
</blockquote>
<p>标准化浮点数（(f = x * 2<sup>p</sup>) ，(f等于x乘以2的p次幂)）</p>
<blockquote>
<p>double frexp(double f, int *p);	已知 f 求<strong>x, p</strong> ( x介于[0.5, 1) )<br />
double ldexp(double x, int p);	已知 x、p 求 **f</p>
</blockquote>
<p>取整与取余</p>
<blockquote>
<p>double modf(double x, double *y);<br />
返回值 x 为小数点后的部分，并且 y 为整数部分。</p>
</blockquote>
<p>求绝对值</p>
<blockquote>
<p>double fabs(double x)			返回 x 的绝对值。</p>
</blockquote>
<p>求整</p>
<blockquote>
<p>double ceil(double x)			   返回大于或等于 x 的最小的整数值。<br />
double floor(double x)			返回小于或等于 x 的最大的整数值。</p>
</blockquote>
<p>求余数</p>
<blockquote>
<p>double fmod(double x, double y);		返回 x 除以 y 的余数。</p>
</blockquote>
<h2 id="string-h-字符串函数"><a class="header-anchor" href="#string-h-字符串函数">.</a>&lt;string.h&gt; 字符串函数</h2>
<p>&lt;string.h&gt; 头文件里包含了C语言的最常用的字符串操作函数</p>
<table>
<thead>
<tr>
<th><strong>函数原型说明</strong></th>
<th><strong>功能</strong></th>
<th><strong>返回值</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>char *strcat(char *s1,char *s2)</td>
<td>把字符串s2接到s1后面</td>
<td>s1所指地址</td>
</tr>
<tr>
<td>char *strchr(char *s,int ch)</td>
<td>在s所指字符串中，找出第一次出现字符ch的位置</td>
<td>返回找到的字符的地址，找不到返回NULL</td>
</tr>
<tr>
<td>int strcmp(char *s1,char *s2)</td>
<td>对s1和s2所指字符串进行比较</td>
<td>s1&lt;s2,返回负数；s1= =s2,返回0；s1&gt;s2,返回正数</td>
</tr>
<tr>
<td>char *strcpy(char *s1,char *s2)</td>
<td>把s2指向的串复制到s1指向的空间</td>
<td>s1 所指地址</td>
</tr>
<tr>
<td>unsigned strlen(char *s)</td>
<td>求字符串s的长度</td>
<td>返回串中字符（不计最后的’\0’）个数</td>
</tr>
<tr>
<td>char *strstr(char *s1,char *s2)</td>
<td>在s1所指字符串中，找出字符串s2第一次出现的位置</td>
<td>返回找到的字符串的地址，找不到返回NULL</td>
</tr>
</tbody>
</table>
<p>宏：</p>
<pre><code>NULL 空
</code></pre>
<p>变量：</p>
<pre><code>typedef size_t
</code></pre>
<p>函数：</p>
<pre><code>memchr();		在某一内存范围中查找一特定字符
memcmp(); 		比较内存内容
memcpy(); 		拷贝内存内容
memmove(); 		拷贝内存内容
memset(); 		将一段内存空间填入某值
strcat(); 		连接两字符串
strncat(); 		连接两字符串
strchr(); 		查找字符串中第一个出现的指定字符
strcmp(); 		比较字符串
strncmp();		比较2个字符串的前N个字符
strcoll(); 		采用目前区域的字符排列比较字符串
strcpy(); 		拷贝字符串
strncpy(); 		拷贝字符串
strcspn(); 		返回字符连续不含指定字符的字符数
strerror(); 	返回错误原因的描述字符串
strlen(); 		计算字符串长度
strpbrk(); 		查找字符串中第一个出现的指定字符
strrchr(); 		查找字符串中最后出现的指定字符
strspn();		返回字符串连续不含指定字符的字符数
strstr(); 		在一字符串中查找指定的字符串
strtok(); 		分割字符串
strxfrm(); 		转换字符串
</code></pre>
<h2 id="time-h-时间和日期函数"><a class="header-anchor" href="#time-h-时间和日期函数">.</a>&lt;time.h&gt; 时间和日期函数</h2>
<p>&lt;time.h&gt; 是C标准函数库中获取时间与日期、对时间与日期数据操作及格式化的头文件。</p>
<p>宏：</p>
<pre><code>NULL null是一个null指针常量的值
CLOCKS_PER_SEC 每秒的时钟数
</code></pre>
<p>变量：</p>
<pre><code>typedef size_t 类型定义
typedef clock_t类型定义
struct tm 结构体
 
struct tm &#123;
int tm_sec; 		/* 秒 – 取值区间为[0,59] */
 
int tm_min; 		/* 分 - 取值区间为[0,59] */
 
int tm_hour; 		/* 时 - 取值区间为[0,23] */
 
int tm_mday; 		/* 一个月中的日期 - 取值区间为[1,31] */
 
int tm_mon; 	/* 月份（从一月开始，0代表一月）-取值区间为[0,11] */
 
int tm_year; 		/* 年份，其值等于实际年份减去1900 */
 
int tm_wday; 		/* 星期 – 取值区间为[0,6]，其中0代表星期天，1代表星期一，以此类推 */
 
int tm_yday; 		/* 从每年的1月1日开始的天数 – 取值区间为[0,365]，其中0代表1月1日，1代表1月2日，以此类推 */
 
int tm_isdst; 		/* 夏令时标识符，实行夏令时的时候，tm_isdst为正。不实行夏令时的进候，tm_isdst为0；不了解情况时，tm_isdst()为负。*/
&#125;;
</code></pre>
<p>函数：</p>
<pre><code>asctime(); 		将时间和日期以字符串格式表示
clock(); 		确定处理器时间
ctime(); 		把日期和时间转换为字符串
difftime(); 	计算两个时刻之间的时间差
gmtime(); 		把日期和时间转换为(GMT)时间
localtime();	取得当地目前时间和日期
mktime();		将时间结构数据转换成经过的秒数
strftime(); 	将时间格式化
time(); 		取得目前的时间
</code></pre>
<h2 id="ctype-h-字符测试"><a class="header-anchor" href="#ctype-h-字符测试">.</a>&lt;ctype.h&gt; 字符测试</h2>
<p>&lt;<code>ctype.h</code>&gt; 主要提供两类重要的函数：字符测试函数和字符大小转化函数。提供的函数中都以<code>int类型</code>为参数，并返回一个int类型的值。实参类型应该隐式转换或者显示转换为int类型。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int isalnum(int c); 判断是否是字母或数字。</span><br><span class="line">int isalpha(int c); 判断是否是字母。</span><br><span class="line">int iscntrl(int c); 判断是否是控制字符。</span><br><span class="line">int isdigit(int c); 判断是否是数字。</span><br><span class="line">int isgraph(int c); 判断是否是可显示字符。</span><br><span class="line">int islower(int c); 判断是否是小写字母。</span><br><span class="line">int isupper(int c); 判断是否是大写字母。</span><br><span class="line">int isprint(int c); 判断是否是可显示字符。</span><br><span class="line">int ispunct(int c); 判断是否是标点字符。</span><br><span class="line">int isspace(int c); 判断是否是空白字符</span><br><span class="line">int isxdigit(int c); 判断字符是否为16进制。</span><br><span class="line">int tolower(int c); 转换为小写字母。</span><br><span class="line">int toupper(int c); 转换为大写字母</span><br></pre></td></tr></table></figure>
<h2 id="stdlib-h-实用功能"><a class="header-anchor" href="#stdlib-h-实用功能">.</a>&lt;stdlib.h&gt; 实用功能</h2>
<p>&lt;stdlib.h&gt; 头文件里包含了C语言的中最常用的系统函数</p>
<p>宏：</p>
<pre><code>NULL 			空
EXIT_FAILURE 	失败状态码
EXIT_SUCCESS 	成功状态码
RAND_MAX rand 	的最大返回值
MB_CUR_MAX 		多字节字符中的最大字节数
</code></pre>
<p>变量：</p>
<pre><code>typedef size_t 是 unsigned integer 类型
typedef wchar_t 一个宽字符的大小
struct div_t   是结构体类型 作为div函数的返回类型
struct ldiv_t  是结构体类型 作为ldiv函数的返回类型
</code></pre>
<p>函数：</p>
<pre><code>字符串函数
atof(); 		将字符串转换成浮点型数
atoi(); 		将字符串转换成整型数
atol(); 		将字符串转换成长整型数
strtod(); 		将字符串转换成浮点数
strtol(); 		将字符串转换成长整型数
strtoul(); 		将字符串转换成无符号长整型数
 
内存控制函数
calloc(); 		配置内存空间
free(); 		释放原先配置的内存
malloc(); 		配置内存空间
realloc(); 		重新分配主存
 
环境函数
abort(); 		异常终止一个进程
atexit();		设置程序正常结束前调用的函数
exit(); 		正常结束进程
getenv(); 		取得环境变量内容
system(); 		执行shell 命令
 
搜索和排序函数
bsearch(); 		二元搜索
qsort(); 		利用快速排序法排列数组
 
数学函数
abs(); 			计算整型数的绝对值
div(); 			将两个整数相除, 返回商和余数
labs(); 		取长整型绝对值
ldiv();			两个长整型数相除, 返回商和余数
rand(); 		随机数发生器
srand(); 		设置随机数种子
 
多字节函数
mblen(); 		根据locale的设置确定字符的字节数
mbstowcs(); 	把多字节字符串转换为宽字符串
mbtowc(); 		把多字节字符转换为宽字符
wcstombs(); 	把宽字符串转换为多字节字符串
wctomb(); 		把宽字符转换为多字节字符
</code></pre>
<h2 id="limits-h-取值范围"><a class="header-anchor" href="#limits-h-取值范围">.</a>&lt;limits.h&gt; 取值范围</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CHAR_BIT 	一个ASCII字符长度</span><br><span class="line">SCHAR_MIN 	字符型最小值</span><br><span class="line">SCHAR_MAX 	字符型最大值</span><br><span class="line">UCHAR_MAX 	无符号字符型最大值</span><br><span class="line">CHAR_MIN</span><br><span class="line">CHAR_MAX</span><br><span class="line">char		字符的最大最小值，如果char字符正被表示有符号整数。它们的值就跟有符号整数一样。 否则char字符的最小值就是0，最大值就是无符号char字符的最大值。</span><br><span class="line">MB_LEN_MAX 	一个字符所占最大字节数</span><br><span class="line">SHRT_MIN 	最小短整型</span><br><span class="line">SHRT_MAX 	最大短整形</span><br><span class="line">USHRT_MAX 	最大无符号短整型</span><br><span class="line">INT_MIN 	最小整型</span><br><span class="line">INT_MAX 	最大整形</span><br><span class="line">UINT_MAX 	最大无符号整型</span><br><span class="line">LONG_MIN 	最小长整型</span><br><span class="line">LONG_MAX 	最大长整型</span><br><span class="line">ULONG_MAX 	无符号长整型</span><br></pre></td></tr></table></figure>
<h2 id="float-h-浮点数运算"><a class="header-anchor" href="#float-h-浮点数运算">.</a>&lt;float.h&gt; 浮点数运算</h2>
<p>float头文件定义了浮点型数值的最大最小限 浮点型数值以下面的方式定义：符号-value E 指数 符号是正负，value是数字的值<br />
下面的值是用#define定义的，这些值是详细的实现，但是可能没有比这里给出的更详细，<br />
在所有实例里FLT指的是float，DBL是double，LDBL指的是long double</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FLT_ROUNDS</span><br><span class="line">定义浮点型数值四舍五入的方式，-1是不确定，0是向0，1是向最近，2是向正无穷大，3是负无穷大</span><br><span class="line"></span><br><span class="line">FLT_RADIX 2</span><br><span class="line">定义指数的基本表示（比如base-2是二进制，base-10是十进制表示法，16是十六进制）</span><br><span class="line"></span><br><span class="line">FLT_MANT_DIG，DBL_MANT_DIG，LDBL_MANT_DIG</span><br><span class="line">定义数值里数字的个数</span><br><span class="line"></span><br><span class="line">FLT_DIG 6，DBL_DIG 10，LDBL_DIG 10</span><br><span class="line">在四舍五入之后能不更改表示的最大小数位</span><br><span class="line"></span><br><span class="line">FLT_MIN_EXP，DBL_MIN_EXP，LDBL_MIN_EXP</span><br><span class="line"></span><br><span class="line">FLT_RADIX 的指数的最小负整数值</span><br><span class="line"></span><br><span class="line">FLT_MIN_10_EXP -37，DBL_MIN_10_EXP -37，LDBL_MIN_10_EXP -37</span><br><span class="line">10进制表示法的的指数的最小负整数值</span><br><span class="line"></span><br><span class="line">FLT_MAX_EXP ,DBL_MAX_EXP ,LDBL_MAX_EXP</span><br><span class="line">FLT_RADIX 的指数的最大整数值</span><br><span class="line"></span><br><span class="line">FLT_MAX_10_EXP +37 ,DBL_MAX_10_EXP ,LDBL_MAX_10_EXP +37 +37</span><br><span class="line">10进制表示法的的指数的最大整数值</span><br><span class="line"></span><br><span class="line">FLT_MAX 1E+37，DBL_MAX 1E+37，LDBL_MAX 1E+37</span><br><span class="line">浮点型的最大限</span><br><span class="line"></span><br><span class="line">FLT_EPSILON 1E-5，DBL_EPSILON 1E-9，LDBL_EPSILON 1E-9</span><br><span class="line">能表示的最小有符号数</span><br></pre></td></tr></table></figure>
<h2 id="locale-h-本土化"><a class="header-anchor" href="#locale-h-本土化">.</a>&lt;locale.h&gt; 本土化</h2>
<p>国家、文化和语言规则集称为区域设置，&lt;locale.h&gt; 头文件中定义了区域设置相关的函数。</p>
<p>&lt;locale.h&gt; 头文件中提供了2个函数</p>
<ul>
<li>setlocale函数		用于设置或返回当前的区域特性，设置或恢复本地化信息</li>
<li>localeconv函数	 用于返回当前地域设置的信息，返回当前区域中的数字和货币信息（保存在struct lconv结构实例中）。</li>
</ul>
<h3 id="setlocale函数"><a class="header-anchor" href="#setlocale函数">.</a>setlocale函数</h3>
<p>setlocale(constant,location) 用法如果这个函数成功执行，将返回当前的场景属性；如果执行失败，将返回False。<br />
setlocale的第一个实参constant指定要改变的区域行为类别，setlocale的第二个实参location指定需要进行场景信息设置的国家或区域。</p>
<blockquote>
<p>constant 参数 (必要参数。指定设置的场景信息)</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">setlocale的第一个实参指定要改变的区域行为类别，预定义的setlocale类别有：</span><br><span class="line">LC_ALL</span><br><span class="line">全部本地化信息，所有下属的常量</span><br><span class="line"></span><br><span class="line">LC_COLLATE</span><br><span class="line">排列顺序，影响strcoll(字符串比较)和strxfrm(字符串转换)</span><br><span class="line"></span><br><span class="line">LC_CTYPE</span><br><span class="line">字符分类和转换（例如：将所有的字符转换成小写或大写形式），影响字符处理函数和多行字符处理函数</span><br><span class="line"></span><br><span class="line">LC_MESSAGES</span><br><span class="line">系统信息格式</span><br><span class="line"></span><br><span class="line">LC_MONETARY</span><br><span class="line">货币/通货格式，影响localeconv(返回包含本地数字及货币信息格式的数组)返回的货币格式化信息</span><br><span class="line"></span><br><span class="line">LC_NUMERIC</span><br><span class="line">数值格式，影响格式化输入输出字符中的小数点符号</span><br><span class="line"></span><br><span class="line">LC_TIME</span><br><span class="line">日期和时间格式，影响&quot;strftime函数&quot;(得到指定格式的时间)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>location 参数 (必要参数，指定需要进行场景信息设置的国家或区域)</p>
</blockquote>
<p>location 参数可以由一个字符串或一个数组组成。如果本地区域是一个数组，那么setlocale()函数将尝试每个数组元素直到它从中获取有效的语言和区域代码信息为止。如果一个区域处于不同操作系统中的不同名称下，那么这个参数将非常有用。</p>
<h3 id="localeconv函数"><a class="header-anchor" href="#localeconv函数">.</a>localeconv函数</h3>
<p>struct lconv *localeconv(void); 用法<br />
localeconv 返回lconv结构指针 lconv结构介绍: 保存格式化的数值信息，保存数值包括货币和非货币的格式化信息，localeconv返回指向该对象的指针，以下为结构中的成员及信息：</p>
<blockquote>
<p>char *decimal_point; 数字的小数点号<br />
char *thousands_sep; 数字的千分组分隔符<br />
每个元素为相应组中的数字位数，索引越高的元素越靠左边。一个值为CHAR_MAX的元素表示没有更多的分组了。一个值为0的元素表示前面的元素能用在靠左边的所有分组中<br />
char *grouping; 数字分组分隔符<br />
char *int_curr_symbol; 前面的三个字符ISO 4217中规定的货币符号，第四个字符是分隔符，第五个字符是’\0’ */<br />
char *currency_symbol; 本地货币符号<br />
char *mon_decimal_point; 货币的小数点号<br />
char *mon_thousands_sep; 千分组分隔符<br />
char *mon_grouping; 类似于grouping元素<br />
char *positive_sign; 正币值的符号<br />
char *negative_sign; 负币值的符号<br />
char int_frac_digits; 国际币值的小数部分<br />
char frac_digits; 本地币值的小数部分<br />
char p_cs_precedes; 如果currency_symbol放在正币值之前则为1，否则为0<br />
char p_sep_by_space; 当且仅当currency_symbol与正币值之间用空格分开时为1<br />
char n_cs_precedes; &lt; 如果currency_symbol放在负币值之前则为1，否则为0/dt&gt;<br />
char n_sep_by_space; 当且仅当currency_symbol与负币值之间用空格分开时为1<br />
char p_sign_posn; 格式化选项</p>
<p>0 - 在数量和货币符号周围的圆括号<br />
1 - 数量和货币符号之前的 + 号<br />
2 - 数量和货币符号之后的 + 号<br />
3 - 货币符号之前的 + 号<br />
4 - 货币符号之后的 + 号<br />
char n_sign_posn 格式化选项<br />
0 - 在数量和货币符号周围的圆括号<br />
1 - 数量和货币符号之前的 - 号<br />
2 - 数量和货币符号之后的 - 号<br />
3 - 货币符号之前的 - 号<br />
4 - 货币符号之后的 - 号</p>
<p>最后提示：可以使用setlocale(LC_ALL,NULL)函数将场景信息设置为系统默认值。</p>
</blockquote>
<h2 id="stdarg-h-可变参数"><a class="header-anchor" href="#stdarg-h-可变参数">.</a>&lt;stdarg.h&gt; 可变参数</h2>
<p>&lt;stdarg.h&gt; 头文件定义了一些宏，当函数参数未知时去获取函数的参数<br />
变量：typedef va_list</p>
<p>宏：</p>
<pre><code>va_start()
va_arg()
va_end()
</code></pre>
<p><strong>变量和定义</strong></p>
<blockquote>
<p>va_list类型通过stdarg宏定义来访问一个函数的参数表，参数列表的末尾会用省略号省略</p>
</blockquote>
<p><strong>声明：</strong></p>
<blockquote>
<p>void va_start(va_list ap, last_arg);<br />
用va_arg和va_end宏初始化参数ap，last_arg是传给函数的固定参数的最后一个，省略号之前的那个参数 注意va_start必须在使用va_arg和va_end之前调用</p>
</blockquote>
<p><strong>声明：</strong></p>
<blockquote>
<p>type va_arg(va_list ap, type);<br />
用type类型扩展到参数表的下个参数<br />
注意ap必须用va_start初始化，如果没有下一个参数，结果会是undefined</p>
</blockquote>
<p><strong>声明：</strong></p>
<blockquote>
<p>void va_end(va_list ap); 允许一个有参数表（使用va_start宏）的函数返回，如果返回之前没有调用va_end,结果会是undefined。参数变量列表可能不再使用（在没调用va_start的情况下调用va_end）</p>
</blockquote>
<h2 id="stddef-h-一些常数，类型和变量"><a class="header-anchor" href="#stddef-h-一些常数，类型和变量">.</a>&lt;stddef.h&gt; 一些常数，类型和变量</h2>
<p>&lt;stddef.h&gt; 头文件定义了一些标准定义，许多定义也会出现在其他的头文件里<br />
宏命令：NULL 和 offsetof()</p>
<p><strong>宏：</strong></p>
<blockquote>
<p>offsetof(type, member-designator);<br />
这个宏返回一个结构体成员相对于结构体起始地址的偏移量（字节为单位），type是结构体的名字，member-designator是结构体成员的名字。</p>
</blockquote>
<p><strong>变量：</strong></p>
<blockquote>
<p>typedef ptrdiff_t<br />
typedef size_t<br />
typedef wchar_t</p>
</blockquote>
<p><strong>变量和定义：</strong></p>
<blockquote>
<p>ptrdiff_t		是两个指针相减的结果<br />
size_t			是sizeof一个关键词得到的无符号整数值<br />
wchar_t		是一个宽字符常量的大小，是整数类型<br />
NULL			是空指针的常量值</p>
</blockquote>
<h2 id="signal-h-信号"><a class="header-anchor" href="#signal-h-信号">.</a>&lt;signal.h&gt; 信号</h2>
<p>在signal.h头文件中，提供了一些函数用以处理执行过程中所产生的信号。<br />
<strong>宏：</strong></p>
<blockquote>
<p>SIG_DFL<br />
SIG_ERR<br />
SIG_IGN<br />
SIGABRT<br />
SIGFPE<br />
SIGILL<br />
SIGINT<br />
SIGSEGV<br />
SIGTERM</p>
</blockquote>
<p><strong>函数：</strong></p>
<blockquote>
<p>signal();<br />
raise();</p>
</blockquote>
<p><strong>signal 函数</strong><br />
声明：	void(*signal(int sig,void (*func)(int)))(int);<br />
上面的函数定义中，sig 表示一个信号代码（相当于暗号类别），即是上面所定义的SIG开头的宏。当有信号出现（即当收到暗号）的时候，参数func所定义的函数就会被调用。如果func等于SIG_DFL，则表示调用默认的处理函数。如果等于SIG_IGN，则表示这个信号被忽略（不做处理）。如果func是用户自定义的函数，则会先调用默认的处理函数，再调用用户自己定义的函数。 自定义函数，有一个参数，参数类型为int，用来表示信号代码（暗号类别）。同时，函数必须以return、abort、exit 或 longjump等语句结束。当自定义函数运行结束，程序会继续从被终止的地方继续运行。（除非信号是SIGFPE导致结果未定义，则可能无法继续运行）<br />
如果调用signal函数成功，则会返回一个指针，该指针指向为所指定的信号类别的所预先定义的信号处理器。<br />
如果调用失败，则会返回一个SIG_ERR，同时errno的值也会被相应的改变。</p>
<p><strong>raise 函数</strong><br />
声明：	int raise(int sig);<br />
发出一个信号sig。信号参数为SIG开头的宏。<br />
如果调用成功，返回0。否则返回一个非零值。</p>
<p><strong>变量：</strong></p>
<blockquote>
<p>typedef sig_atomic_t<br />
sig_atomic_t 类型是int类型，用于接收signal函数的返回值。<br />
以SIG_开头的宏用于定义信号处理函数<br />
SIG_DFL 默认信号处理函数。<br />
SIG_ERR	表示一个错误信号，当signal函数调用失败时的返回值。<br />
SIG_IGN	信号处理函数，表示忽略该信号。<br />
SIG开头的宏是用来在下列情况下，用来表示一个信号代码：<br />
SIGABRT	异常终止（abort函数产生）。<br />
SIGFPE	浮点错误（0作为除数产生的错误，非法的操作）。<br />
SIGILL	非法操作（指令）。<br />
SIGINT	交互式操作产生的信号（如CTRL - C）。<br />
SIGSEGV	无效访问存储（片段的非法访问，内存非法访问）。<br />
SIGTERM	终止请求。</p>
</blockquote>
<h2 id="setjmp-h-“非局部跳转"><a class="header-anchor" href="#setjmp-h-“非局部跳转">.</a>&lt;setjmp.h&gt; “非局部跳转</h2>
<p>在该头文件中定义了一种特别的函数调用和函数返回顺序的方式。这种方式不同于以往的函数调用和返回顺序，<br />
它允许程序流程立即从一个深层嵌套的函数中返回。<br />
<strong>宏：</strong></p>
<blockquote>
<p>int setjmp(jmp_buf env); /<em>设置调转点</em>/<br />
longjmp(jmp_buf jmpb, int retval); /<em>跳转</em>/</p>
</blockquote>
<p>宏setjmp的功能是将当前程序的状态保存在结构env ，为调用宏longjmp设置一个跳转点。setjmp将当前信息保存在env中供longjmp使用。其中env是jmp_buf结构类型的。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//例如：</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span>  <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span>  <span class="string">&lt;setjmp.h&gt;</span></span></span><br><span class="line"><span class="type">static</span> jmp_buf buf;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">second</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;second\n&quot;</span>);        </span><br><span class="line">	<span class="comment">// 打印</span></span><br><span class="line">    <span class="built_in">longjmp</span>(buf,<span class="number">1</span>);            </span><br><span class="line">	<span class="comment">// 跳回setjmp的调用处</span></span><br><span class="line">	- 使得setjmp返回值为<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="function"><span class="type">void</span> <span class="title">first</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">second</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;first\n&quot;</span>);          </span><br><span class="line">	<span class="comment">// 不可能执行到此行</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;   </span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="built_in">setjmp</span>(buf) ) &#123;</span><br><span class="line">        <span class="built_in">first</span>();               </span><br><span class="line">	<span class="comment">// 进入此行前，setjmp返回0</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;                  </span><br><span class="line">	<span class="comment">// 当longjmp跳转回，</span></span><br><span class="line">	setjmp返回<span class="number">1</span>，因此进入此行</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;main\n&quot;</span>);  </span><br><span class="line">		<span class="comment">// 打印</span></span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>直接调用setjmp时，返回值为0，这一般用于初始化（设置跳转点时）。以后再调用longjmp宏时用env变量进行跳转。程序会自动跳转到setjmp宏的返回语句处，此时setjmp的返回值为非0，由longjmp的第二个参数指定。<br />
一般地，宏setjmp和longjmp是成对使用的，这样程序流程可以从一个深层嵌套的函数中返回。</p>
<h2 id="errno-h-错误代码"><a class="header-anchor" href="#errno-h-错误代码">.</a>&lt;errno.h&gt; 错误代码</h2>
<p>error.h 是 C语言 C标准函式库里的头文件，定义了通过错误码来返回错误信息的宏：</p>
<p>errno 宏定义为一个int型态的左值, 包含任何函数使用errno功能所产生的上一个错误码。</p>
<p>一些表示错误码，定义为整数值的宏：</p>
<blockquote>
<p>EDOM 源自于函数的参数超出范围,例如 sqrt(-1)<br />
ERANGE 源自于函数的结果超出范围,例如s trtol(“0xfffffffff”,NULL,0)<br />
EILSEQ 源自于不合法的字符顺序,例如 wcstombs(str, L&quot;\xffff&quot;, 2)</p>
</blockquote>
<h2 id="assert-h-断言"><a class="header-anchor" href="#assert-h-断言">.</a>&lt;assert.h&gt; 断言</h2>
<p>头文件&lt;assert.h&gt;唯一的目的是提供宏assert的定义。如果断言非真（expression==0），则程序会在标准错误流输出提示信息，<br />
并使程序异常中止调用abort() 。</p>
<p>定义：void assert (int expression);</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> NDEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span>	</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">12</span>;</span><br><span class="line">	<span class="type">int</span> b = <span class="number">24</span>;</span><br><span class="line">	<span class="built_in">assert</span>( a &gt; b );</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a is larger than b!&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的程序会发现程序中止，printf并未执行，且有这样的输出： main: Assertion `a &gt; b’ failed. 原因就是因为a其实小于b，<br />
导致断言失败，assert 输出错误信息，并调用abort()中止了程序执行。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>C</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C</tag>
        <tag>头文件</tag>
        <tag>.h</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 重载函数</title>
    <url>/2020/05/C++-%E9%87%8D%E8%BD%BD%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="C-重载函数"><a class="header-anchor" href="#C-重载函数">.</a>C++ 重载函数</h1>
<p><a href="https://blog.csdn.net/sherilindas/article/details/51678778">https://blog.csdn.net/sherilindas/article/details/51678778</a></p>
<p><a href="https://www.cnblogs.com/skynet/archive/2010/09/05/1818636.html">https://www.cnblogs.com/skynet/archive/2010/09/05/1818636.html</a></p>
<p>C++允许在同一范围中声明几个功能类似的同名函数，但是<strong>这些同名函数的形式参数（指参数的个数、类型或者顺序）必须不同</strong>，即函数的参数列表不同，也就是说用同一个运算符完成不同的运算功能。这就是<strong>重载函数</strong>。重载函数常用来实现功能类似而所处理的数据类型不同的问题。</p>
<span id="more"></span>
<h2 id="介绍-2"><a class="header-anchor" href="#介绍-2">.</a>介绍</h2>
<ul>
<li>
<p><strong>函数重载有什么好处？</strong><br />
重载函数通常用来命名一组功能相似的函数，这样做减少了函数名的数量，避免了名字空间的污染，对于程序的可读性有很大的好处。当函数的编写者充分考虑了不同情况下应该运行稍有不同的函数，函数的使用者就不必为这些小细节而烦恼了。<br />
类的构造函数跟类名相同，也就是说：构造函数都同名。如果没有函数重载机制，要想实例化不同的对象，那是相当的麻烦！</p>
</li>
<li>
<p><strong>构成函数重载的条件</strong>如下：<br />
1、<code>函数名</code>相同。<br />
2、这些同名函数的==形参==（指参数的个数、类型）必须有其中一种不同，即参数列表不同。</p>
<p>需要注意的是，<strong>返回值类型不同不构成重载函数</strong>。</p>
</li>
<li>
<p><strong>重载函数的匹配原则：</strong><br />
1、严格匹配，找到后就调用。<br />
2、没有找到严格匹配的函数，但是可以通过隐式转化，找到适合的重载函数。</p>
</li>
</ul>
<hr />
<p>通过隐式转换可以将double转为int，然后调用参数类型为int 的函数。<br />
但是要注意一个问题，就是<strong>隐式转换的规则</strong>。<br />
而且要注意int到long和double，double到int和float的隐式转换，会引发二义性（ambiguous）。就是有两个都可行的选择，计算机无法替你做选择。</p>
<h2 id="原理"><a class="header-anchor" href="#原理">.</a>原理</h2>
<p>下面简单说说<strong>函数重载的原理</strong>：<br />
C++采用命名倾轧（name mangling）的技术来改变同名函数，以区分参数不同的函数。<br />
例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">name</span><span class="params">(<span class="type">char</span> a)</span></span>;			<span class="comment">// 通过倾轧-&gt;变成类似于void name_c；的形式。</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">name</span><span class="params">(string a)</span></span>;		<span class="comment">// 通过倾轧-&gt;变成类似于void name_s；的形式。</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">name</span><span class="params">(<span class="type">char</span> a, <span class="type">int</span> b)</span></span>;	<span class="comment">// 通过倾轧-&gt;变成类似于void name_ci；的形式。</span></span><br></pre></td></tr></table></figure>
<p>name mangling 发生在两个阶段，一个是.cpp编译时，一个是.h的声明阶段。只有两个阶段同时进行才能匹配上。也就是要同时改名才可以。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C++</tag>
        <tag>重载函数</tag>
      </tags>
  </entry>
  <entry>
    <title>LaTeX公式 帮助文档(未整理好)</title>
    <url>/2020/07/LaTeX%E5%85%AC%E5%BC%8F-%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h1 id="符号与字母-Symbol-and-Alphabet"><a class="header-anchor" href="#符号与字母-Symbol-and-Alphabet">.</a>符号与字母 Symbol and Alphabet</h1>
<h2 id="希腊字母-Greek-alphabet"><a class="header-anchor" href="#希腊字母-Greek-alphabet">.</a>希腊字母 Greek alphabet</h2>
<p>在输入 Latex 代码时，要用 $$   $$ 包含</p>
<span id="more"></span>
<table>
<thead>
<tr>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
<th>显示</th>
<th>LaTeX</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">常用</td>
<td style="text-align:center"></td>
<td style="text-align:center">常用</td>
<td style="text-align:center"></td>
<td>常用</td>
<td></td>
</tr>
<tr>
<td style="text-align:center">$\alpha$</td>
<td style="text-align:center">\alpha</td>
<td style="text-align:center">$\beta$</td>
<td style="text-align:center">\beta</td>
<td>$\gamma$</td>
<td>\gamma</td>
</tr>
<tr>
<td style="text-align:center">$\delta$</td>
<td style="text-align:center">\delta</td>
<td style="text-align:center">$\xi$</td>
<td style="text-align:center">\xi</td>
<td>$\zeta$</td>
<td>\zeta</td>
</tr>
<tr>
<td style="text-align:center">$\eta$</td>
<td style="text-align:center">\eta</td>
<td style="text-align:center">$\theta$</td>
<td style="text-align:center">\theta</td>
<td>$\lambda$</td>
<td>\lambda</td>
</tr>
<tr>
<td style="text-align:center">$\mu$</td>
<td style="text-align:center">\mu</td>
<td style="text-align:center">$\varepsilon$</td>
<td style="text-align:center">\varepsilon</td>
<td>$\pi$</td>
<td>\pi</td>
</tr>
<tr>
<td style="text-align:center">$\rho$</td>
<td style="text-align:center">\rho</td>
<td style="text-align:center">$\sigma$</td>
<td style="text-align:center">\sigma</td>
<td>$\phi$</td>
<td>\phi</td>
</tr>
<tr>
<td style="text-align:center">$\varphi$</td>
<td style="text-align:center">\varphi</td>
<td style="text-align:center">$\Sigma$</td>
<td style="text-align:center">\Sigma</td>
<td>$\Gamma$</td>
<td>\Gamma</td>
</tr>
<tr>
<td style="text-align:center">$\Phi$</td>
<td style="text-align:center">\Phi</td>
<td style="text-align:center">$\Delta$</td>
<td style="text-align:center">\Delta</td>
<td>\Omega$$</td>
<td>\Omega</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:center">$\epsilon$</td>
<td style="text-align:center">\epsilon</td>
<td style="text-align:center">$\vartheta$</td>
<td style="text-align:center">\vartheta</td>
<td>$\iota$</td>
<td>\iota</td>
</tr>
<tr>
<td style="text-align:center">$\kappa$</td>
<td style="text-align:center">\kappa</td>
<td style="text-align:center">$\nu$</td>
<td style="text-align:center">\nu</td>
<td>$o$</td>
<td>o</td>
</tr>
<tr>
<td style="text-align:center">$\varpi$</td>
<td style="text-align:center">\varpi</td>
<td style="text-align:center">$\varrho$</td>
<td style="text-align:center">\varrho</td>
<td>$\varsigma$</td>
<td>\varsigma</td>
</tr>
<tr>
<td style="text-align:center">$\tau$</td>
<td style="text-align:center">\tau</td>
<td style="text-align:center">$\upsilon$</td>
<td style="text-align:center">\upsilon</td>
<td>$\chi$</td>
<td>\chi</td>
</tr>
<tr>
<td style="text-align:center">$\psi$</td>
<td style="text-align:center">\psi</td>
<td style="text-align:center">$\omega$</td>
<td style="text-align:center">\omega</td>
<td>$\Theta$</td>
<td>\Theta</td>
</tr>
<tr>
<td style="text-align:center">$\Lambda$</td>
<td style="text-align:center">\Lambda</td>
<td style="text-align:center">$\Xi$</td>
<td style="text-align:center">\Xi</td>
<td>$\Pi$</td>
<td>\Pi</td>
</tr>
<tr>
<td style="text-align:center">$\Upsilon$</td>
<td style="text-align:center">\Upsilon</td>
<td style="text-align:center">$\Phi$</td>
<td style="text-align:center">\Phi</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>注意:</strong> MathJax支持的大写希腊字母有限，如需其他（如大写Alpha），可使用<strong>罗马体</strong>转换，如<code>\mathrm&#123;A&#125;</code>表示大写Alpha：$\mathrm{A}$。</p>
<h2 id="希伯来字母-Hebrew-alphabet"><a class="header-anchor" href="#希伯来字母-Hebrew-alphabet">.</a>希伯来字母 Hebrew alphabet</h2>
<p>在输入 Latex 代码时，要用 $$   $$ 包含</p>
<table>
<thead>
<tr>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">$\aleph$</td>
<td style="text-align:center">\aleph</td>
<td style="text-align:center">$\beth$</td>
<td style="text-align:center">\beth</td>
</tr>
<tr>
<td style="text-align:center">$\gimel$</td>
<td style="text-align:center">\gimel</td>
<td style="text-align:center">$\daleth$</td>
<td style="text-align:center">\daleth</td>
</tr>
</tbody>
</table>
<h2 id="二元运算符-Binary-operations"><a class="header-anchor" href="#二元运算符-Binary-operations">.</a>二元运算符 Binary operations</h2>
<p>在输入 Latex 代码时，要用 $$   $$ 包含</p>
<table>
<thead>
<tr>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
<th>显示</th>
<th>LaTeX</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">$+$</td>
<td style="text-align:center">+</td>
<td style="text-align:center">$\pm$</td>
<td style="text-align:center">\pm</td>
<td>$\cdot$</td>
<td>\cdot</td>
</tr>
<tr>
<td style="text-align:center">$-$</td>
<td style="text-align:center">-</td>
<td style="text-align:center">$\mp$</td>
<td style="text-align:center">\mp</td>
<td>$\bullet$</td>
<td>\bullet</td>
</tr>
<tr>
<td style="text-align:center">$\times$</td>
<td style="text-align:center">\times</td>
<td style="text-align:center">$\star$</td>
<td style="text-align:center">\star</td>
<td>$\cup$</td>
<td>\cup</td>
</tr>
<tr>
<td style="text-align:center">$\div$</td>
<td style="text-align:center">\div   (在physics扩展<br/>开启状态下不是除号)</td>
<td style="text-align:center">$\ast$</td>
<td style="text-align:center">\ast</td>
<td>$\cap$</td>
<td>\cap</td>
</tr>
<tr>
<td style="text-align:center">$\triangleleft$</td>
<td style="text-align:center">\triangleleft</td>
<td style="text-align:center">$\setminus$</td>
<td style="text-align:center">\setminus</td>
<td>$\sqcup$</td>
<td>\sqcup</td>
</tr>
<tr>
<td style="text-align:center">$\triangleright$</td>
<td style="text-align:center">\triangleright</td>
<td style="text-align:center">$\circ$</td>
<td style="text-align:center">\circ</td>
<td>$\sqcap$</td>
<td>\sqcap</td>
</tr>
<tr>
<td style="text-align:center">$\lhd$</td>
<td style="text-align:center">\lhd</td>
<td style="text-align:center">$\vee$</td>
<td style="text-align:center">\vee</td>
<td>$\bigcirc$</td>
<td>\bigcirc</td>
</tr>
<tr>
<td style="text-align:center">$\rhd$</td>
<td style="text-align:center">\rhd</td>
<td style="text-align:center">$\wedge$</td>
<td style="text-align:center">\wedge</td>
<td>$\wr$</td>
<td>\wr</td>
</tr>
<tr>
<td style="text-align:center">$\bigtriangleup$</td>
<td style="text-align:center">\bigtriangleup</td>
<td style="text-align:center">$\oplus$</td>
<td style="text-align:center">\oplus</td>
<td>$\uplus$</td>
<td>\uplus</td>
</tr>
<tr>
<td style="text-align:center">$\bigtriangledown$</td>
<td style="text-align:center">\bigtriangledown</td>
<td style="text-align:center">$\ominus$</td>
<td style="text-align:center">\ominus</td>
<td>$\amalg$</td>
<td>\amalg</td>
</tr>
<tr>
<td style="text-align:center">$\unlhd$</td>
<td style="text-align:center">\unlhd</td>
<td style="text-align:center">$\odot$</td>
<td style="text-align:center">\odot</td>
<td>$\dagger$</td>
<td>\dagger</td>
</tr>
<tr>
<td style="text-align:center">$\unrhd$</td>
<td style="text-align:center">\unrhd</td>
<td style="text-align:center">$\oslash$</td>
<td style="text-align:center">\oslash</td>
<td>$\ddagger$</td>
<td>\ddagger</td>
</tr>
<tr>
<td style="text-align:center">$\diamond$</td>
<td style="text-align:center">\diamond</td>
<td style="text-align:center">$\otimes$</td>
<td style="text-align:center">\otimes</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="二元关系符-Binary-relations"><a class="header-anchor" href="#二元关系符-Binary-relations">.</a>二元关系符 Binary relations</h2>
<h5 id="包含等号、大于、小于、关系从属。"><a class="header-anchor" href="#包含等号、大于、小于、关系从属。">.</a>包含等号、大于、小于、关系从属。</h5>
<p>在输入 Latex 代码时，要用 $$   $$ 包含</p>
<table>
<thead>
<tr>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
<th>显示</th>
<th>LaTeX</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">$=$</td>
<td style="text-align:center">=</td>
<td style="text-align:center">$\ne$</td>
<td style="text-align:center">\ne</td>
<td>$\neq$</td>
<td>\neq</td>
</tr>
<tr>
<td style="text-align:center">$\equiv$</td>
<td style="text-align:center">\equiv</td>
<td style="text-align:center">$\not\equiv$</td>
<td style="text-align:center">\not\equiv</td>
<td>$\doteq$</td>
<td>\doteq</td>
</tr>
<tr>
<td style="text-align:center">$\doteqdot$</td>
<td style="text-align:center">\doteqdot</td>
<td style="text-align:center">$\overset{\underset{\mathrm{def}}{}}{=}$</td>
<td style="text-align:center">\overset{\underset{\mathrm{def}}{}}{=}</td>
<td>$:=$</td>
<td>:=</td>
</tr>
<tr>
<td style="text-align:center">$\sim$</td>
<td style="text-align:center">\sim</td>
<td style="text-align:center">$\nsim$</td>
<td style="text-align:center">\nsim</td>
<td>$\cong$</td>
<td>\cong</td>
</tr>
<tr>
<td style="text-align:center">$\thicksim$</td>
<td style="text-align:center">\thicksim</td>
<td style="text-align:center">$\backsim$</td>
<td style="text-align:center">\backsim</td>
<td>$\ncong$</td>
<td>\ncong</td>
</tr>
<tr>
<td style="text-align:center">$\simeq$</td>
<td style="text-align:center">\simeq</td>
<td style="text-align:center">$\backsimeq$</td>
<td style="text-align:center">\backsimeq</td>
<td>$\eqsim$</td>
<td>\eqsim</td>
</tr>
<tr>
<td style="text-align:center">$\approx$</td>
<td style="text-align:center">\approx</td>
<td style="text-align:center">$\thickapprox$</td>
<td style="text-align:center">\thickapprox</td>
<td>$\approxeq$</td>
<td>\approxeq</td>
</tr>
<tr>
<td style="text-align:center">$\asymp$</td>
<td style="text-align:center">\asymp</td>
<td style="text-align:center">$\propto$</td>
<td style="text-align:center">\propto</td>
<td>$\varpropto$</td>
<td>\varpropto</td>
</tr>
<tr>
<td style="text-align:center">$&lt;$</td>
<td style="text-align:center">&lt;</td>
<td style="text-align:center">$\nless$</td>
<td style="text-align:center">\nless</td>
<td>$\ll$</td>
<td>\ll</td>
</tr>
<tr>
<td style="text-align:center">$\lll$</td>
<td style="text-align:center">\lll</td>
<td style="text-align:center">$\not\lll$</td>
<td style="text-align:center">\not\lll</td>
<td>$\not\ll$</td>
<td>\not\ll</td>
</tr>
<tr>
<td style="text-align:center">$&gt;$</td>
<td style="text-align:center">&gt;</td>
<td style="text-align:center">$\ngtr$</td>
<td style="text-align:center">\ngtr</td>
<td>$\gg$</td>
<td>\gg</td>
</tr>
<tr>
<td style="text-align:center">$\ggg$</td>
<td style="text-align:center">\ggg</td>
<td style="text-align:center">$\not\ggg$</td>
<td style="text-align:center">\not\ggg</td>
<td>$\not\gg$</td>
<td>\not\gg</td>
</tr>
<tr>
<td style="text-align:center">$\lessdot$</td>
<td style="text-align:center">\lessdot</td>
<td style="text-align:center">$\gtrdot$</td>
<td style="text-align:center">\gtrdot</td>
<td>$\le$</td>
<td>\le</td>
</tr>
<tr>
<td style="text-align:center">$\ge$</td>
<td style="text-align:center">\ge</td>
<td style="text-align:center">$\geq$</td>
<td style="text-align:center">\geq</td>
<td>$\leq$</td>
<td>\leq</td>
</tr>
<tr>
<td style="text-align:center">$\lneq$</td>
<td style="text-align:center">\lneq</td>
<td style="text-align:center">$\leqq$</td>
<td style="text-align:center">\leqq</td>
<td>$\nleq$</td>
<td>\nleq</td>
</tr>
<tr>
<td style="text-align:center">$\nleqq$</td>
<td style="text-align:center">\nleqq</td>
<td style="text-align:center">$\lneqq$</td>
<td style="text-align:center">\lneqq</td>
<td>$\lvertneqq$</td>
<td>\lvertneqq</td>
</tr>
<tr>
<td style="text-align:center">$\gneq$</td>
<td style="text-align:center">\gneq</td>
<td style="text-align:center">$\geqq$</td>
<td style="text-align:center">\geqq</td>
<td>$\ngeq$</td>
<td>\ngeq</td>
</tr>
<tr>
<td style="text-align:center">$\ngeqq$</td>
<td style="text-align:center">\ngeqq</td>
<td style="text-align:center">$\gneqq$</td>
<td style="text-align:center">\gneqq</td>
<td>$\gvertneqq$</td>
<td>\gvertneqq</td>
</tr>
<tr>
<td style="text-align:center">$\lessgtr$</td>
<td style="text-align:center">\lessgtr</td>
<td style="text-align:center">$\lesseqgtr$</td>
<td style="text-align:center">\lesseqgtr</td>
<td>$\lesseqqgtr$</td>
<td>\lesseqqgtr</td>
</tr>
<tr>
<td style="text-align:center">$\gtrless$</td>
<td style="text-align:center">\gtrless</td>
<td style="text-align:center">$\gtreqless$</td>
<td style="text-align:center">\gtreqless</td>
<td>$\gtreqqless$</td>
<td>\gtreqqless</td>
</tr>
<tr>
<td style="text-align:center">$\leqslant$</td>
<td style="text-align:center">\leqslant</td>
<td style="text-align:center">$\nleqslant$</td>
<td style="text-align:center">\nleqslant</td>
<td>$\eqslantless$</td>
<td>\eqslantless</td>
</tr>
<tr>
<td style="text-align:center">$\geqslant$</td>
<td style="text-align:center">\geqslant</td>
<td style="text-align:center">$\ngeqslant$</td>
<td style="text-align:center">\ngeqslant</td>
<td>$\eqslantgtr$</td>
<td>\eqslantgtr</td>
</tr>
<tr>
<td style="text-align:center">$\lesssim$</td>
<td style="text-align:center">\lesssim</td>
<td style="text-align:center">$\lnsim$</td>
<td style="text-align:center">\lnsim</td>
<td>$\lessapprox$</td>
<td>\lessapprox</td>
</tr>
<tr>
<td style="text-align:center">$\gtrsim$</td>
<td style="text-align:center">\gtrsim</td>
<td style="text-align:center">$\gnsim$</td>
<td style="text-align:center">\gnsim</td>
<td>$\gtrapprox$</td>
<td>\gtrapprox</td>
</tr>
<tr>
<td style="text-align:center">$\lnapprox$</td>
<td style="text-align:center">\lnapprox</td>
<td style="text-align:center">$\gnapprox$</td>
<td style="text-align:center">\gnapprox</td>
<td>$\prec$</td>
<td>\prec</td>
</tr>
<tr>
<td style="text-align:center">$\nprec$</td>
<td style="text-align:center">\nprec</td>
<td style="text-align:center">$\preceq$</td>
<td style="text-align:center">\preceq</td>
<td>$\npreceq$</td>
<td>\npreceq</td>
</tr>
<tr>
<td style="text-align:center">$\precneqq$</td>
<td style="text-align:center">\precneqq</td>
<td style="text-align:center">$\succ$</td>
<td style="text-align:center">\succ</td>
<td>$\nsucc$</td>
<td>\nsucc</td>
</tr>
<tr>
<td style="text-align:center">$\succeq$</td>
<td style="text-align:center">\succeq</td>
<td style="text-align:center">$\nsucceq$</td>
<td style="text-align:center">\nsucceq</td>
<td>$\succneqq$</td>
<td>\succneqq</td>
</tr>
<tr>
<td style="text-align:center">$\preccurlyeq$</td>
<td style="text-align:center">\preccurlyeq</td>
<td style="text-align:center">$\curlyeqprec$</td>
<td style="text-align:center">\curlyeqprec</td>
<td>$\succcurlyeq$</td>
<td>\succcurlyeq</td>
</tr>
<tr>
<td style="text-align:center">$\curlyeqsucc$</td>
<td style="text-align:center">\curlyeqsucc</td>
<td style="text-align:center">$\precsim$</td>
<td style="text-align:center">\precsim</td>
<td>$\precnsim$</td>
<td>\precnsim</td>
</tr>
<tr>
<td style="text-align:center">$\precapprox$</td>
<td style="text-align:center">\precapprox</td>
<td style="text-align:center">$\precnapprox$</td>
<td style="text-align:center">\precnapprox</td>
<td>$\succsim$</td>
<td>\succsim</td>
</tr>
<tr>
<td style="text-align:center">$\succnsim$</td>
<td style="text-align:center">\succnsim</td>
<td style="text-align:center">$\succapprox$</td>
<td style="text-align:center">\succapprox</td>
<td>$\succnapprox$</td>
<td>\succnapprox</td>
</tr>
</tbody>
</table>
<h2 id="几何符号-Geometric-symbols"><a class="header-anchor" href="#几何符号-Geometric-symbols">.</a>几何符号 Geometric symbols</h2>
<p>在输入 Latex 代码时，要用 $$   $$ 包含</p>
<table>
<thead>
<tr>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
</tr>
</thead>
<tbody>
<tr>
<td>$\parallel$</td>
<td>\parallel</td>
<td>$\angle$</td>
<td>\angle</td>
<td>$\bigstar$</td>
<td>\bigstar</td>
<td>$\blacktriangle$</td>
<td>\blacktriangle</td>
</tr>
<tr>
<td>$\nparallel$</td>
<td>\nparallel</td>
<td>$\perp$</td>
<td>\perp</td>
<td>$\bigcirc$</td>
<td>\bigcirc</td>
<td>$\blacktriangledown$</td>
<td>\blacktriangledown</td>
</tr>
<tr>
<td>$\shortparallel$</td>
<td>\shortparallel</td>
<td>$\sphericalangle$</td>
<td>\sphericalangle</td>
<td>$\triangle$</td>
<td>\triangle</td>
<td>$\blacktriangleleft$</td>
<td>\blacktriangleleft</td>
</tr>
<tr>
<td>$\nshortparallel$</td>
<td>\nshortparallel</td>
<td>$\measuredangle$</td>
<td>\measuredangle</td>
<td>$\bigtriangleup$</td>
<td>\bigtriangleup</td>
<td>$\blacktriangleright$</td>
<td>\blacktriangleright</td>
</tr>
<tr>
<td>$\Box$</td>
<td>\Box</td>
<td>$61^\circ$</td>
<td>25^\circ</td>
<td>$\bigtriangledown$</td>
<td>\bigtriangledown</td>
<td></td>
<td></td>
</tr>
<tr>
<td>$\blacksquare$</td>
<td>\blacksquare</td>
<td>$\lozenge$</td>
<td>\lozenge</td>
<td>$\vartriangle$</td>
<td>\vartriangle</td>
<td></td>
<td></td>
</tr>
<tr>
<td>$\diamond$</td>
<td>\diamond</td>
<td>$\blacklozenge$</td>
<td>\blacklozenge</td>
<td>$\triangledown$</td>
<td>\triangledown</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="逻辑符号-Logic-symbols"><a class="header-anchor" href="#逻辑符号-Logic-symbols">.</a>逻辑符号 Logic symbols</h2>
<p>在输入 Latex 代码时，要用 $$   $$ 包含</p>
<table>
<thead>
<tr>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
</tr>
</thead>
<tbody>
<tr>
<td>$\because$</td>
<td>\because</td>
<td>$\forall$</td>
<td>\forall</td>
<td>$\And$</td>
<td>\And</td>
</tr>
<tr>
<td>$\therefore$</td>
<td>\therefore</td>
<td>$\exists$</td>
<td>\exists</td>
<td>$\nexists$</td>
<td>\nexists</td>
</tr>
<tr>
<td>$\lor$</td>
<td>\lor</td>
<td>$\vee$</td>
<td>\vee</td>
<td>$\bigvee$</td>
<td>\bigvee</td>
</tr>
<tr>
<td>$\land$</td>
<td>\land</td>
<td>$\wedge$</td>
<td>\wedge</td>
<td>$\bigwedge$</td>
<td>\bigwedge</td>
</tr>
<tr>
<td>$\curlyvee$</td>
<td>\curlyvee</td>
<td>$\curlywedge$</td>
<td>\curlywedge</td>
<td>$\overline{abc}$</td>
<td>\overline{abc}</td>
</tr>
<tr>
<td>$\lnot$</td>
<td>\lnot</td>
<td>$\neg$</td>
<td>\neg</td>
<td>$\bar{abc}$</td>
<td>\bar{abc}</td>
</tr>
<tr>
<td>$\not\operatorname{R}$</td>
<td>\not\operatorname{R}</td>
<td>$\bot$</td>
<td>\bot</td>
<td>$\top$</td>
<td>\top</td>
</tr>
<tr>
<td>$\vdash$</td>
<td>\vdash</td>
<td>$\dashv$</td>
<td>\dashv</td>
<td>$\vDash$</td>
<td>\vDash</td>
</tr>
<tr>
<td>$\Vvdash$</td>
<td>\Vvdash</td>
<td>$\Vdash$</td>
<td>\Vdash</td>
<td>$\models$</td>
<td>\models</td>
</tr>
<tr>
<td>$\nvdash$</td>
<td>\nvdash</td>
<td>$\nVdash$</td>
<td>\nVdash</td>
<td>$\nvDash$</td>
<td>\nvDash</td>
</tr>
<tr>
<td>$\urcorner$</td>
<td>\urcorner</td>
<td>$\ulcorner$</td>
<td>\ulcorner</td>
<td>$\nVDash$</td>
<td>\nVDash</td>
</tr>
<tr>
<td>$\lrcorner$</td>
<td>\lrcorner</td>
<td>$\llcorner$</td>
<td>\llcorner</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="集合-Sets"><a class="header-anchor" href="#集合-Sets">.</a>集合 Sets</h2>
<p>在输入 Latex 代码时，要用 $$   $$ 包含</p>
<table>
<thead>
<tr>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
</tr>
</thead>
<tbody>
<tr>
<td>${}$</td>
<td>{}</td>
<td>$\emptyset$</td>
<td>\emptyset</td>
<td>$\varnothing$</td>
<td>\varnothing</td>
<td>$\setminus$</td>
<td>\setminus</td>
</tr>
<tr>
<td>$\in$</td>
<td>\in</td>
<td>$\notin$</td>
<td>\notin</td>
<td>$\ni$</td>
<td>\ni</td>
<td>$\smallsetminus$</td>
<td>\smallsetminus</td>
</tr>
<tr>
<td>$\cap$</td>
<td>\cap</td>
<td>$\Cap$</td>
<td>\Cap</td>
<td>$\sqcap$</td>
<td>\sqcap</td>
<td>$\bigcap$</td>
<td>\bigcap</td>
</tr>
<tr>
<td>$\cup$</td>
<td>\cup</td>
<td>$\Cup$</td>
<td>\Cup</td>
<td>$\sqcup$</td>
<td>\sqcup</td>
<td>$\bigcup$</td>
<td>\bigcup</td>
</tr>
<tr>
<td>$\bigsqcup$</td>
<td>\bigsqcup</td>
<td>$\uplus$</td>
<td>\uplus</td>
<td>$\biguplus$</td>
<td>\biguplus</td>
<td>$\times$</td>
<td>\times</td>
</tr>
<tr>
<td>$\subset$</td>
<td>\subset</td>
<td>$\Subset$</td>
<td>\Subset</td>
<td>$\sqsubset$</td>
<td>\sqsubset</td>
<td>$\sqsubseteq$</td>
<td>\sqsubseteq</td>
</tr>
<tr>
<td>$\supset$</td>
<td>\supset</td>
<td>$\Supset$</td>
<td>\Supset</td>
<td>$\sqsupset$</td>
<td>\sqsupset</td>
<td>$\sqsupseteq$</td>
<td>\sqsupseteq</td>
</tr>
<tr>
<td>$\subseteq$</td>
<td>\subseteq</td>
<td>$\nsubseteq$</td>
<td>\nsubseteq</td>
<td>$\subsetneq$</td>
<td>\subsetneq</td>
<td>$\varsubsetneq$</td>
<td>\varsubsetneq</td>
</tr>
<tr>
<td>$\supseteq$</td>
<td>\supseteq</td>
<td>$\nsupseteq$</td>
<td>\nsupseteq</td>
<td>$\supsetneq$</td>
<td>\supsetneq</td>
<td>$\varsupsetneq$</td>
<td>\varsupsetneq</td>
</tr>
<tr>
<td>$\subseteqq$</td>
<td>\subseteqq</td>
<td>$\nsubseteqq$</td>
<td>\nsubseteqq</td>
<td>$\subsetneqq$</td>
<td>\subsetneqq</td>
<td>$\varsubsetneqq$</td>
<td>\varsubsetneqq</td>
</tr>
<tr>
<td>$\supseteqq$</td>
<td>\supseteqq</td>
<td>$\nsupseteqq$</td>
<td>\nsupseteqq</td>
<td>$\supsetneqq$</td>
<td>\supsetneqq</td>
<td>$\varsupsetneqq$</td>
<td>\varsupsetneqq</td>
</tr>
</tbody>
</table>
<h2 id="箭头-Arrows"><a class="header-anchor" href="#箭头-Arrows">.</a>箭头 Arrows</h2>
<p>在输入 Latex 代码时，要用 $$   $$ 包含</p>
<table>
<thead>
<tr>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h1 id="运算与函数-Operations-Functions"><a class="header-anchor" href="#运算与函数-Operations-Functions">.</a>运算与函数 Operations &amp; Functions</h1>
<h2 id="极限"><a class="header-anchor" href="#极限">.</a>极限</h2>
<table>
<thead>
<tr>
<th>显示</th>
<th>Latex</th>
</tr>
</thead>
<tbody>
<tr>
<td>$\lim_{n \to \infty}x_n$</td>
<td>\lim_{n \to \infty}x_n</td>
</tr>
<tr>
<td>$\textstyle \lim_{n \to \infty}x_n$</td>
<td>\textstyle \lim_{n \to \infty}x_n</td>
</tr>
<tr>
<td>$\lim\limits_{n \to \infty}x_n$</td>
<td>\lim\limits_{n \to \infty}x_n</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>Latex</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>LaTeX</tag>
        <tag>公式</tag>
      </tags>
  </entry>
  <entry>
    <title>winodows文件夹无法删除 无法显示当前所有者</title>
    <url>/2020/07/winodows%E6%96%87%E4%BB%B6%E5%A4%B9%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4-%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E6%89%80%E6%9C%89%E8%80%85/</url>
    <content><![CDATA[<h1 id="winodows文件夹无法删除-无法显示当前所有者"><a class="header-anchor" href="#winodows文件夹无法删除-无法显示当前所有者">.</a>winodows文件夹无法删除 无法显示当前所有者</h1>
<h2 id="问题描述"><a class="header-anchor" href="#问题描述">.</a>问题描述</h2>
<p>在无NTLM权限的情况下，文件所有者丢失，导致文件或文件夹无法删除：</p>
<span id="more"></span>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Windows/%E6%96%87%E4%BB%B6%E5%A4%B9-%E5%AE%89%E5%85%A8.png?x-oss-process=style/yunying61" alt="文件夹-安全" /></p>
<p>位置不可用，且无法删除：</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Windows/Nodejs2.png?x-oss-process=style/yunying61" alt="" /></p>
<h2 id="解决方法："><a class="header-anchor" href="#解决方法：">.</a>解决方法：</h2>
<ol>
<li>
<p>打开“资源管理器”</p>
<ul>
<li>通过win+R打开运行，输入<code>perfmon</code>，左侧选性能，右侧链接“打开资源监视器”<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Windows/perfmon_1.png?x-oss-process=style/yunying61" alt="" /></li>
<li>或在win10系统桌面上，任务栏，<strong>右键</strong>，单击<strong>任务管理器</strong>，单击<strong>性能</strong>，在下面，单击打开<strong>资源监视器</strong>。</li>
<li>更直接的：win+R打开运行，输入<code>perfmon /res</code></li>
</ul>
</li>
<li>
<p>单击<strong>CPU标</strong>签，然后在“<strong>关联的句柄</strong>”右侧的搜索框中输入要删除的文件夹名。例：<code>Node.js</code> 文件夹名。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Windows/perfmon_2.png?x-oss-process=style/yunying61" alt="" /></p>
</li>
<li>
<p>找到关于要删除的文件夹名目录。然后右键，<strong>结束进程</strong> 。</p>
<blockquote>
<p>然后，那个异常文件夹或文件就会自动被删除</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>Windows</category>
        <category>软件</category>
        <category>技巧</category>
        <category>问题解决</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>文件夹</tag>
        <tag>问题解决</tag>
        <tag>权限</tag>
        <tag>Nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>Node.js安装失败、更新失败 没有足够的权限访问</title>
    <url>/2020/07/Node-js%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5-%E6%9B%B4%E6%96%B0%E5%A4%B1%E8%B4%A5-%E6%B2%A1%E6%9C%89%E8%B6%B3%E5%A4%9F%E7%9A%84%E6%9D%83%E9%99%90%E8%AE%BF%E9%97%AE/</url>
    <content><![CDATA[<h1 id="Node-js安装失败、更新失败-没有足够的权限访问"><a class="header-anchor" href="#Node-js安装失败、更新失败-没有足够的权限访问">.</a>Node.js安装失败、更新失败 没有足够的权限访问</h1>
<h4 id="问题描述："><a class="header-anchor" href="#问题描述：">.</a>问题描述：</h4>
<p>直接上图，大概意思是：没有足够的权限来访问那个目录下的<code>Node.js</code>文件夹</p>
<span id="more"></span>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Windows/Nodejs1.png?x-oss-process=style/yunying61" alt="Node install fail" /></p>
<p>并且还无法删除</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Windows/Nodejs2.png?x-oss-process=style/yunying61" alt="" /></p>
<p>所以导致你一直按<code>Retry</code>按钮也没有用</p>
<h4 id="问题解决："><a class="header-anchor" href="#问题解决：">.</a>问题解决：</h4>
<p>参考我另一篇文章———— <a href="/2020/07/winodows%E6%96%87%E4%BB%B6%E5%A4%B9%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4-%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E6%89%80%E6%9C%89%E8%80%85/" title="winodows文件夹无法删除 无法显示当前所有者">winodows文件夹无法删除 无法显示当前所有者</a></p>
<blockquote>
<p>当那个目录下的<code>Node.js</code>文件夹被删除以后，再按<code>Retry</code>按钮就可以继续安装了，问题解决！</p>
</blockquote>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>Windows</category>
        <category>软件</category>
        <category>技巧</category>
        <category>问题解决</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>问题解决</tag>
        <tag>权限</tag>
        <tag>Node</tag>
      </tags>
  </entry>
  <entry>
    <title>在CentOS 8上安装微擎微信公众号管理系统</title>
    <url>/2020/08/%E5%9C%A8CentOS-8%E4%B8%8A%E5%AE%89%E8%A3%85%E5%BE%AE%E6%93%8E%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="在CentOS-8上安装微擎微信公众号管理系统"><a class="header-anchor" href="#在CentOS-8上安装微擎微信公众号管理系统">.</a>在CentOS 8上安装微擎微信公众号管理系统</h1>
<span id="more"></span>
<h2 id="下载微擎"><a class="header-anchor" href="#下载微擎">.</a>下载微擎</h2>
<p>[<a href="https://cdn.w7.cc/download/WeEngine-Laster-Online.zip">公众版在线下载</a>]</p>
<p>下载微擎后，先注册微擎应用市场账号，如已有账号直接登录并安装即可</p>
<h2 id="安装前准备"><a class="header-anchor" href="#安装前准备">.</a>安装前准备</h2>
<p>一个能够访问外网的服务器</p>
<h2 id="安装微擎"><a class="header-anchor" href="#安装微擎">.</a>安装微擎</h2>
<ol>
<li>解压下载文件并上传到站点根目录</li>
<li>访问<a href="http://xn--6qqv7i2xdt95b/install.php">http://你的域名/install.php</a>或<a href="http://localhost/install.php">http://localhost/install.php</a>进行安装</li>
<li>设置参数</li>
</ol>
<h2 id="编者的话"><a class="header-anchor" href="#编者的话">.</a>编者的话</h2>
<p>微擎是免费开源的公众平台管理系统，微擎可以将公众号、微信小程序、支付宝小程序、百度熊掌号、移动端APP、PC网站等 多种功能集于一身来管理。从某种角度来说，这是为了商业而服务的。</p>
<p>从我了解到微擎，到开始上手体验，我感觉到的是微擎不适合那些浅尝辄止的人，它需要的是有足够的耐心去使用它，感觉到它更多丰富多彩的功能。而我也就止步于此，我一开始是对什么公众号管理，并无需求，也不想去经营一个公众号，这就导致了我对其兴趣缺缺；再者，是它的安装并不友好，它需要一个开放的环境去供它运行，而不是本地化运行，所以它要求要有外网访问权限才能安装。我停在了这里，所以我没能体验到它更多的功能，或许未来我会回心转意，但至少不是现在。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>微擎</tag>
        <tag>CentOS</tag>
        <tag>微信</tag>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title>在Linux搭建MediaWiki知识库</title>
    <url>/2020/08/%E5%9C%A8Linux%E4%B8%8A%E6%90%AD%E5%BB%BAMediaWiki%E7%9F%A5%E8%AF%86%E5%BA%93/</url>
    <content><![CDATA[<h1 id="在Linux上搭建MediaWiki知识库"><a class="header-anchor" href="#在Linux上搭建MediaWiki知识库">.</a>在Linux上搭建MediaWiki知识库</h1>
<h2 id="什么是MediaWiki"><a class="header-anchor" href="#什么是MediaWiki">.</a>什么是MediaWiki</h2>
<p><strong>MediaWiki</strong>全球最著名的开源wiki程序，运行于PHP+MySQL环境。MediaWiki从2002年2月25日被作为<a href="https://baike.so.com/doc/5329027-5564199.html">维基百科</a>全书的系统软件，并有大量其他应用实例。MediaWiki的开发得到<a href="https://baike.so.com/doc/7915746-8189841.html">维基媒体基金会</a>的支持。</p>
<p>MediaWiki是建立wiki网站的首选后台程序，国内的灰狐维客等站点都采用这套系统。</p>
<span id="more"></span>
<h2 id="开始搭建"><a class="header-anchor" href="#开始搭建">.</a>开始搭建</h2>
<h3 id="先决条件"><a class="header-anchor" href="#先决条件">.</a>先决条件</h3>
<ul>
<li>Ngnix</li>
<li>MySQL（5.5.8+）</li>
<li>PHP（7.3.19+或7.4.3+）</li>
</ul>
<p>您可以单独安装这三个软件包，也可以通过任何第三方编译和打包工作来安装这三个软件包，当然也可以使用 <strong>LNMP</strong> 环境安装包来安装。</p>
<p>这里就不再说明以上三个软件的安装教程了。</p>
<h3 id="MySQL配置"><a class="header-anchor" href="#MySQL配置">.</a>MySQL配置</h3>
<p>启动mysql服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure>
<p>登录MySQL</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p //登陆mysql</span><br></pre></td></tr></table></figure>
<p>创建Wiki用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE USER &#x27;wikiuser&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;password&#x27;;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：<em>wikiuser</em> 为用户名, <em>wikidb_passwd</em> 为该用户的数据库密码，建议修改。</p>
</blockquote>
<p>创建Wiki数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE wikidb;</span><br></pre></td></tr></table></figure>
<p>向新创建用户授予数据库权限：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON wikidb.* TO &#x27;wikiuser&#x27;@&#x27;localhost&#x27;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
<p>要确认它是否已创建：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW DATABASES;</span><br></pre></td></tr></table></figure>
<p>要显示已授予的内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW GRANTS FOR &#x27;wiki&#x27;@&#x27;localhost&#x27;;</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>
<p>记住在此处创建的MySQL的“wiki”密码。在设置 wiki 数据库时，您将需要它。</p>
<p><strong>重启mysql服务</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure>
<h3 id="下载安装MediaWiki"><a class="header-anchor" href="#下载安装MediaWiki">.</a>下载安装MediaWiki</h3>
<ol>
<li>下载并解压安装包</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://releases.wikimedia.org/mediawiki/1.37/mediawiki-1.37.2.tar.gz</span><br><span class="line">解压缩</span><br><span class="line">tar -xf mediawiki-*.tar.gz</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>移动至网站目录</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv mediawiki-1.37.2 /www/wwwroot/mediawiki</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：这里的网站目录，由于配置，每个人的可能不一样，但都是wwwroot文件夹</p>
</blockquote>
<ol start="3">
<li>赋予权限</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chown -R www:www /www/wwwroot/mediawiki/</span><br></pre></td></tr></table></figure>
<hr />
<p>在Ngnix上，将<code>/www/wwwroot/mediawiki/</code>目录配置为网站站点，并重启Ngnix以应用配置。</p>
<hr />
<ol start="4">
<li>登录网页安装MediaWiki</li>
</ol>
<p>在本地浏览器中打开<strong>Wiki站点</strong>，依照以下图片流程走</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/wiki/wiki-1.png?x-oss-process=style/yunying61" alt="" /></p>
<hr />
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/wiki/wiki-2.png?x-oss-process=style/yunying61" alt="" /></p>
<hr />
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/wiki/wiki-3.png?x-oss-process=style/yunying61" alt="" /></p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/wiki/wiki-4.png?x-oss-process=style/yunying61" alt="" /></p>
<hr />
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/wiki/wiki-5.png?x-oss-process=style/yunying61" alt="" /></p>
<hr />
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/wiki/wiki-6.png?x-oss-process=style/yunying61" alt="" /></p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/wiki/wiki-7.png?x-oss-process=style/yunying61" alt="" /></p>
<hr />
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/wiki/wiki-8.png?x-oss-process=style/yunying61" alt="" /></p>
<hr />
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/wiki/wiki-1.png?x-oss-process=style/yunying61" alt="" /></p>
<hr />
<h2 id="编者的话-2"><a class="header-anchor" href="#编者的话-2">.</a>编者的话</h2>
<p>我个人感觉，Wiki也是一个很有用的东西，类似于写博客，但又不同于博客，可以对知识进行更细致的归档，Wiki同样也可以作为你的知识库的存储站。</p>
<p>Mdiawiki的设计思路对于我这个新上手的新人来说，真的是用不惯。</p>
<ul>
<li>安装上还好说，但安装完的那一刻开始，我就浑身难受。</li>
<li>摸不着头脑的首页</li>
<li>如何新建界面？</li>
<li>后台设置在哪？</li>
<li>学了markdown语法，再看wiki语法，好难受</li>
<li>原生竟然不支持外链图片？！！</li>
<li>目前看来，不适合个人，也不适合小水管的云服务器。等以后要团队管理、本地大流量服务器时，再搞Wiki吧。</li>
</ul>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>MediaWiki</tag>
        <tag>wiki</tag>
        <tag>维基</tag>
      </tags>
  </entry>
  <entry>
    <title>在CentOS 8上搭建VuePress博客</title>
    <url>/2020/08/%E5%9C%A8CentOS-8%E4%B8%8A%E6%90%AD%E5%BB%BAVuePress%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="在CentOS-8上搭建VuePress博客"><a class="header-anchor" href="#在CentOS-8上搭建VuePress博客">.</a>在CentOS 8上搭建VuePress博客</h1>
<h2 id="什么是VuePress"><a class="header-anchor" href="#什么是VuePress">.</a>什么是VuePress</h2>
<p><strong>VuePress</strong> 是尤雨溪（vue.js 框架作者）4月12日发布的一个全新的基于 vue 的静态网站生成器，实际上就是一个 vue 的 spa 应用，内置 webpack，可以用来写文档。详见 <a href="https://vuepress.docschina.org/">VuePress中文网</a><br />
VuePress 由两部分组成：第一部分是一个<a href="https://github.com/vuejs/vuepress/tree/master/packages/%40vuepress/core">极简静态网站生成器</a>，它包含由 Vue 驱动的<a href="https://www.vuepress.cn/theme/">主题系统</a>和<a href="https://www.vuepress.cn/plugin/">插件 API</a>，另一个部分是为书写技术文档而优化的<a href="https://www.vuepress.cn/theme/default-theme-config.html">默认主题</a>，它的诞生初衷是为了支持 Vue 及其子项目的文档需求。</p>
<p>每一个由 VuePress 生成的页面都带有预渲染好的 HTML，也因此具有非常好的加载性能和搜索引擎优化（SEO）。同时，一旦页面被加载，Vue 将接管这些静态内容，并将其转换成一个完整的单页应用（SPA），其他的页面则会只在用户浏览到的时候才按需加载。</p>
<span id="more"></span>
<h2 id="开始搭建-2"><a class="header-anchor" href="#开始搭建-2">.</a>开始搭建</h2>
<h3 id="安装Node-js-2"><a class="header-anchor" href="#安装Node-js-2">.</a>安装Node.js</h3>
<ol>
<li>打开终端，输入</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://npm.taobao.org/mirrors/node/latest-v12.x/node-v12.18.3-linux-x64.tar.xz</span><br><span class="line">或</span><br><span class="line">wget https://nodejs.org/dist/v12.18.3/node-v12.18.3-linux-x64.tar.xz</span><br></pre></td></tr></table></figure>
<p>或者前往<a href="https://nodejs.org/en/download/">Node.js官网</a>寻找最新版的<code>.tar.xz</code>文件的链接，下载。</p>
<blockquote>
<p>这里如果提示缺失 <code>wget</code>命令，请输入</p>
<p><code>sudo yum install -y wget</code></p>
<p>下载wget依赖包</p>
</blockquote>
<ol start="2">
<li>创建并解压至Node.js安装⽬录</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /usr/local/lib/nodejs</span><br><span class="line"></span><br><span class="line">sudo tar -xJvf node-v12.18.3-linux-x64.tar.xz -C /usr/local/lib/nodejs</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>验证node.js是否解压成功</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/lib/nodejs/node-v12.18.3-linux-x64/bin</span><br><span class="line"></span><br><span class="line">./node -v</span><br></pre></td></tr></table></figure>
<p>如果显示了版本号，即安装成功。</p>
<blockquote>
<p>注意：由于版本更新和下载的问题，未来最新版的肯定跟我这个版本号不相同，所以不要盲目复制粘贴以上的命令，注意命令中的node版本号是否不同。</p>
</blockquote>
<h4 id="配置环境变量-2"><a class="header-anchor" href="#配置环境变量-2">.</a>配置环境变量</h4>
<ol>
<li>
<p>修改环境变量，使得能在任意⽬录下执⾏node命令</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br></pre></td></tr></table></figure>
<p>找到 PATH=$PATH:$HOME/bin，再按<code>I</code>键进行编辑，在PATH=$PATH:$HOME/bin 后⾯添加路径 <code>:/usr/local/lib/node-v12.18.3-linux-x64/bin</code>，结果为： <code>PATH=\$PATH:\$HOME/bin:/usr/local/lib/nodejs/node-v12.18.3-linux-x64/bin</code></p>
<p>按esc键退出编辑模式，再输入:wq进行保存修改，然后输入命令重载一下：<code>source ~/.bash_profile</code></p>
</li>
<li>
<p>到其他⽬录下验证</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">node -v</span><br><span class="line">npm version</span><br><span class="line">npx -v</span><br></pre></td></tr></table></figure>
<p>如果有相应的显示，即Node.js安装完毕。</p>
</li>
</ol>
<h4 id="切换npm源"><a class="header-anchor" href="#切换npm源">.</a>切换npm源</h4>
<h5 id="一、通过命令配置"><a class="header-anchor" href="#一、通过命令配置">.</a>一、通过命令配置</h5>
<ol>
<li>
<p>命令</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>验证命令</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure>
<p>如果返回<a href="https://registry.npm.taobao.org">https://registry.npm.taobao.org</a>，说明镜像配置成功。</p>
</li>
</ol>
<h5 id="二、通过npm安装"><a class="header-anchor" href="#二、通过npm安装">.</a>二、通过npm安装</h5>
<ol>
<li>
<p>安装 cnpm</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>验证 cnpm</p>
<p><code>cnpm -v</code></p>
</li>
<li>
<p>使用 cnpm</p>
<p>之后使用<code>cnpm</code>命令替换<code>npm</code>命令。</p>
<p><code>cnpm install xxx</code> 代替 <s><code>npm install xxx</code></s></p>
</li>
</ol>
<h3 id="安装VuePress"><a class="header-anchor" href="#安装VuePress">.</a>安装VuePress</h3>
<ol>
<li>全局安装</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g vuepress</span><br><span class="line">或</span><br><span class="line">cnpm install -g vuepress</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>创建项目文件夹</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> vuepress_blogs</span><br><span class="line"><span class="built_in">cd</span> vuepress_blogs</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>项目初始化</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>配置项目<br />
VuePress中有两个命令：</li>
</ol>
<p><code>vuepress dev docs</code>命令运行本地服务，通过访问<a href="http://localhost:8080">http://localhost:8080</a>即可预览网站；</p>
<p><code>vuepress build docs</code>命令用来生成静态文件。</p>
<p>默认情况下，放置在docs/.vuepress/dist目录中，当然你也可以在docs/.vuepress/config.js中的dest字段来修改默认存放目录。在这里将两个命令封装成脚本的方式，直接使用<code>npm run docs:dev</code>和<code>npm run docs:build</code>即可。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">vim package.json</span><br><span class="line">修改scripts中的内容如下：</span><br><span class="line"></span><br><span class="line"> <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"> 	<span class="attr">&quot;docs:dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vuepress dev docs&quot;</span><span class="punctuation">,</span></span><br><span class="line"> 	<span class="attr">&quot;docs:build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vuepress build docs&quot;</span></span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>
<p>按esc键退出编辑模式，再输入:wq进行保存修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir docs</span><br><span class="line">cd docs</span><br><span class="line">echo &#x27;# Hello VuePress - first blog!&#x27; &gt;README.md</span><br><span class="line">mkdir .vuepress</span><br><span class="line">cd .vuepress</span><br><span class="line">mkdir public</span><br><span class="line">vim config.js</span><br></pre></td></tr></table></figure>
<p>在 config.js 文件中配置网站标题、描述、主题等信息</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;my blog&#x27;</span>,</span><br><span class="line">  <span class="attr">description</span>: <span class="string">&#x27;我的个人网站&#x27;</span>,</span><br><span class="line">  <span class="attr">head</span>: [ </span><br><span class="line">    [<span class="string">&#x27;link&#x27;</span>, &#123; <span class="attr">rel</span>: <span class="string">&#x27;icon&#x27;</span>, <span class="attr">href</span>: <span class="string">&#x27;/logo.jpg&#x27;</span> &#125;], </span><br><span class="line">    [<span class="string">&#x27;link&#x27;</span>, &#123; <span class="attr">rel</span>: <span class="string">&#x27;manifest&#x27;</span>, <span class="attr">href</span>: <span class="string">&#x27;/manifest.json&#x27;</span> &#125;],<span class="comment">// 增加一个自定义的 favicon(网页标签的图标)</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">base</span>: <span class="string">&#x27;/&#x27;</span>, <span class="comment">// 这是部署到github相关的配置</span></span><br><span class="line">  <span class="attr">markdown</span>: &#123;</span><br><span class="line">    <span class="attr">lineNumbers</span>: ture <span class="comment">// 代码块显示行号</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">themeConfig</span>: &#123;</span><br><span class="line">    <span class="attr">nav</span>:[ </span><br><span class="line">       &#123; <span class="attr">text</span>: <span class="string">&#x27;主页&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;/&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">text</span>: <span class="string">&#x27;博文&#x27;</span>,</span><br><span class="line">              <span class="attr">items</span>: [</span><br><span class="line">                &#123; <span class="attr">text</span>: <span class="string">&#x27;Android&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;/android/&#x27;</span> &#125;,</span><br><span class="line">                &#123; <span class="attr">text</span>: <span class="string">&#x27;ios&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;/ios/&#x27;</span> &#125;,</span><br><span class="line">                &#123; <span class="attr">text</span>: <span class="string">&#x27;Web&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;/web/&#x27;</span> &#125;,</span><br><span class="line">              ], </span><br><span class="line">            &#125;,</span><br><span class="line">            &#123; <span class="attr">text</span>: <span class="string">&#x27;关于&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;/about/&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">text</span>: <span class="string">&#x27;Github&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;https://github.com/yunying61&#x27;</span> &#125;,</span><br><span class="line">        ],</span><br><span class="line">    <span class="attr">sidebar</span>: <span class="string">&#x27;auto&#x27;</span>, <span class="comment">// 侧边栏配置</span></span><br><span class="line">    <span class="attr">sidebarDepth</span>: <span class="number">2</span>, <span class="comment">// 侧边栏显示2级</span></span><br><span class="line">    <span class="attr">lastUpdated</span>: <span class="string">&#x27;Last Updated&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<ul>
<li>title：网站标题</li>
<li>description：网站描述</li>
<li>head：额外的需要被注入到当前页面的HTML”head”中的标签，其中路径的”/”就是public资源目录。</li>
<li>nav：导航栏配置，此配置主要用于配置导航栏的链接，例如以上主页的link为”/”，默认是根目录下的README.md。”/android/”链接到根目录docs下的android文件夹下的README.md文件。</li>
<li>sidebar：侧边栏配置，你可以省略.md拓展名，同时以/结尾的路径将会被视为 */README.md。</li>
<li>sidebarDepth：嵌套的标题链接深度，默认的深度为1。</li>
<li>lastUpdated：最后更新时间。</li>
</ul>
<p>到此，项目的结构差不多就出来了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vuepress_blogs</span><br><span class="line">├─── docs</span><br><span class="line">│    ├── README.md</span><br><span class="line">│    └── .vuepress</span><br><span class="line">│           ├── public</span><br><span class="line">│           └── config.js</span><br><span class="line">└── package.json</span><br></pre></td></tr></table></figure>
<p><strong>docs</strong> ：以后要在这⾥⾯写⽂章，直接在此⽂件夹下新建⽂件夹，然后再建 md⽂档就⾏，链接会⾃动⽣成。</p>
<p><strong>README.md</strong> ：这个 md文件 是以后的首页</p>
<p><strong>.vuepress</strong> ：这个⾥⾯会存放⼀些配置和组件</p>
<p><strong>public</strong> ： 静态⽂件存放地</p>
<p><strong>config.js</strong> ：配置⽂件，以后的所有配置基本都在这⾥写</p>
<p><strong>package.json</strong> ：运行脚本</p>
<ol start="5">
<li>运行vuepress博客</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ..</span><br><span class="line">这个命令输入两次，回到vuepress_blogs⽬录，执⾏命令</span><br><span class="line">vuepress build docs</span><br><span class="line">vuepress dev docs</span><br></pre></td></tr></table></figure>
<p><code>vuepress build docs</code> 命 令 ⽤ 来 ⽣ 成 静 态 ⽂ 件 ， 默 认 情 况 下 ， 放 置 在 docs/.vuepress/dist⽬录中，当然你也可以在docs/.vuepress/config.js中的dest字段 来修改默认存放⽬录。<br />
<code>vuepress dev docs</code> 命令运⾏本地服务，通过访问(<a href="http://localhost:8080">http://localhost:8080</a>)即可预览⽹站。</p>
<p>在这⾥已经将两个命令封装成了脚本的⽅式，可以直接使⽤npm run docs:dev和npm run docs:build即可运行上述命令。</p>
<h3 id="部署、推送到网站上"><a class="header-anchor" href="#部署、推送到网站上">.</a>部署、推送到网站上</h3>
<p>由于构建的时候生成静态页面，所以将dist文件夹中的内容可以部署在gitHub的pages或者coding的pages都可以。这里使用脚本的方式自动部署到github上。</p>
<h4 id="安装Git-2"><a class="header-anchor" href="#安装Git-2">.</a>安装Git</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install git</span><br><span class="line">查看Git是否安装完成</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure>
<p>顺便说一下，yum安装git被安装在<code>/usr/libexec/git-core</code>目录下</p>
<h4 id="创建一个deploy-sh"><a class="header-anchor" href="#创建一个deploy-sh">.</a>创建一个deploy.sh</h4>
<p>在 vuepress_blogs 下创建 deploy.sh 。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">touch deploy.sh</span><br></pre></td></tr></table></figure>
<h4 id="编写脚本"><a class="header-anchor" href="#编写脚本">.</a>编写脚本</h4>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保脚本抛出遇到的错误</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成静态文件</span></span><br><span class="line">npm run docs:build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入生成的文件夹</span></span><br><span class="line"><span class="built_in">cd</span> docs/.vuepress/dist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果是发布到自定义域名</span></span><br><span class="line"><span class="comment"># echo &#x27;www.example.com&#x27; &gt; CNAME</span></span><br><span class="line"></span><br><span class="line">git init</span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">&#x27;deploy&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果发布到 https://&lt;USERNAME&gt;.github.io</span></span><br><span class="line"><span class="comment"># git push -f git@github.com:&lt;USERNAME&gt;/&lt;USERNAME&gt;.github.io.git master</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果发布到 https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;</span></span><br><span class="line"><span class="comment"># git push -f git@github.com:&lt;USERNAME&gt;/&lt;REPO&gt;.git master:gh-pages</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> -</span><br></pre></td></tr></table></figure>
<p>再次编辑package.json</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;deploy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bash deploy.sh&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行 <code>npm run deploy</code> 即可自动构建部署到github上。</p>
<h2 id="编者的话-3"><a class="header-anchor" href="#编者的话-3">.</a>编者的话</h2>
<p>目前对于刚上手的我来说，VuePress还是比较简单的，只不过在Linux上安装会使用很多命令而已。对比起hexo，vuepress的配置过于繁杂，不过能看出vuepress还是拥有极高的自我定制性。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>CentOS</tag>
        <tag>VuePress</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建基于CCAA的Linux网页端下载工具</title>
    <url>/2020/08/%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8ECCAA%E7%9A%84Linux%E7%BD%91%E9%A1%B5%E7%AB%AF%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h1 id="搭建基于CCAA的Linux网页端下载工具"><a class="header-anchor" href="#搭建基于CCAA的Linux网页端下载工具">.</a>搭建基于CCAA的Linux网页端下载工具</h1>
<p>转载来源：<a href="https://www.yuque.com/helloz/ccaa/readme">CCAA帮助文档</a></p>
<p>CCAA 是服务器离线下载解决⽅案包，组件包含了Aria2 提供离线下载，ccaa_web⽀撑AriaNg运⾏， AriaNg为Aria2 提供WEB界⾯以及Filemanager提供⽂件管理。</p>
<p>CCAA原为<code>CentOS + Caddy + AriaNg + Aria2</code>，故命名为CCAA，不过现在已经不仅仅支持CentOS，包括主流的Debian、Ubuntu也已经支持，自2.0版本开始已移除Caddy，改用Golang写了一个简单的webserver来运行AriaNg。</p>
<ul>
<li>
<p>Aria2 提供离线下载</p>
</li>
<li>
<p>ccaa_web支撑AriaNg运行</p>
</li>
</ul>
<p>+　AriaNg为Aria2 提供WEB界面</p>
<ul>
<li>Filemanager提供文件管理</li>
</ul>
<p>主要功能</p>
<ul>
<li>⽀持HTTP/HTTPS/FTP/BT/磁⼒链接等离线下载，断点续传等</li>
<li>⽂件管理、视频在线播放</li>
<li>完善的帮助⽂档</li>
</ul>
<span id="more"></span>
<h2 id="开始安装CCAA"><a class="header-anchor" href="#开始安装CCAA">.</a>开始安装CCAA</h2>
<ol>
<li>请使用root用户或权限，运行下面的命令：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#海外</span></span><br><span class="line">bash &lt;(curl -Lsk https://raw.githubusercontent.com/helloxz/ccaa/master/ccaa.sh)</span><br><span class="line"><span class="comment">#国内</span></span><br><span class="line">bash &lt;(curl -Lsk https://raw.githubusercontent.com/helloxz/ccaa/master/ccaa.sh) cdn</span><br></pre></td></tr></table></figure>
<p>如果出现<code>-bash: curl: command not found</code>错误，说明<code>curl</code>命令没安装，请输入下面的命令先安装<code>curl</code>，再回过头来执行上面的命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Debian or Ubuntu</span></span><br><span class="line">apt-get -y install curl</span><br><span class="line"><span class="comment">#CentOS</span></span><br><span class="line">yum -y install curl</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>如果不出现错误，会看到下面的界面，根据提示输入1安装CCAA</li>
</ol>
<p><img data-src="https://www.yuque.com/api/filetransfer/images?url=https%3A%2F%2Fimgurl.org%2Fupload%2F1810%2Fdeb6d4a3278a62f8.png&amp;sign=bbc7e79a9994aba3bcc414c7ec3bcacd58199c8b2dea4f72864ee5d61a89c1ec" alt="" /></p>
<ol start="3">
<li>根据提示设置下载路径、RPC密钥（稍后需要使用）</li>
</ol>
<p><img data-src="https://cdn.nlark.com/yuque/0/2020/png/192152/1582892714525-fcce121e-a420-4362-a689-f16f11d118a4.png?x-oss-process=image%2Fresize%2Cw_514" alt="" /></p>
<ol start="4">
<li>
<p>安装完毕后会提示访问地址、Aria2 RPC 密钥、File Browser 用户名、密码</p>
<p><img data-src="https://cdn.nlark.com/yuque/0/2020/png/192152/1582892770526-c8eebdac-cc54-41d7-8708-8bebeffaf02d.png?x-oss-process=image%2Fresize%2Cw_514" alt="" /></p>
</li>
<li>
<p>根据提示输入<code>http://IP:6080/</code>或<code>http://localhost:6080</code>打开AriaNg界面，依次打开AriaNg设置 - RPC ，填写Aria2 RPC 密钥，然后刷新页面，至此已经完成，可以愉快的开始下载啦。</p>
<p><img data-src="https://imgurl.org/upload/1810/0262be6ae3e9dcc2.png" alt="" /></p>
</li>
</ol>
<blockquote>
<p>注意：如果服务器有启用安全组，请务必在安全组放行以下端口：<code>6080/6800/6081/6998/51413</code></p>
</blockquote>
<h2 id="使用CCAA"><a class="header-anchor" href="#使用CCAA">.</a>使用CCAA</h2>
<h3 id="新建下载"><a class="header-anchor" href="#新建下载">.</a>新建下载</h3>
<p>在AriaNg页面点击新建按钮，输入链接即可下载，支持HTTP/HTTPS/FTP/磁力、BT等。</p>
<p><img data-src="https://cdn.nlark.com/yuque/0/2019/png/192152/1557303903170-a884f329-58ac-4f9c-9f60-e866b31ba4ef.png?x-oss-process=image%2Fresize%2Cw_689" alt="" /></p>
<p>点击左侧文件管理按钮会跳转到Filemanager文件管理界面，或者手动输入地址<code>http://IP:6081/</code>也可以进入Filemanager，<strong>初始用户名为</strong><code>ccaa</code>，<strong>密码为</strong><code>admin</code>，请登录后务必修改<strong>Filemanager密码</strong>。<br />
<img data-src="https://cdn.nlark.com/yuque/0/2019/png/192152/1557303903653-1834f75e-7577-463a-911c-1306c99a4ba5.png?x-oss-process=image%2Fresize%2Cw_689" alt="" /></p>
<h3 id="更新BT-Tracker"><a class="header-anchor" href="#更新BT-Tracker">.</a>更新BT Tracker</h3>
<p>BT Tracker简单来说就是BT服务器，如果没有BT服务器那么将无法下载BT、磁力链接，默认情况CCAA安装后已经内置最新可用的BT Tracker列表。</p>
<p>但随着时间推移BT Tracker列表中很多服务器会失效，因此当BT无法下载或者下载慢的时候可尝试更新BT Tracker列表。（<strong>建议每周更新一次，不要每天都更新，没啥意义</strong>）</p>
<p>输入<code>/etc/ccaa/upbt.sh</code>命令即可自动更新BT Tracker列表。</p>
<h3 id="常用命令"><a class="header-anchor" href="#常用命令">.</a>常用命令</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#进入CCAA管理界面</span><br><span class="line">ccaa</span><br><span class="line"></span><br><span class="line">#查看ccaa状态</span><br><span class="line">ccaa status</span><br><span class="line"></span><br><span class="line">#启动ccaa</span><br><span class="line">ccaa start</span><br><span class="line"></span><br><span class="line">#停止ccaa</span><br><span class="line">ccaa stop</span><br><span class="line"></span><br><span class="line">#重启ccaa</span><br><span class="line">ccaa restart</span><br><span class="line"></span><br><span class="line">#查看当前版本</span><br><span class="line">ccaa -v</span><br></pre></td></tr></table></figure>
<h3 id="查看RPC密钥"><a class="header-anchor" href="#查看RPC密钥">.</a>查看RPC密钥</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看Aria2 RPC 密钥</span><br><span class="line">cat /etc/ccaa/aria2.conf | grep &#x27;rpc-secret=&#x27;</span><br></pre></td></tr></table></figure>
<h3 id="修改RPC密钥"><a class="header-anchor" href="#修改RPC密钥">.</a>修改RPC密钥</h3>
<p>如果需要修改Aria2 RPC 密钥密钥，请编辑<code>/etc/ccaa/aria2.conf</code>，找到<code>rpc-secret=</code>进行修改</p>
<p>修改配置后需要输入命令<code>ccaa restart</code>重启服务生效</p>
<h3 id="开机启动CCAA"><a class="header-anchor" href="#开机启动CCAA">.</a>开机启动CCAA</h3>
<p>CCAA <code>v2.1</code>版本开始支持以服务的形式开机启动，首先输入命令<code>ccaa -v</code>查看当前版本，确保大于等于<code>2.1</code>。</p>
<p>依次输入下面的命令设置开机启动：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable aria2</span><br><span class="line">systemctl enable ccaa_web</span><br><span class="line">systemctl enable filebrowser</span><br></pre></td></tr></table></figure>
<h3 id="自动更新BT-Tracker列表"><a class="header-anchor" href="#自动更新BT-Tracker列表">.</a>自动更新BT Tracker列表</h3>
<p>使用crontab可以设置自动更新BT Tracker列表，输入下面的命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#安装crontab，如已安装请跳过</span><br><span class="line">yum -y install crontabs</span><br><span class="line">#新增计划任务</span><br><span class="line">crontab -e</span><br><span class="line">#添加如下内容</span><br><span class="line">* 2 * * 7 /etc/ccaa/upbt.sh &gt; /dev/null</span><br><span class="line">#重启crontab服务</span><br><span class="line">service crond reload  #CentOS 6</span><br><span class="line">systemctl reload crond  #CentOS 7</span><br></pre></td></tr></table></figure>
<h2 id="常见问题"><a class="header-anchor" href="#常见问题">.</a>常见问题</h2>
<p><a href="https://www.yuque.com/helloz/ccaa/faq">官方回应贴</a></p>
<p><a href="https://www.yuque.com/helloz/ccaa">CCAA帮助文档</a></p>
<p><a href="https://github.com/helloxz/ccaa">GitHub</a></p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>CCAA</tag>
        <tag>离线下载</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建基于Tomcat的Java Web开发环境</title>
    <url>/2020/08/%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8ETomcat%E7%9A%84Java-Web%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h1 id="搭建基于Tomcat的Java-Web开发环境"><a class="header-anchor" href="#搭建基于Tomcat的Java-Web开发环境">.</a>搭建基于Tomcat的Java Web开发环境</h1>
<p><a href="https://tomcat.apache.org/">Tomcat</a>是Apache软件基金会（Apache Software Foundation）的Jakarta项目中的一个核心项目，由Apache、Sun和其他一些公司及个人共同开发而成。由于有了Sun公司的参与和支持，最新的Servlet和JSP规范总是能在Tomcat中得到体现。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。</p>
<span id="more"></span>
<h2 id="开始搭建-3"><a class="header-anchor" href="#开始搭建-3">.</a>开始搭建</h2>
<h3 id="安装JDK"><a class="header-anchor" href="#安装JDK">.</a>安装JDK</h3>
<ol>
<li>
<p>执行以下命令，查看yum源中JDK版本。</p>
<p><code>yum list java*</code></p>
</li>
<li>
<p>执行以下命令，使用yum安装JDK1.8.</p>
<p><code>yum -y install java-1.8.0-openjdk*</code></p>
</li>
<li>
<p>执行以下命令，查看是否安装成功。</p>
<p><code>java -version</code></p>
</li>
</ol>
<h3 id="安装MySQL数据库"><a class="header-anchor" href="#安装MySQL数据库">.</a>安装MySQL数据库</h3>
<ol>
<li>
<p>执行以下命令，下载并安装MySQL官方的Yum Repository。</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm </span><br><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm  </span><br><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>执行以下命令，启MySQL数据库。</p>
<p><code>systemctl start mysqld.service</code></p>
</li>
<li>
<p>执行以下命令，查看MySQL初始密码。</p>
<p><code>grep &quot;password&quot; /var/log/mysqld.log</code></p>
</li>
<li>
<p>执行以下命令，登录数据库</p>
<p><code>mysql -u root -p</code></p>
</li>
<li>
<p>执行以下命令，修改MySQL默认密码。</p>
</li>
</ol>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 修改密码安全策略为低（只校验密码长度，至少8位）</span><br><span class="line">set global validate-password-policy-0;  </span><br><span class="line"></span><br><span class="line">ALTER USER&#x27;root&#x27;@&#x27;localhost&#x27;IDENTIFIED BY&#x27;12345678;</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>
<p>执行以下命令，授予root用户远程管理权限。</p>
<p><code>GRANT ALL PRIVILEGES ON \*.\* TO \'root\'@\'%\' IDENTIFIED BY \'12345678\';</code></p>
</li>
<li>
<p>输入<code>exit</code>退出数据库。</p>
</li>
</ol>
<h3 id="安装-Tomcat"><a class="header-anchor" href="#安装-Tomcat">.</a>安装 Tomcat</h3>
<ol>
<li>
<p>执行以下命令，下载Tomcat压缩包。</p>
<p><code>wget https://mirror.bit.edu.cn/apache/tomcat/tomcat-8/v8.5.57/bin/apache-tomcat-8.5.57.tar.gz</code></p>
</li>
<li>
<p>执行以下命令，解压刚刚下载Tomcat包。<br />
<code>tar-zxvf apache-tomcat-8.5.57.tar.gz</code></p>
</li>
<li>
<p>执行以下命令，修改Tomcat名字。<br />
<code>mv apache-tomcat-8.5.57 /usr/local/Tomcat8.5</code></p>
</li>
<li>
<p>执行以下命令，为Tomcat授权。<br />
<code>chmod +x /usr/local/Tomcat8.5/bin/*.sh</code></p>
</li>
<li>
<p>执行以下命令，修改Tomcat默认端口号为80<br />
<strong>说明：<strong>Tomcat默认端口号为</strong>8080</strong>。<br />
<code>sed -i \'s/Connector port=&quot;8080&quot;/Connector port=&quot;80&quot;/\' /usr/local/Tomcat8.5/conf/server.xml</code></p>
</li>
<li>
<p>启动Tomcat</p>
<p><code>/usr/local/Tomcat8.5/bin/ ./startup.sh</code></p>
</li>
</ol>
<p>至此，Tomcat就安装成功了，通过访问<a href="http://localhost">http://localhost</a>即可访问。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>Java</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora-PicGo-阿里云OSS-搭建图床</title>
    <url>/2020/12/Typora-PicGo-%E9%98%BF%E9%87%8C%E4%BA%91OSS-%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h1 id="Typora-PicGo-阿里云OSS-搭建自动上传图床"><a class="header-anchor" href="#Typora-PicGo-阿里云OSS-搭建自动上传图床">.</a>Typora+PicGo+阿里云OSS-搭建自动上传图床</h1>
<h2 id="前言-2"><a class="header-anchor" href="#前言-2">.</a>前言</h2>
<blockquote>
<p>一定要注意空格啊！！！我就是因为Access Key ID开头多打了一个空格，导致一直报错，折腾了2小时，无意间在配置文件里发现这里多了一个空格！</p>
</blockquote>
<p>好了，以上是吐槽，接下来进入正题。</p>
<p>在Typora使用markdown语法写作时，是不是遇到过这样子的情况。我需要<strong>插入图片</strong>用的是本地链接。在本地，在编辑器中，我们能看到图片的展示。但是如果我们写完了，需要上传到自己的博客，或者去到某些平台发布。复制文章过去，图片并不能被复制过去，需要手动的去上传本地图片到图片服务器，然后根据URL导入文章中，再排版。十分的麻烦。</p>
<p>而PicGo+阿里云的OSS就可以<strong>自动</strong>帮我们将图片上传到网上，转换成URL，然后出现在我们文章中需要插入图片的位置，使用该URL，不管我们在什么平台发布文章，都能显示我们的图片。</p>
<span id="more"></span>
<h1 id="PicGo"><a class="header-anchor" href="#PicGo">.</a>PicGo</h1>
<p>一个用于<strong>快速</strong>上传图片并获取URL链接的图床工具。</p>
<p>PicGo 本体支持如下图床：</p>
<ul>
<li>SM.MS图床</li>
<li>腾讯云COS</li>
<li>Github图床</li>
<li>七牛图床</li>
<li>Imgur图床</li>
<li><strong>阿里云OSS</strong></li>
<li>又拍云图床</li>
<li>如果你有其他图床的上传需求，还有第三方图床插件可以使用</li>
</ul>
<h2 id="特色功能"><a class="header-anchor" href="#特色功能">.</a>特色功能</h2>
<ul>
<li>支持拖拽图片上传</li>
<li>支持快捷键上传剪贴板里第一张图片</li>
<li>Windows 和 macOS 支持右键图片文件通过菜单上传 (v2.1.0+)</li>
<li>上传图片后自动复制链接到剪贴板</li>
<li>支持自定义复制到剪贴板的链接格式</li>
<li>支持修改快捷键，默认快速上传快捷键：<code>command + shift + p</code>（macOS）| <code>win + shift + p</code>（Windows\Linux)</li>
<li>支持插件系统，已有插件支持 Gitee、青云等第三方图床
<ul>
<li>更多第三方插件以及使用了 PicGo 底层的应用可以在 <a href="https://github.com/PicGo/Awesome-PicGo">Awesome-PicGo</a> 找到。欢迎贡献！</li>
</ul>
</li>
<li>支持通过发送 HTTP 请求调用 PicGo 上传（v2.2.0+)</li>
</ul>
<p><strong>如果第一次使用，请参考应用 <a href="https://picgo.github.io/PicGo-Doc/zh/guide/getting-started.html">使用文档</a>。遇到问题了还可以看看 <a href="https://github.com/Molunerfinn/PicGo/blob/dev/FAQ.md">FAQ</a> 以及被关闭的 <a href="https://github.com/Molunerfinn/PicGo/issues?q=is%3Aissue+is%3Aclosed">issues</a>。</strong></p>
<h2 id="下载安装"><a class="header-anchor" href="#下载安装">.</a>下载安装</h2>
<blockquote>
<p>注意：请确保你安装了 <code>Node.js</code>， 并且版本 &gt;= 8。</p>
</blockquote>
<p>点击此处下载 <a href="https://github.com/Molunerfinn/PicGo/releases">应用</a>。</p>
<h3 id="Windows"><a class="header-anchor" href="#Windows">.</a>Windows</h3>
<p>Windows 用户请下载最新版本的 <code>exe</code> 文件。</p>
<p><strong>还可以使用 <a href="https://scoop.sh/">Scoop</a> 来安装 PicGo: <code>scoop bucket add helbing https://github.com/helbing/scoop-bucket</code> &amp; <code>scoop install picgo</code>。 感谢 @helbing 的贡献！</strong></p>
<p><strong>还可以使用 <a href="https://chocolatey.org/">Chocolatey</a> 来安装 PicGo: <code>choco install picgo</code>。 感谢 @iYato 的贡献！</strong></p>
<h3 id="macOS"><a class="header-anchor" href="#macOS">.</a>macOS</h3>
<p>macOS 用户请下载最新版本的 <code>dmg</code> 文件。</p>
<p><strong>还可以使用 <code>brew cask</code> 来安装 PicGo: <code>brew cask install picgo</code>。感谢 @womeimingzi11 的贡献！</strong></p>
<h3 id="Linux"><a class="header-anchor" href="#Linux">.</a>Linux</h3>
<p>Linux 用户请下载 <code>AppImage</code> 文件。</p>
<p><strong>如果你是 Arch 类的 Linux 用户，可以直接通过 <code>aurman -S picgo-appimage</code> 来安装 PicGo。感谢 @houbaron 的贡献！</strong></p>
<h2 id="应用截图"><a class="header-anchor" href="#应用截图">.</a>应用截图</h2>
<p><img data-src="https://user-images.githubusercontent.com/12621342/34242310-b5056510-e655-11e7-8568-60ffd4f71910.gif" alt="" /></p>
<h2 id="PicGo配置"><a class="header-anchor" href="#PicGo配置">.</a>PicGo配置</h2>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/picgo-alyoss.png" alt="" /></p>
<p>阿里云OSS配置项及说明：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;accessKeyId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;accessKeySecret&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;bucket&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 存储空间名</span></span><br><span class="line">  <span class="attr">&quot;area&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 存储区域代号</span></span><br><span class="line">  <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 自定义存储路径</span></span><br><span class="line">  <span class="attr">&quot;customUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 自定义域名，注意要加http://或者https://</span></span><br><span class="line">  <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<div class="note info"><p>注意空格啊！！！不要像我一样怀疑了半天的人生，结果就是多打了一个空格！</p>
</div>
<p>&lt;abbr title:”没有就去阿里买一个OSS，很便宜的”&gt;默认你已经有了阿里云的OSS</abbr>，而且知道阿里云的<strong>RAM访问控制</strong>。</p>
<ul>
<li>*设定Keyld（accessKeyId）：这是你的<code>accessKeyId</code></li>
<li>*设定KeySecret（accessKeySecret）：这是你的<code>accessKeySecret</code></li>
<li>*设定存储空间名（bucket）：这是你的bucket名称</li>
<li>*确认存储区域（area）：这是你bucket所在的地域，一般都为oss-cn-城市拼音</li>
<li>指定存储路径（path）：默认为空，则放在bucket根目录下；如果有需求，则存储路径一定要以<code>/</code>结尾！</li>
<li>设定网址后缀（options）：如果你的OSS有设置网址后缀，请注意是否要加上这个后缀。</li>
<li>设定自定义域名（customUrl）：自定义域名，注意要加http://或者https://</li>
</ul>
<blockquote>
<p>在Typora的偏好设置 - 图像，按照下图进行设置就可以了。</p>
</blockquote>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/picgo-typora.png?x-oss-process=style/yunying61" alt="" /></p>
<blockquote>
<p>以上配置是在PicGo软件上上传图片然后复制到URL进行使用的，而且在日常写作中，PicGo也是要开启才能使用，所以下面我将介绍一个更为方便的PicGo-Core，它是以命令行形式运行的，用完即退出进程，不会一直占用系统资源。</p>
</blockquote>
<h2 id="PicGo-Core配置"><a class="header-anchor" href="#PicGo-Core配置">.</a>PicGo-Core配置</h2>
<p>官网<a href="https://picgo.github.io/PicGo-Core-Doc/">PicGo-Core</a></p>
<p>安装：<code>注意请确保你的 Node.js 版本 &gt;= 8</code>。</p>
<p>使用 <code>npm install picgo -g</code> 全局安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#简单使用</span></span><br><span class="line"><span class="comment"># 上传具体路径图片</span></span><br><span class="line">picgo upload /xxx/xxx.jpg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传剪贴板里的第一张图片（上传时会将格式转成png）</span></span><br><span class="line">picgo upload</span><br></pre></td></tr></table></figure>
<h3 id="默认配置文件"><a class="header-anchor" href="#默认配置文件">.</a>默认配置文件</h3>
<p>首先，先在命令窗口使用命令 <code>picgo -h</code> 查看picgo的命令，同时会生成配置文件。</p>
<p>picgo 的默认配置文件为<code>~/.picgo/config.json</code>。其中<code>~</code>为用户目录。不同系统的用户目录不太一样。</p>
<p>linux 和 macOS 均为<code>~/.picgo/config.json</code>。</p>
<p>windows 则为<code>C:\Users\你的用户名\.picgo\config.json</code>。</p>
<p>将配置文件填入如下，具体配置请根据上面的说明，把各项信息填好，并保存：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;picBed&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;uploader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aliyun&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aliyun&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aliyun&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;accessKeyId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;accessKeySecret&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;bucket&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;area&quot;</span><span class="punctuation">:</span> <span class="string">&quot;oss-cn-shanghai&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;customUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PicGo/&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;picgoPlugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>在Typora的偏好设置 - 图像，按照下图进行设置就可以了。</p>
</blockquote>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/picgo-core-typora.png?x-oss-process=style/yunying61" alt="" /></p>
<h2 id="后记"><a class="header-anchor" href="#后记">.</a>后记</h2>
<p>至此，你就可以在Typora直接插入图片，PicGo-Core会自动帮你把图片上传到阿里云OSS，并且将链接替换成网页URL。在平时，也可以通过PicGo软件上传图片到远程服务器中进行备份。</p>
<p>而PicGo-Core只会将图片按原名称进行上传，意味着不能改名。</p>
<p>PicGo_APP可以在上传前修改图片名称，再上传。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>Typora</tag>
        <tag>PicGo</tag>
        <tag>OSS</tag>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>LaTeX常用公式</title>
    <url>/2020/09/LaTeX%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="符号与字母-Symbol-and-Alphabet-2"><a class="header-anchor" href="#符号与字母-Symbol-and-Alphabet-2">.</a>符号与字母 Symbol and Alphabet</h1>
<h2 id="希腊字母-Greek-alphabet-2"><a class="header-anchor" href="#希腊字母-Greek-alphabet-2">.</a>希腊字母 Greek alphabet</h2>
<p>在输入 Latex 代码时，要用 $   $ 包含</p>
<span id="more"></span>
<table>
<thead>
<tr>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
<th>显示</th>
<th>LaTeX</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">常用</td>
<td style="text-align:center"></td>
<td style="text-align:center">常用</td>
<td style="text-align:center"></td>
<td>常用</td>
<td></td>
</tr>
<tr>
<td style="text-align:center">$\alpha$</td>
<td style="text-align:center">\alpha</td>
<td style="text-align:center">$\beta$</td>
<td style="text-align:center">\beta</td>
<td>$\gamma$</td>
<td>\gamma</td>
</tr>
<tr>
<td style="text-align:center">$\delta$</td>
<td style="text-align:center">\delta</td>
<td style="text-align:center">$\xi$</td>
<td style="text-align:center">\xi</td>
<td>$\zeta$</td>
<td>\zeta</td>
</tr>
<tr>
<td style="text-align:center">$\eta$</td>
<td style="text-align:center">\eta</td>
<td style="text-align:center">$\theta$</td>
<td style="text-align:center">\theta</td>
<td>$\lambda$</td>
<td>\lambda</td>
</tr>
<tr>
<td style="text-align:center">$\mu$</td>
<td style="text-align:center">\mu</td>
<td style="text-align:center">$\varepsilon$</td>
<td style="text-align:center">\varepsilon</td>
<td>$\pi$</td>
<td>\pi</td>
</tr>
<tr>
<td style="text-align:center">$\rho$</td>
<td style="text-align:center">\rho</td>
<td style="text-align:center">$\sigma$</td>
<td style="text-align:center">\sigma</td>
<td>$\phi$</td>
<td>\phi</td>
</tr>
<tr>
<td style="text-align:center">$\varphi$</td>
<td style="text-align:center">\varphi</td>
<td style="text-align:center">$\Sigma$</td>
<td style="text-align:center">\Sigma</td>
<td>$\Gamma$</td>
<td>\Gamma</td>
</tr>
<tr>
<td style="text-align:center">$\Phi$</td>
<td style="text-align:center">\Phi</td>
<td style="text-align:center">$\Delta$</td>
<td style="text-align:center">\Delta</td>
<td>\Omega$$</td>
<td>\Omega</td>
</tr>
<tr>
<td style="text-align:center">$\Upsilon$</td>
<td style="text-align:center">\Upsilon</td>
<td style="text-align:center">$\Phi$</td>
<td style="text-align:center">\Phi</td>
<td>$\Lambda$</td>
<td>\Lambda</td>
</tr>
<tr>
<td style="text-align:center">$\epsilon$</td>
<td style="text-align:center">\epsilon</td>
<td style="text-align:center">$\vartheta$</td>
<td style="text-align:center">\vartheta</td>
<td>$\iota$</td>
<td>\iota</td>
</tr>
<tr>
<td style="text-align:center">$\omega$</td>
<td style="text-align:center">\omega</td>
<td style="text-align:center">$\nu$</td>
<td style="text-align:center">\nu</td>
<td>$o$</td>
<td>o</td>
</tr>
<tr>
<td style="text-align:center">$\psi$</td>
<td style="text-align:center">\psi</td>
<td style="text-align:center">$\chi$</td>
<td style="text-align:center">\chi</td>
<td>$\varsigma$</td>
<td>\varsigma</td>
</tr>
<tr>
<td style="text-align:center">$\tau$</td>
<td style="text-align:center">\tau</td>
<td style="text-align:center">$\upsilon$</td>
<td style="text-align:center">\upsilon</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>注意:</strong> MathJax支持的大写希腊字母有限，如需其他（如大写Alpha），可使用<strong>罗马体</strong>转换，如<code>\mathrm&#123;A&#125;</code>表示大写Alpha：$\mathrm{A}$。</p>
<h2 id="希伯来字母-Hebrew-alphabet-2"><a class="header-anchor" href="#希伯来字母-Hebrew-alphabet-2">.</a>希伯来字母 Hebrew alphabet</h2>
<p>在输入 Latex 代码时，要用 $   $ 包含</p>
<table>
<thead>
<tr>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">$\aleph$</td>
<td style="text-align:center">\aleph</td>
<td style="text-align:center">$\beth$</td>
<td style="text-align:center">\beth</td>
</tr>
<tr>
<td style="text-align:center">$\gimel$</td>
<td style="text-align:center">\gimel</td>
<td style="text-align:center">$\daleth$</td>
<td style="text-align:center">\daleth</td>
</tr>
</tbody>
</table>
<h2 id="二元运算符-Binary-operations-2"><a class="header-anchor" href="#二元运算符-Binary-operations-2">.</a>二元运算符 Binary operations</h2>
<p>在输入 Latex 代码时，要用 $   $ 包含</p>
<table>
<thead>
<tr>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
<th>显示</th>
<th>LaTeX</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">$+$</td>
<td style="text-align:center">+</td>
<td style="text-align:center">$\pm$</td>
<td style="text-align:center">\pm</td>
<td>$\cdot$</td>
<td>\cdot</td>
</tr>
<tr>
<td style="text-align:center">$-$</td>
<td style="text-align:center">-</td>
<td style="text-align:center">$\mp$</td>
<td style="text-align:center">\mp</td>
<td>$\bullet$</td>
<td>\bullet</td>
</tr>
<tr>
<td style="text-align:center">$\times$</td>
<td style="text-align:center">\times</td>
<td style="text-align:center">$\setminus$</td>
<td style="text-align:center">\setminus</td>
<td>$\cup$</td>
<td>\cup</td>
</tr>
<tr>
<td style="text-align:center">$\div$</td>
<td style="text-align:center">\div   (在physics扩展<br/>开启状态下不是除号)</td>
<td style="text-align:center">$\ast$</td>
<td style="text-align:center">\ast</td>
<td>$\cap$</td>
<td>\cap</td>
</tr>
<tr>
<td style="text-align:center">$\triangleleft$</td>
<td style="text-align:center">\triangleleft</td>
<td style="text-align:center">$\unlhd$</td>
<td style="text-align:center">\unlhd</td>
<td>$\sqcup$</td>
<td>\sqcup</td>
</tr>
<tr>
<td style="text-align:center">$\triangleright$</td>
<td style="text-align:center">\triangleright</td>
<td style="text-align:center">$\unrhd$</td>
<td style="text-align:center">\unrhd</td>
<td>$\sqcap$</td>
<td>\sqcap</td>
</tr>
<tr>
<td style="text-align:center">$\lhd$</td>
<td style="text-align:center">\lhd</td>
<td style="text-align:center">$\bigtriangleup$</td>
<td style="text-align:center">\bigtriangleup</td>
<td>$\vee$</td>
<td>\vee</td>
</tr>
<tr>
<td style="text-align:center">$\rhd$</td>
<td style="text-align:center">\rhd</td>
<td style="text-align:center">$\bigtriangledown$</td>
<td style="text-align:center">\bigtriangledown</td>
<td>$\wedge$</td>
<td>\wedge</td>
</tr>
</tbody>
</table>
<h2 id="二元关系符-Binary-relations-2"><a class="header-anchor" href="#二元关系符-Binary-relations-2">.</a>二元关系符 Binary relations</h2>
<h5 id="包含等号、大于、小于、关系从属。-2"><a class="header-anchor" href="#包含等号、大于、小于、关系从属。-2">.</a>包含等号、大于、小于、关系从属。</h5>
<p>在输入 Latex 代码时，要用 $   $ 包含</p>
<table>
<thead>
<tr>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
<th style="text-align:center">显示</th>
<th style="text-align:center">LaTeX</th>
<th>显示</th>
<th>LaTeX</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">$=$</td>
<td style="text-align:center">=</td>
<td style="text-align:center">$\ne$</td>
<td style="text-align:center">\ne</td>
<td>$\neq$</td>
<td>\neq</td>
</tr>
<tr>
<td style="text-align:center">$\equiv$</td>
<td style="text-align:center">\equiv</td>
<td style="text-align:center">$\not\equiv$</td>
<td style="text-align:center">\not\equiv</td>
<td>$\doteq$</td>
<td></td>
</tr>
<tr>
<td style="text-align:center">$$</td>
<td style="text-align:center"></td>
<td style="text-align:center">$\overset{\underset{\mathrm{def}}{}}{=}$</td>
<td style="text-align:center"></td>
<td>$$</td>
<td></td>
</tr>
<tr>
<td style="text-align:center">$\sim$</td>
<td style="text-align:center">\sim</td>
<td style="text-align:center">$\nsim$</td>
<td style="text-align:center">\nsim</td>
<td>$\cong$</td>
<td>\cong</td>
</tr>
<tr>
<td style="text-align:center">$\thicksim$</td>
<td style="text-align:center">\thicksim</td>
<td style="text-align:center">$\backsim$</td>
<td style="text-align:center">\backsim</td>
<td>$\ncong$</td>
<td>\ncong</td>
</tr>
<tr>
<td style="text-align:center">$\simeq$</td>
<td style="text-align:center">\simeq</td>
<td style="text-align:center">$\backsimeq$</td>
<td style="text-align:center">\backsimeq</td>
<td>$\eqsim$</td>
<td>\eqsim</td>
</tr>
<tr>
<td style="text-align:center">$\approx$</td>
<td style="text-align:center">\approx</td>
<td style="text-align:center">$\thickapprox$</td>
<td style="text-align:center">\thickapprox</td>
<td>$\approxeq$</td>
<td>\approxeq</td>
</tr>
<tr>
<td style="text-align:center">$\asymp$</td>
<td style="text-align:center">\asymp</td>
<td style="text-align:center">$\propto$</td>
<td style="text-align:center">\propto</td>
<td>$\varpropto$</td>
<td>\varpropto</td>
</tr>
<tr>
<td style="text-align:center">$&lt;$</td>
<td style="text-align:center">&lt;</td>
<td style="text-align:center">$\nless$</td>
<td style="text-align:center">\nless</td>
<td>$\ll$</td>
<td>\ll</td>
</tr>
<tr>
<td style="text-align:center">$\lll$</td>
<td style="text-align:center">\lll</td>
<td style="text-align:center">$\not\lll$</td>
<td style="text-align:center">\not\lll</td>
<td>$\not\ll$</td>
<td>\not\ll</td>
</tr>
<tr>
<td style="text-align:center">$&gt;$</td>
<td style="text-align:center">&gt;</td>
<td style="text-align:center">$\ngtr$</td>
<td style="text-align:center">\ngtr</td>
<td>$\gg$</td>
<td>\gg</td>
</tr>
<tr>
<td style="text-align:center">$\ggg$</td>
<td style="text-align:center">\ggg</td>
<td style="text-align:center">$\not\ggg$</td>
<td style="text-align:center">\not\ggg</td>
<td>$\not\gg$</td>
<td>\not\gg</td>
</tr>
<tr>
<td style="text-align:center">$\lessdot$</td>
<td style="text-align:center">\lessdot</td>
<td style="text-align:center">$\gtrdot$</td>
<td style="text-align:center">\gtrdot</td>
<td>$\le$</td>
<td>\le</td>
</tr>
<tr>
<td style="text-align:center">$\ge$</td>
<td style="text-align:center">\ge</td>
<td style="text-align:center">$\geq$</td>
<td style="text-align:center">\geq</td>
<td>$\leq$</td>
<td>\leq</td>
</tr>
<tr>
<td style="text-align:center">$\lneq$</td>
<td style="text-align:center">\lneq</td>
<td style="text-align:center">$\leqq$</td>
<td style="text-align:center">\leqq</td>
<td>$\nleq$</td>
<td>\nleq</td>
</tr>
<tr>
<td style="text-align:center">$\nleqq$</td>
<td style="text-align:center">\nleqq</td>
<td style="text-align:center">$\lneqq$</td>
<td style="text-align:center">\lneqq</td>
<td>$\lvertneqq$</td>
<td>\lvertneqq</td>
</tr>
<tr>
<td style="text-align:center">$\gneq$</td>
<td style="text-align:center">\gneq</td>
<td style="text-align:center">$\geqq$</td>
<td style="text-align:center">\geqq</td>
<td>$\ngeq$</td>
<td>\ngeq</td>
</tr>
<tr>
<td style="text-align:center">$\ngeqq$</td>
<td style="text-align:center">\ngeqq</td>
<td style="text-align:center">$\gneqq$</td>
<td style="text-align:center">\gneqq</td>
<td>$\gvertneqq$</td>
<td>\gvertneqq</td>
</tr>
<tr>
<td style="text-align:center">$\lessgtr$</td>
<td style="text-align:center">\lessgtr</td>
<td style="text-align:center">$\lesseqgtr$</td>
<td style="text-align:center">\lesseqgtr</td>
<td>$\lesseqqgtr$</td>
<td>\lesseqqgtr</td>
</tr>
<tr>
<td style="text-align:center">$\gtrless$</td>
<td style="text-align:center">\gtrless</td>
<td style="text-align:center">$\gtreqless$</td>
<td style="text-align:center">\gtreqless</td>
<td>$\gtreqqless$</td>
<td>\gtreqqless</td>
</tr>
<tr>
<td style="text-align:center">$\leqslant$</td>
<td style="text-align:center">\leqslant</td>
<td style="text-align:center">$\nleqslant$</td>
<td style="text-align:center">\nleqslant</td>
<td>$\eqslantless$</td>
<td>\eqslantless</td>
</tr>
<tr>
<td style="text-align:center">$\geqslant$</td>
<td style="text-align:center">\geqslant</td>
<td style="text-align:center">$\ngeqslant$</td>
<td style="text-align:center">\ngeqslant</td>
<td>$\eqslantgtr$</td>
<td>\eqslantgtr</td>
</tr>
<tr>
<td style="text-align:center">$\lesssim$</td>
<td style="text-align:center">\lesssim</td>
<td style="text-align:center">$\lnsim$</td>
<td style="text-align:center">\lnsim</td>
<td>$\lessapprox$</td>
<td>\lessapprox</td>
</tr>
<tr>
<td style="text-align:center">$\gtrsim$</td>
<td style="text-align:center">\gtrsim</td>
<td style="text-align:center">$\gnsim$</td>
<td style="text-align:center">\gnsim</td>
<td>$\gtrapprox$</td>
<td>\gtrapprox</td>
</tr>
<tr>
<td style="text-align:center">$\lnapprox$</td>
<td style="text-align:center">\lnapprox</td>
<td style="text-align:center">$\gnapprox$</td>
<td style="text-align:center">\gnapprox</td>
<td>$\prec$</td>
<td>\prec</td>
</tr>
</tbody>
</table>
<h2 id="几何符号-Geometric-symbols-2"><a class="header-anchor" href="#几何符号-Geometric-symbols-2">.</a>几何符号 Geometric symbols</h2>
<p>在输入 Latex 代码时，要用 $   $ 包含</p>
<table>
<thead>
<tr>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
</tr>
</thead>
<tbody>
<tr>
<td>$\parallel$</td>
<td>\parallel</td>
<td>$\angle$</td>
<td>\angle</td>
<td>$\bigstar$</td>
<td>\bigstar</td>
<td>$\blacktriangle$</td>
<td>\blacktriangle</td>
</tr>
<tr>
<td>$\nparallel$</td>
<td>\nparallel</td>
<td>$\perp$</td>
<td>\perp</td>
<td>$\bigcirc$</td>
<td>\bigcirc</td>
<td>$\blacktriangledown$</td>
<td>\blacktriangledown</td>
</tr>
<tr>
<td>$\shortparallel$</td>
<td>\shortparallel</td>
<td>$\sphericalangle$</td>
<td>\sphericalangle</td>
<td>$\triangle$</td>
<td>\triangle</td>
<td>$\blacktriangleleft$</td>
<td>\blacktriangleleft</td>
</tr>
<tr>
<td>$\nshortparallel$</td>
<td>\nshortparallel</td>
<td>$\measuredangle$</td>
<td>\measuredangle</td>
<td>$\bigtriangleup$</td>
<td>\bigtriangleup</td>
<td>$\blacktriangleright$</td>
<td>\blacktriangleright</td>
</tr>
<tr>
<td>$\Box$</td>
<td>\Box</td>
<td>$61^\circ$</td>
<td>25^\circ</td>
<td>$\bigtriangledown$</td>
<td>\bigtriangledown</td>
<td></td>
<td></td>
</tr>
<tr>
<td>$\blacksquare$</td>
<td>\blacksquare</td>
<td>$\lozenge$</td>
<td>\lozenge</td>
<td>$\vartriangle$</td>
<td>\vartriangle</td>
<td></td>
<td></td>
</tr>
<tr>
<td>$\diamond$</td>
<td>\diamond</td>
<td>$\blacklozenge$</td>
<td>\blacklozenge</td>
<td>$\triangledown$</td>
<td>\triangledown</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="逻辑符号-Logic-symbols-2"><a class="header-anchor" href="#逻辑符号-Logic-symbols-2">.</a>逻辑符号 Logic symbols</h2>
<p>在输入 Latex 代码时，要用 $   $ 包含</p>
<table>
<thead>
<tr>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
<th>显示</th>
<th>Latex</th>
</tr>
</thead>
<tbody>
<tr>
<td>$\because$</td>
<td>\because</td>
<td>$\forall$</td>
<td>\forall</td>
<td>$\And$</td>
<td>\And</td>
</tr>
<tr>
<td>$\therefore$</td>
<td>\therefore</td>
<td>$\exists$</td>
<td>\exists</td>
<td>$\nexists$</td>
<td>\nexists</td>
</tr>
<tr>
<td>$\lor$</td>
<td>\lor</td>
<td>$\vee$</td>
<td>\vee</td>
<td>$\bigvee$</td>
<td>\bigvee</td>
</tr>
<tr>
<td>$\land$</td>
<td>\land</td>
<td>$\wedge$</td>
<td>\wedge</td>
<td>$\bigwedge$</td>
<td>\bigwedge</td>
</tr>
<tr>
<td>$\curlyvee$</td>
<td>\curlyvee</td>
<td>$\curlywedge$</td>
<td>\curlywedge</td>
<td>$\overline{abc}$</td>
<td>\overline{abc}</td>
</tr>
<tr>
<td>$\lnot$</td>
<td>\lnot</td>
<td>$\neg$</td>
<td>\neg</td>
<td>$\bar{abc}$</td>
<td>\bar{abc}</td>
</tr>
<tr>
<td>$\not\operatorname{R}$</td>
<td>\not\operatorname{R}</td>
<td>$\bot$</td>
<td>\bot</td>
<td>$\top$</td>
<td>\top</td>
</tr>
<tr>
<td>$\vdash$</td>
<td>\vdash</td>
<td>$\dashv$</td>
<td>\dashv</td>
<td>$\vDash$</td>
<td>\vDash</td>
</tr>
<tr>
<td>$\Vvdash$</td>
<td>\Vvdash</td>
<td>$\Vdash$</td>
<td>\Vdash</td>
<td>$\models$</td>
<td>\models</td>
</tr>
<tr>
<td>$\nvdash$</td>
<td>\nvdash</td>
<td>$\nVdash$</td>
<td>\nVdash</td>
<td>$\nvDash$</td>
<td>\nvDash</td>
</tr>
<tr>
<td>$\urcorner$</td>
<td>\urcorner</td>
<td>$\ulcorner$</td>
<td>\ulcorner</td>
<td>$\nVDash$</td>
<td>\nVDash</td>
</tr>
<tr>
<td>$\lrcorner$</td>
<td>\lrcorner</td>
<td>$\llcorner$</td>
<td>\llcorner</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>LaTeX</tag>
        <tag>公式</tag>
      </tags>
  </entry>
  <entry>
    <title>VS Code连接MSSQL</title>
    <url>/2021/04/VS-Code%E8%BF%9E%E6%8E%A5MSSQL/</url>
    <content><![CDATA[<h1 id="VS-Code连接MSSQL"><a class="header-anchor" href="#VS-Code连接MSSQL">.</a>VS Code连接MSSQL</h1>
<h2 id="安装-MSSQL-插件"><a class="header-anchor" href="#安装-MSSQL-插件">.</a>安装 MSSQL 插件</h2>
<p>方式一：点击 <a href="https://aka.ms/mssql-marketplace">官方插件下载地址</a> ，再点击那绿色按钮<code>Install</code>会自动跳转到VS Code里的插件下载页。</p>
<p>方式二：在VS Code的插件搜索框搜索<code>SQL</code>，点击进入并安装。</p>
<span id="more"></span>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/VSCode_SQL%E6%8F%92%E4%BB%B6.png?x-oss-process=style/yunying61" alt="插件安装" /></p>
<h2 id="开启远程连接"><a class="header-anchor" href="#开启远程连接">.</a>开启远程连接</h2>
<h3 id="SSMS配置"><a class="header-anchor" href="#SSMS配置">.</a>SSMS配置</h3>
<ol>
<li>
<p>打开 <abbr title="Microsoft SQL Server Management Studio">SSMS</abbr> ，连接到数据库引擎，右键数据库服务器，点击<code>属性</code>。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B1%9E%E6%80%A7.png?x-oss-process=style/yunying61" alt="服务器属性" /></p>
</li>
<li>
<p>点击<code>连接</code>，勾选<code>允许远程连接到此服务器</code>。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/%E5%85%81%E8%AE%B8%E8%BF%9E%E6%8E%A5.png?x-oss-process=style/yunying61" alt="允许连接" /></p>
<hr />
</li>
</ol>
<blockquote>
<p>SQL Server 配置管理器，配置相应协议</p>
</blockquote>
<ol>
<li>
<p>打开<code>配置管理器</code>，路径：<u>C:\Windows\SysWOW64\mmc.exe</u>，或<em>开始  - &gt; 所有应用  - &gt; Microsoft SQL Server 2019  - &gt; SQL Server 2019 配置管理器</em>。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E5%99%A8.png?x-oss-process=style/yunying61" alt="配置管理器" /></p>
</li>
<li>
<p>选择<code>网络配置</code>，双击你要配置远程连接的数据库服务器，双击右侧的<code>TCP/IP</code>协议，选择启用；再点击<code>IP地址</code>，在最下面找到<code>IPALL</code>，设置<code>TCP端口</code>为1433，点击确定。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/%E5%8D%8F%E8%AE%AE%E5%90%AF%E7%94%A8.png?x-oss-process=style/yunying61" alt="协议启用" /></p>
</li>
<li>
<p>点击<code>SQL Server 服务</code>，首先启动<code>SQL Server Browser</code>，并设置启动模式为<code>自动</code>；然后**<code>重启</code>**刚才调整过协议的服务。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/%E6%9C%8D%E5%8A%A1.png?x-oss-process=style/yunying61" alt="服务" /></p>
</li>
<li>
<p>打开<code>高级防火墙设置</code>，路径：<u>C:\WINDOWS\system32\WF.msc</u></p>
</li>
<li>
<p>点击<code>入站规则</code>，再右侧点击<code>新建规则</code>，选择<code>端口</code>。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/%E5%85%A5%E7%AB%99%E8%A7%84%E5%88%99.png?x-oss-process=style/yunying61" alt="入站规则" /></p>
</li>
<li>
<p>选择<code>TCP</code>，下面选择<code>特定本地端口</code>，端口号上面设置的<code>1433</code>。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/%E5%85%A5%E7%AB%99%E7%AB%AF%E5%8F%A3.png?x-oss-process=style/yunying61" alt="入站端口" /></p>
</li>
<li>
<p>接下来，<u>操作</u> 选择<code>允许连接</code>；<u>配置文件</u> 全选；名称可设为<code>SQL Server Port</code>；最后点击完成。</p>
</li>
</ol>
<hr />
<blockquote>
<p>测试</p>
</blockquote>
<p>服务器名称改为<code>localhost</code>，选择<code>SQL Server身份验证</code>，输入账号密码，尝试登录。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/%E6%B5%8B%E8%AF%95%E7%99%BB%E5%BD%95.png?x-oss-process=style/yunying61" alt="测试登录" /></p>
<h2 id="添加连接"><a class="header-anchor" href="#添加连接">.</a>添加连接</h2>
<ol>
<li>在左边的导航栏中选中<code>SQL Server</code>，点击<code>Add Connection</code>，或点击<code>CONNECTIONS</code>右边的加号</li>
</ol>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/%E8%BF%9E%E6%8E%A5.png?x-oss-process=style/yunying61" alt="连接" /></p>
<p>2.输入服务器地址，本地端是<code>localhost</code>。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/localhost.png?x-oss-process=style/yunying61" alt="localhost" /></p>
<p>3.输入数据库的名称，不填则使用默认数据库。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/Database.png?x-oss-process=style/yunying61" alt="Database" /></p>
<p>4.身份验证类型选择<code>SQL Login</code>，直接按回车。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/Login.png?x-oss-process=style/yunying61" alt="Login" /></p>
<p>5.输入用户名，默认用户为<code>sa</code>。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/User.png?x-oss-process=style/yunying61" alt="User" /></p>
<p>6.输入密码。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/Password.png?x-oss-process=style/yunying61" alt="Password" /></p>
<p>7.按“Enter”选择“<code>Yes</code>”是保存密码。 选择“<code>No</code>”，则系统将在每次使用连接配置文件时提示输入密码。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/Save%20Password.png?x-oss-process=style/yunying61" alt="Save Password" /></p>
<p>8.输入链接的别名，可选，可直接回车跳过，缺省则新建的链接名为<code>主机名,数据库名(用户名)</code></p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/display%20name.png?x-oss-process=style/yunying61" alt="display name" /></p>
<blockquote>
<p>官方参数说明</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:left">连接属性</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>服务器名称或ADO连接字符串</strong></td>
<td style="text-align:center">指定 SQL Server 实例名称。 使用 localhost 连接到本地计算机上的 SQL Server 实例。 如果要连接到远程 SQL Server，请输入目标 SQL Server 的名称，或它的 IP 地址。 若要连接到 SQL Server 容器，请指定容器主机的 IP 地址。 如果需要指定端口，请使用逗号将其与名称分开。 例如，对于侦听端口 1401 的服务器，请输入 <code>&lt;servername or IP&gt;,1401</code>。  或者，可以在此处输入数据库的 ADO 连接字符串。</td>
</tr>
<tr>
<td style="text-align:left">“数据库名称”（可选）</td>
<td style="text-align:center">要使用的数据库。 若要连接到默认数据库，请不要在此处指定数据库名称。</td>
</tr>
<tr>
<td style="text-align:left"><strong>身份验证类型</strong></td>
<td style="text-align:center">选择“集成”或“SQL 登录”。</td>
</tr>
<tr>
<td style="text-align:left"><strong>用户名</strong></td>
<td style="text-align:center">如果选择了“SQL 登录”，则输入拥有访问服务器上数据库权限的用户名。</td>
</tr>
<tr>
<td style="text-align:left"><strong>密码</strong></td>
<td style="text-align:center">输入指定用户的密码。</td>
</tr>
<tr>
<td style="text-align:left"><strong>保存密码</strong></td>
<td style="text-align:center">按“Enter”选择“是”并保存密码。 选择“否”，系统将在每次使用连接配置文件时提示输入密码。</td>
</tr>
<tr>
<td style="text-align:left">“配置文件名称”（可选）</td>
<td style="text-align:center">键入连接配置文件的名称，例如 localhost 配置文件。</td>
</tr>
</tbody>
</table>
<h2 id="连接成功"><a class="header-anchor" href="#连接成功">.</a>连接成功</h2>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/%E8%BF%9E%E6%8E%A5%E6%88%90%E5%8A%9F.png?x-oss-process=style/yunying61" alt="连接成功" /></p>
<h2 id="新建SQL查询语句"><a class="header-anchor" href="#新建SQL查询语句">.</a>新建SQL查询语句</h2>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/%E6%96%B0%E5%BB%BA%E6%9F%A5%E8%AF%A2.png?x-oss-process=style/yunying61" alt="新建查询" /></p>
<h2 id="执行SQL语句"><a class="header-anchor" href="#执行SQL语句">.</a>执行SQL语句</h2>
<p>选中语句，并在右上角点击<code>绿色播放按钮</code>。显示查询结果。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/VSC_MSSQL/%E6%89%A7%E8%A1%8C%E8%AF%AD%E5%8F%A5.png?x-oss-process=style/yunying61" alt="执行语句" /></p>
]]></content>
      <categories>
        <category>IT</category>
        <category>网络</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>VSCode</tag>
        <tag>MSSQL</tag>
        <tag>连接</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA启动失败-内部错误</title>
    <url>/2021/07/IDEA%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5-%E5%86%85%E9%83%A8%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<h1 id="IDEA启动失败，内部错误"><a class="header-anchor" href="#IDEA启动失败，内部错误">.</a>IDEA启动失败，内部错误</h1>
<h2 id="症状"><a class="header-anchor" href="#症状">.</a>症状</h2>
<p>IDE 显示**&quot;开始失败**&quot;对话框，但堆栈跟踪和以下文本除外：</p>
<p>内部错误。请向<a href="https://jb.gg/ide/critical-startup-errors">https://jb.gg/ide/critical-startup-errors</a>报告</p>
<span id="more"></span>
<h2 id="原因"><a class="header-anchor" href="#原因">.</a>原因</h2>
<p>此问题有多种可能的原因：插入电源损坏或不兼容、IDE 安装文件损坏、修补程序更新失败、缓存损坏或配置损坏。</p>
<p>可能很难从异常堆栈跟踪中猜出根部案例。</p>
<h2 id="解决方法"><a class="header-anchor" href="#解决方法">.</a>解决方法</h2>
<p>请逐个尝试以下步骤，直到问题得到解决：</p>
<ol>
<li>
<p>如果您得到 “<strong>java.net.BindException: Address already in use: bind</strong>” 异常，请参阅<a href="https://youtrack.jetbrains.com/issue/IDEA-238995">IDEA-238995</a>的解决方法。</p>
<blockquote>
<p>也可在管理员模式的命令提示符中运行以下命令（cmd.exe）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net stop winnat</span><br><span class="line">//然后打开你的IDEA，再执行下面的代码</span><br><span class="line">net start winnat</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li>
<p>删除<a href="https://intellij-support.jetbrains.com/hc/en-us/articles/206544519">第三方插件目录</a>（在用户的家庭目录中，取决于操作系统和 IDE 版本。请注意，默认位置在 2020.1 版本中已更改）。您也可以将插件进行拆分，以查找有问题的插件，并且只删除该插件，保留工作插件。</p>
</li>
<li>
<p>从官方网站再次下载并安装 IDE。您的设置和项目将被保留。在 Linux 上从 <em>.tar.gz</em> 包安装时，请务必将包装解包到新的空目录中，而不是在现有安装的根目录。</p>
</li>
<li>
<p>删除IDE系统<a href="https://intellij-support.jetbrains.com/hc/en-us/articles/206544519">目录</a>。<code>idea.system.path</code></p>
</li>
<li>
<p>在大多数情况下，问题应该已经解决，但如果 IDE 仍未从相同的错误对话开始，您也可以尝试备份和删除<a href="https://intellij-support.jetbrains.com/hc/en-us/articles/206544519">设置目录</a>（）。<code>idea.config.path</code></p>
</li>
<li>
<p>使用完全异常堆栈跟踪<a href="https://intellij-support.jetbrains.com/hc/requests/new">联系支持</a>（您可以从错误对话框中复制/粘贴它）。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>IT</category>
        <category>问题解决</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
        <tag>错误</tag>
        <tag>失败</tag>
      </tags>
  </entry>
  <entry>
    <title>网络唤醒 - 远程唤醒电脑WOL(Wake On LAN)</title>
    <url>/2021/08/%E7%BD%91%E7%BB%9C%E5%94%A4%E9%86%92-%E8%BF%9C%E7%A8%8B%E5%94%A4%E9%86%92%E7%94%B5%E8%84%91WOL-Wake-On-LAN/</url>
    <content><![CDATA[<h1 id="前言-3"><a class="header-anchor" href="#前言-3">.</a>前言</h1>
<p>最近在家里新组装了一台机子，然后突发奇想，如果我在外地要用这个机子，虽然有远程桌面，但电脑都没开，怎么远程桌面呢？所以我就想搞一个远程开机，这样就可以不需要叫别人的情况下，自己控制电脑开机。</p>
<span id="more"></span>
<h2 id="前提条件"><a class="header-anchor" href="#前提条件">.</a>前提条件</h2>
<ul>
<li><strong>主板支持</strong>，现在的主板基本都支持，所以这方面可以不用担心；</li>
<li>电源通电，<strong>网卡带电</strong>（表现为网线接口处关机状态下也亮灯，也可能不亮，视具体情况而定）；</li>
<li><strong>正常关机</strong>（S5状态），非正常关机可能会唤醒失败，所以如果断电导致关机的话，可能需要手动开启一遍电脑；</li>
<li>被唤醒的电脑<strong>必须连网</strong>，或者路由器；</li>
</ul>
<h1 id="唤醒工具"><a class="header-anchor" href="#唤醒工具">.</a>唤醒工具</h1>
<p>先介绍一下唤醒工具，推荐使用 <a href="https://pan.baidu.com/link/zhihu/7NhXzWuVhrizStolJ1d1Ni1kV2cmNGewZkJ0==#list/path=%2F">Wake On LAN</a> ，它有PC版、手机版、微信小程序版（直接搜WakeOnLan）</p>
<h1 id="BIOS设置"><a class="header-anchor" href="#BIOS设置">.</a>BIOS设置</h1>
<p>由于没有公网IP、不清楚路由器内网穿透怎么搞，本篇暂时搁置更新。。。😑我也很无奈😕</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>Windows</category>
        <category>网络</category>
        <category>软件</category>
        <category>技巧</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>网络唤醒</tag>
        <tag>远程唤醒</tag>
        <tag>WOL</tag>
      </tags>
  </entry>
  <entry>
    <title>基于WSL2的Windows下Ubuntu图形化系统</title>
    <url>/2021/09/%E5%9F%BA%E4%BA%8EWSL2%E7%9A%84Windows%E4%B8%8BUbuntu%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="前言-4"><a class="header-anchor" href="#前言-4">.</a>前言</h1>
<p>WSL是微软推出的windows的linux子系统，目的就是为了在windows平台上更方便的运行 linux。相比于VMware这样的虚拟机产品，WSL有许多优势：</p>
<ol>
<li><strong>方便</strong>。WSL操作Linux系统像windows上的cmd、PowerShell一样，直接操作其 <em>Terminal终端</em> 。只需要在开始菜单，单击其图标就可以打开一个窗口运行linux命令行工具，这是VMware这样的虚拟机产品想都不敢想的。</li>
<li><strong>启动速度快</strong>。基本保持在5秒内就启动了。而VMware虚拟机，要先启动虚拟机产品，然后在虚拟机产品里面选择 Linux 分发版系统，点击启动按钮，等待系统自动，这时间相比，浪费太多了。</li>
<li><strong>占用少</strong>。虽然WSL2还是在虚拟机上运行的Linux内核，但是在资源占用和性能这方面，无论是在内存占用还是在CPU消耗，都甩一般虚拟机产品几条街。用微软的话说就是：<br />
WSL 2 使用最新、最强大的虚拟化技术在轻量级实用工具虚拟机 (VM) 中运行 Linux 内核。 但是，WSL 2 不是传统的 VM 体验。</li>
<li><strong>文件互通</strong>。WSL上的Linux与宿主Windows文件系统互通，WSL可以直接访问Window系统上的文件，而Windows系统也可以直接对Linux系统进行各种文件操作。</li>
</ol>
<span id="more"></span>
<h2 id="WSL的问题"><a class="header-anchor" href="#WSL的问题">.</a>WSL的问题</h2>
<p>WSL在使用上的问题大致有以下几个：</p>
<ol>
<li>没有图形界面。WSL运行Linux命令行很方便，但是目前还不能直接打开Linux图形界面。目前可以通过远程桌面的方式访问图形界面。</li>
<li>C盘占用。按照一般的安装方法，默认是将子系统安装在C盘，C盘占用太大，可以通过官网上介绍的方法将子系统安装在其他盘。</li>
<li>不支持systemd。wsl默认是没有systemd服务，需要自行安装并配置，后面会介绍如何安装。</li>
<li>跨OS文件操作慢。这个文件操作慢是相对于WSL1来说的，WSL由于是用了VM，操作宿主系统上的文件难免会慢。<a href="https://blog.csdn.net/qq_43878324/article/details/113636451">解决办法</a></li>
</ol>
<h1 id="开始安装"><a class="header-anchor" href="#开始安装">.</a>开始安装</h1>
<p>微软官方文档：<a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10">适用于 Linux 的 Windows 子系统安装指南 (Windows 10) </a></p>
<h2 id="Windows开启功能支持"><a class="header-anchor" href="#Windows开启功能支持">.</a>Windows开启功能支持</h2>
<p>需要先启用“适用于 Linux 的 Windows 子系统”可选功能，然后才能在 Windows 上安装 Linux 分发。</p>
<p>打开 PowerShell 命令行并输入以下命令：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:Microsoft<span class="literal">-Windows-Subsystem-Linux</span> /all /norestart</span><br></pre></td></tr></table></figure>
<hr />
<p>安装 WSL 2 之前，必须启用“虚拟机平台”可选功能。 计算机需要[BIOS虚拟化功能](<a href="https://cn.bing.com/search?q=bios%E8%99%9A%E6%8B%9F%E5%8C%96&amp;form=ANNTH1&amp;refig=f67cefd7bf7b436c8927d729b66691f7">bios虚拟化 - 国内版 Bing</a>)才能使用此功能。</p>
<p>打开 PowerShell 命令行并输入以下命令：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:VirtualMachinePlatform /all /norestart</span><br></pre></td></tr></table></figure>
<h2 id="安装Ubuntu"><a class="header-anchor" href="#安装Ubuntu">.</a>安装Ubuntu</h2>
<p>在 Microsoft Store 中搜索 <a href="https://www.microsoft.com/store/productId/9NBLGGH4MSV6">Ubuntu</a></p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/WSL/%E5%BE%AE%E8%BD%AF%E5%95%86%E5%BA%97_Ubuntu.png?x-oss-process=style/yunying61" alt="" /></p>
<p>点击并安装第一个 <strong>Ubuntu</strong></p>
<h2 id="安装GWSL"><a class="header-anchor" href="#安装GWSL">.</a>安装GWSL</h2>
<p>在 Microsoft Store 中搜索 <a href="https://www.microsoft.com/store/productId/9NL6KD1H33V3">GWSL</a></p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/WSL/%E5%BE%AE%E8%BD%AF%E5%95%86%E5%BA%97_GWSL.png?x-oss-process=style/yunying61" alt="" /></p>
<p>点击并安装第一个 <strong>GWSL</strong></p>
<p>启动 GWSL ，在右下角通知图标栏中找到 GWSL ，对其右键，点击设置 GWSL：</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/WSL/GWSL_%E6%A8%A1%E5%BC%8F%E8%AE%BE%E7%BD%AE.png?x-oss-process=style/yunying61" alt="" /></p>
<h2 id="使用WSL2"><a class="header-anchor" href="#使用WSL2">.</a>使用WSL2</h2>
<ol>
<li>
<p>下载Linux 内核更新包</p>
<p><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">适用于 x64 计算机的 WSL2 Linux 内核更新包</a></p>
</li>
<li>
<p>运行更新包</p>
</li>
<li>
<p>设置 WSL 2 为默认体系结构，打开 PowerShell 命令行并输入以下命令</p>
 <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl <span class="literal">--set-default-version</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>可先检查分配给每个已安装的 Linux 分发版的 WSL 版本，打开 PowerShell 命令行并输入以下命令：</p>
 <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl <span class="literal">--list</span> <span class="literal">--verbose</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>如果 Ubuntu 的WSL版本为1，则将其设置为受 WSL2 版本支持，打开 PowerShell 命令行并输入以下命令：</p>
 <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl <span class="literal">--set-version</span> Ubuntu <span class="number">2</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="安装Windows-Terminal（可选）"><a class="header-anchor" href="#安装Windows-Terminal（可选）">.</a>安装Windows Terminal（可选）</h2>
<p>在 Microsoft Store 中搜索并安装  <a href="https://aka.ms/terminal">Windows Terminal</a> 。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/WSL/%E5%BE%AE%E8%BD%AF%E5%95%86%E5%BA%97_Windows%20Terminal.png?x-oss-process=style/yunying61" alt="" /></p>
<p>点击并安装第一个 <strong>Windows Terminal</strong></p>
<h2 id="打开并使用-Ubuntu"><a class="header-anchor" href="#打开并使用-Ubuntu">.</a>打开并使用 Ubuntu</h2>
<p>到目前为止就可以正常使用 Ubuntu 命令行系统了，按下 Win 键，找到刚刚安装的 Ubuntu 打开，第一次启动，稍等片刻，以后都是5秒内就可以用了。接下来，设置 Linux 用户信息。</p>
<p><img data-src="https://docs.microsoft.com/zh-cn/windows/wsl/media/ubuntuinstall.png" alt="ubuntuinstall" /></p>
<p>输入用户名，然后输入并确认两遍密码。</p>
<p>对于 Ubuntu，请使用 命令 <code>sudo apt update &amp;&amp; sudo apt upgrade</code> ，对 Ubuntu 进行初次更新。</p>
<h1 id="为-Ubuntu-安装图形化界面"><a class="header-anchor" href="#为-Ubuntu-安装图形化界面">.</a>为 Ubuntu 安装图形化界面</h1>
<h2 id="为WSL2上的-Ubuntu-启用systemd支持"><a class="header-anchor" href="#为WSL2上的-Ubuntu-启用systemd支持">.</a>为WSL2上的 Ubuntu 启用systemd支持</h2>
<p>参考该<a href="https://www.5axxw.com/wiki/content/k34hu0">教程</a></p>
<ol>
<li>
<p>需要安装<code>git</code>才能进行接下来的操作。所以先按下 Win 键，找到刚刚安装的 Ubuntu 打开</p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt install -y git</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>运行脚本和命令</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo git <span class="built_in">clone</span> https://github.com/DamionGans/ubuntu-wsl2-systemd-script.git</span><br><span class="line"><span class="built_in">cd</span> ubuntu-wsl2-systemd-script/</span><br><span class="line">bash ubuntu-wsl2-systemd-script.sh</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>然后在 PowerShell 命令行并输入<code>wsl --shutdown</code>重新启动 Ubuntu应用 并尝试运行<code>systemctl</code></p>
<p>如果没有得到错误并看到单元列表，那么脚本就起作用了，就可以使用<code>systemctl</code>。</p>
</li>
</ol>
<h2 id="安装Gnome图形界面"><a class="header-anchor" href="#安装Gnome图形界面">.</a>安装Gnome图形界面</h2>
<ol>
<li>
<p>在 Ubuntu 中，输入以下命令安装 Ubuntu Desktop ：</p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt install -y ubuntu-desktop</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>安装完后，输入<code>sudo vi ~/.bashrc</code>，在文件末尾按 “i” 键添加：</p>
</li>
</ol>
  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> DISPLAY=$(grep -m 1 nameserver /etc/resolv.conf | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>):0.0</span><br><span class="line"><span class="built_in">export</span> XDG_SESSION_TYPE=x11</span><br></pre></td></tr></table></figure>
<p>按 “Esc” 后输入<code>:wq</code>保存并退出，并使用<code>source ~/.bashrc</code>命令应用修改。</p>
<h2 id="试运行图形化界面"><a class="header-anchor" href="#试运行图形化界面">.</a>试运行图形化界面</h2>
<p>之后每次启动图形化桌面的步骤为：</p>
<ol>
<li>在 Windows 中启动 GWSL</li>
<li>在 Windows 中启动 Ubuntu</li>
</ol>
<p>在Ubuntu中输入</p>
<p><code>gnome-session</code></p>
<p>稍等片刻就可以在 GWSL 打开的窗口中看到图形化界面</p>
<h1 id="使用-2"><a class="header-anchor" href="#使用-2">.</a>使用</h1>
<h2 id="图形界面汉化"><a class="header-anchor" href="#图形界面汉化">.</a>图形界面汉化</h2>
<p>网上有很多，我就不单独再做了，可以参考这个<a href="https://www.jb51.net/os/Ubuntu/298601.html">方法</a></p>
<h2 id="基本-WSL-命令"><a class="header-anchor" href="#基本-WSL-命令">.</a>基本 WSL 命令</h2>
<p>查看linux版本</p>
<p><code>wsl -l</code></p>
<p>停止linux系统</p>
<p><code>wsl -t Ubuntu</code></p>
<p>导出系统</p>
<p><code>wsl --export Ubuntu C:\Ubuntu.tar</code></p>
<p>删除系统</p>
<p><code>wsl --unregister Ubuntu</code></p>
<p>导入系统</p>
<p><code> wsl --import Ubuntu C:\\WSL  C:\\Ubuntu.tar</code></p>
<p>通过 WSL 安装的 Linux 分发版最好使用 PowerShell 或 Windows 命令提示符 (CMD) 。 一些基本命令包括：</p>
<ul>
<li><a href="https://docs.microsoft.com/zh-cn/windows/wsl/wsl-config#list-distributions">列出已安装的分发</a>：<code>wsl -l -v</code></li>
<li><a href="https://docs.microsoft.com/zh-cn/windows/wsl/wsl-config#unregister-and-reinstall-a-distribution">取消注册并重新安装分发</a>：<code>wsl --unregister &lt;DistributionName&gt;</code></li>
<li><a href="https://docs.microsoft.com/zh-cn/windows/wsl/wsl-config#run-as-a-specific-user">以特定用户运行</a>： <code>wsl -u &lt;Username&gt;</code></li>
<li><a href="https://docs.microsoft.com/zh-cn/windows/wsl/wsl2-mount-disk">装载磁盘</a>：若要查看中可用的磁盘 <code>wmic diskdrive list brief</code> ；若要使用通过上一命令发现的路径装载磁盘 <code>wsl --mount &lt;DiskPath&gt;</code></li>
<li><a href="https://docs.microsoft.com/zh-cn/windows/wsl/wsl2-mount-disk#unmount-the-disk">卸载磁盘</a> ：<code>wsl --unmount &lt;DiskPath&gt;</code></li>
</ul>
<h2 id="系统之间文件系统的相互访问"><a class="header-anchor" href="#系统之间文件系统的相互访问">.</a>系统之间文件系统的相互访问</h2>
<p><a href="https://docs.microsoft.com/zh-cn/windows/wsl/wsl2-mount-disk#mount-a-vhd-in-wsl">https://docs.microsoft.com/zh-cn/windows/wsl/wsl2-mount-disk#mount-a-vhd-in-wsl</a></p>
<p><strong>父windows系统访问子linux系统的文件：</strong><br />
直接在文件资源管理器输入<code>\\wsl$</code>就可以访问到wsl子系统的文件系统：</p>
<p>WIN+R输入<code>\\wsl$</code></p>
<p>此外，还可以将其映射为网络驱动器，这样就可以像访问C盘、D盘一样访问 Ubuntu 的文件系统了</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/WSL/Ubuntu_%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6%E5%A4%B9.png?x-oss-process=style/yunying61" alt="" /></p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/WSL/Ubuntu_%E6%98%A0%E5%B0%84%E6%88%90%E5%8A%9F.png?x-oss-process=style/yunying61" alt="image-20210911150604540" /></p>
<p><strong>linux子系统访问父windows系统的文件：</strong><br />
直接<code>cd /mnt</code>就可以看到c/、d/两个文件夹，对应的就是电脑上的C盘、D盘，cd进去就可以访问对应windows上的文件</p>
<h2 id="跨文件系统工作"><a class="header-anchor" href="#跨文件系统工作">.</a>跨文件系统工作</h2>
<p><a href="https://docs.microsoft.com/zh-cn/windows/wsl/filesystems#run-linux-tools-from-a-windows-command-line">跨 Windows 和 Linux 文件系统工作</a></p>
<p>建议不要跨操作系统使用文件，除非有这么做的特定原因。 若想获得最快的性能速度，请将文件存储在 WSL 文件系统中，前提是在 Linux 命令行（Ubuntu、OpenSUSE 等）中工作。 如果使用 Windows 命令行（PowerShell、命令提示符）工作，请将文件存储在 Windows 文件系统中。</p>
<p>此外，许多命令在 Windows Linux 之间可互操作。 下面是几个示例：</p>
<ul>
<li>
<p>从 Windows 命令行（如 PowerShell）运行 Linux 工具（如 grep ）：<br />
打开 PowerShell</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 在 C:\temp&gt; 目录下</span><br><span class="line">wsl ls -la</span><br><span class="line">// 显示 C:\temp 目录的内容</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>混合使用 Linux和 Windows 命令：<br />
若要使用 Linux 命令 <code>ls -la</code> 列出文件，并使用 PowerShell 命令 <code>findstr</code> 来筛选包含“git”的单词的结果，请组合这些命令：</p>
  <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl <span class="built_in">ls</span> <span class="literal">-la</span> | findstr <span class="string">&quot;git&quot;</span></span><br></pre></td></tr></table></figure>
<p>若要使用 PowerShell 命令 <code>dir</code> 列出文件，并使用 Linux 命令 <code>grep</code> 来筛选包含“git”的单词的结果，请组合这些命令：</p>
  <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> | wsl grep git</span><br></pre></td></tr></table></figure>
<p>若要使用 Linux 命令 <code>ls -la</code> 列出文件，并使用 PowerShell 命令 <code>&gt; out.txt</code> 将该列表输出到名为“out.txt”的文本文件，请组合这些命令：</p>
  <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl <span class="built_in">ls</span> <span class="literal">-la</span> &gt; out.txt</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Ubuntu</tag>
        <tag>WSL</tag>
        <tag>虚拟机</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows远程桌面无法访问0x204（偏门问题）已解决</title>
    <url>/2022/01/Windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE0x204%EF%BC%88%E5%81%8F%E9%97%A8%E9%97%AE%E9%A2%98%EF%BC%89%E5%B7%B2%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h1 id="Windows远程桌面-无法访问"><a class="header-anchor" href="#Windows远程桌面-无法访问">.</a>Windows远程桌面 无法访问</h1>
<h2 id="问题描述-2"><a class="header-anchor" href="#问题描述-2">.</a>问题描述</h2>
<p>这是我尝试用平板通过局域网连接我笔记本电脑时出现的问题。我在网上找了很久，也找了很多种解决方案，可是就是无法解决。</p>
<span id="more"></span>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Remote_Desktop/0x204.jpg?x-oss-process=style/yunying61" alt="0x204" /></p>
<h2 id="问题探究"><a class="header-anchor" href="#问题探究">.</a>问题探究</h2>
<p>上图翻译过来的意思是：无法连接，我们<u>无法连接</u>到远程PC。确保PC<u>打开并连接到网络</u>，并<u>启用了远程访问</u>。错误代码:0x204</p>
<p>首先是，“无法连接”，不用多说，就是远程桌面访问失败；“打开并连接到网络”，说明平板通过RDP协议和3389端口并未成功连接到笔记本电脑；“启用远程访问”，这是网上绝大部分解决方法所针对的问题，如果这个都没设置好，那后面的就不用说了。</p>
<p>我经过大量的测试（各种设备，内外网等），最终把目光锁定在3389端口上。微软客服提到了可能是外部安全软件拦截了端口访问，我去我的火绒上看了一下，确实我设置了拦截规则，可是却是“放行”。说明不是火绒的问题。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Remote_Desktop/%E7%81%AB%E7%BB%92_IP%E5%8D%8F%E8%AE%AE%E6%8E%A7%E5%88%B6.png?x-oss-process=style/yunying61" alt="火绒_IP协议控制" /></p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Remote_Desktop/%E7%81%AB%E7%BB%92_%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97.png?x-oss-process=style/yunying61" alt="火绒_安全日志" /></p>
<p>后来，我无意间想到<code>本地安全策略</code>上，我怀疑是不是这上面设置了什么东西拦截了3389端口呢？然后一个一个找，终于在倒数第二个的<code>IP安全策略，在本地计算机</code>上发现了问题所在！</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Remote_Desktop/%E6%9C%AC%E5%9C%B0%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5.png?x-oss-process=style/yunying61" alt="本地安全策略" /></p>
<h2 id="问题解决"><a class="header-anchor" href="#问题解决">.</a>问题解决</h2>
<p>关闭方法：右键，点击<code>未分配</code>。或双击其进入子界面，取消勾选<code>3389端口筛选器</code>，并确定应用。</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Remote_Desktop/3389%E7%AB%AF%E5%8F%A3%E9%99%90%E5%88%B6.png?x-oss-process=style/yunying61" alt="3389端口限制" /></p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Remote_Desktop/3389%E7%AB%AF%E5%8F%A3%E9%99%90%E5%88%B6_%E5%B1%9E%E6%80%A7.png?x-oss-process=style/yunying61" alt="3389端口限制_属性" /></p>
<p>这两个操作皆有效果，亦可同时操作。</p>
<p>至此，问题解决，可以进行远程桌面了。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>网络</category>
        <category>软件</category>
        <category>技巧</category>
        <category>问题解决</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>问题解决</tag>
        <tag>远程桌面</tag>
        <tag>516</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-Next主题-相关配置</title>
    <url>/2022/03/Hexo-Next%E4%B8%BB%E9%A2%98-%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="取消“全文预览”，启用“阅读全文”"><a class="header-anchor" href="#取消“全文预览”，启用“阅读全文”">.</a>取消“全文预览”，启用“阅读全文”</h2>
<p>在md文章中任意位置插入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure>
<p>位于其下方的内容将不在首页<code>“全文预览”</code>，而是采用<code>“阅读全文”</code>的按钮打开文章，阅读全部内容。</p>
<span id="more"></span>
<h2 id="居中标签"><a class="header-anchor" href="#居中标签">.</a>居中标签</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/#Centered-Quote">Tag Plugins | NexT</a></p>
<p>此标记将生成一对引号，位于前后两行，并且引用的文本位于中间行并居中显示。使用居中引号时，如果我们有多行文本，并且每行都有不同的长度，则引号不会是对称的，因此建议在只有单行文本时使用。例如，在文章之前或所有文章之后做一个总结。</p>
<h3 id="用法-6"><a class="header-anchor" href="#用法-6">.</a>用法</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% centerquote %&#125;Something&#123;% endcenterquote %&#125;</span><br><span class="line">或</span><br><span class="line">&#123;% cq %&#125;Something&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center">
<p>代码优雅，核心简单</p>

</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% cq %&#125;代码优雅，核心简单&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="按钮标签"><a class="header-anchor" href="#按钮标签">.</a>按钮标签</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/button.html#">Button | NexT</a></p>
<h3 id="用法-7"><a class="header-anchor" href="#用法-7">.</a><strong>用法</strong></h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% button url, text, icon [class], [title] %&#125;</span><br><span class="line"><span class="comment">&lt;!-- Tag Alias 标签别名 --&gt;</span></span><br><span class="line">&#123;% btn url, text, icon [class], [title] %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>url</code>：URL 的绝对或相对路径。</li>
<li><code>text</code>：按钮文本。如果未指定<code>图标</code>，则为必需。</li>
<li><code>icon</code>：<strong>Font Awesome</strong> 图标名称。如果未指定<code>文本</code>，则为必需。</li>
<li><code>[class]</code>：<em>可选参数</em>。 <strong>Font Awesome</strong> 类： | | | | |<code>fa-fw``fa-lg``fa-2x``fa-3x``fa-4x``fa-5x</code></li>
<li><code>[title]</code>：<em>可选参数</em>。鼠标悬停时的工具提示。</li>
</ul>
<h3 id="例子"><a class="header-anchor" href="#例子">.</a><strong>例子</strong></h3>
<p>​	<a class="btn" href="#按钮标签">文本</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% button #按钮标签, 文本 %&#125;</span><br></pre></td></tr></table></figure>
<p>​	<a class="btn" href="#例子" title="提示">文本与提示</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% btn #例子, 文本与提示,, 提示 %&#125;</span><br></pre></td></tr></table></figure>
<h4 id="具有相对-URL-的按钮"><a class="header-anchor" href="#具有相对-URL-的按钮">.</a>具有相对 URL 的按钮</h4>
<div class="text-center"><a class="btn" href="#" title="Previous Chapter (Full Image)"><i class="fa fa-arrow-left fa-fw fa-lg"></i>Previous Chapter</a> <a class="btn" href="#" title="Next Chapter (Label)"><i class="fa fa-arrow-right fa-fw fa-lg"></i>Next Chapter</a></div>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="line">&#123;% btn #, Previous Chapter, arrow-left fa-fw fa-lg, Previous Chapter (Full Image) %&#125;</span><br><span class="line">&#123;% btn #, Next Chapter, arrow-right fa-fw fa-lg, Next Chapter (Label) %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="图片组"><a class="header-anchor" href="#图片组">.</a>图片组</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/group-pictures.html">Group Pictures | NexT </a></p>
<h3 id="用法-8"><a class="header-anchor" href="#用法-8">.</a><strong>用法</strong></h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% grouppicture [number]-[layout] %&#125;&#123;% endgrouppicture %&#125;</span><br><span class="line"><span class="comment">&lt;!-- Tag Alias 标签别名 --&gt;</span></span><br><span class="line">&#123;% gp [number]-[layout] %&#125;&#123;% endgp %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p><code>[number]</code>：*可选参数。*要添加到组图片中的图片总数。</p>
</li>
<li>
<p><code>[layout]</code>：*可选参数。*布局的索引，可以根据下图获得。</p>
</li>
</ul>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/group-picture-1.png" alt="" /></p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/group-picture-2.png" alt="" /></p>
<h3 id="例子-2"><a class="header-anchor" href="#例子-2">.</a><strong>例子</strong></h3>
<p>例如，有3张图，先设置图片总数为3，再选用 <strong>“3张图布局”</strong> 中的第2种布局，代码如下：</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/next.svg" alt="" /></div><div class="group-picture-column"><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/next.svg" alt="" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/next.svg" alt="" /></div></div></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% grouppicture 3-2 %&#125;</span><br><span class="line">![](<span class="link">/images/next.svg</span>)</span><br><span class="line">![](<span class="link">/images/next.svg</span>)</span><br><span class="line">![](<span class="link">/images/next.svg</span>)</span><br><span class="line">&#123;% endgrouppicture %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="标签（文本高亮）"><a class="header-anchor" href="#标签（文本高亮）">.</a>标签（文本高亮）</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/label.html">Label | NexT </a></p>
<h3 id="用法-9"><a class="header-anchor" href="#用法-9">.</a><strong>用法</strong></h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% label [class]@text %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>[class]</code>：*可选参数。*支持的值：default | primary | success | info | warning | danger<br />
如果未指定，则将使用浏览器的默认样式，该样式在不同的浏览器中可能会有所不同。</li>
<li><code>text</code>：可以指定带或不带空格</li>
</ul>
<h3 id="例子-3"><a class="header-anchor" href="#例子-3">.</a><strong>例子</strong></h3>
<p>Lorem <mark class="label ">ipsum</mark> <mark class="label primary">dolor sit</mark> amet, consectetur <mark class="label success">adipiscing elit,</mark> sed <mark class="label info">do eiusmod</mark> tempor incididunt ut labore et dolore magna aliqua.</p>
<p>Ut enim <em><mark class="label warning">ad</mark></em> minim veniam, quis <strong><mark class="label danger">nostrud</mark></strong> exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
<p>Duis aute irure dolor in reprehenderit in voluptate <s><mark class="label default">velit</mark></s> <mark>esse</mark> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">Lorem &#123;% label @ipsum %&#125; &#123;% label primary@dolor sit %&#125; amet, consectetur &#123;% label success@adipiscing elit, %&#125; sed &#123;% label info@do eiusmod %&#125; tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line"></span><br><span class="line">Ut enim *&#123;% label warning @ad %&#125;* minim veniam, quis **&#123;% label danger@nostrud %&#125;** exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</span><br><span class="line"></span><br><span class="line">Duis aute irure dolor in reprehenderit in voluptate ~~&#123;% label default @velit %&#125;~~ <span class="tag">&lt;<span class="name">mark</span>&gt;</span>esse<span class="tag">&lt;/<span class="name">mark</span>&gt;</span> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>
<h2 id="链接网格"><a class="header-anchor" href="#链接网格">.</a>链接网格</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/link-grid.html">Link Grid | NexT </a></p>
<h3 id="用法-10"><a class="header-anchor" href="#用法-10">.</a><strong>用法</strong></h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% linkgrid [image] [delimiter] [comment] %&#125;&#123;% endlinkgrid %&#125;</span><br><span class="line"><span class="comment">&lt;!-- Tag Alias --&gt;</span></span><br><span class="line">&#123;% lg [image] [delimiter] [comment] %&#125;&#123;% endlg %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>[image]</code>：*可选参数。*默认图像网址。</li>
<li><code>[delimiter]</code>：*可选参数。*如果给定了可选的分隔符参数，则将其解释为每行中项的分隔符。</li>
<li><code>[comment]</code>：*可选参数。*如果给出了可选的注释参数，则将其解释为注释掉一行的符号。</li>
</ul>
<h2 id="图表、流程图（Mermaid）"><a class="header-anchor" href="#图表、流程图（Mermaid）">.</a>图表、流程图（Mermaid）</h2>
<p>以类似于标记的方式从文本中生成图表和流程图</p>
<p>Mermaid 是一个基于 Javascript 的图表绘制工具，通过解析类 Markdown 的文本语法来实现图表的创建和动态修改。Mermaid 诞生的主要目的是让文档的更新能够及时跟上开发进度。</p>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/mermaid.html">Mermaid | NexT</a> ，GitHub： <a href="https://github.com/mermaid-js/mermaid">mermaid</a> 官方中文介绍： <a href="https://github.com/mermaid-js/mermaid/blob/develop/README.zh-CN.md">mermaid/README.zh-CN.md </a></p>
<hr />
<p>个人的第一印象：用法很复杂，在我看来还不如用其他软件绘图，然后导出图片，再传到博客上。</p>
<p>第一感觉：</p>
<ul>
<li>有点复杂</li>
<li>非常清晰的格式化；</li>
<li>无法直接被爬取 “流程图” ；</li>
<li>显示清楚；</li>
<li>代码党福音（不用考虑绘图的琐事）。</li>
</ul>
<p>官方表述：</p>
<ul>
<li>减少绘图和编写文档的时间</li>
<li>提高了内容的智能化和可重用性</li>
<li>易于维护和更新</li>
</ul>
<blockquote>
<p>本博客已启用此功能，以后或许会用吧</p>
</blockquote>
<h3 id="用法-11"><a class="header-anchor" href="#用法-11">.</a><strong>用法</strong></h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid type %&#125;</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="例子-4"><a class="header-anchor" href="#例子-4">.</a><strong>例子</strong></h3>
<pre class="mermaid">
graph TD
A[Hard] --&gt;|Text| B(Round)
B --&gt; C{Decision}
C --&gt;|One| D[Result 1]
C --&gt;|Two| E[Result 2]
</pre>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid graph TD %&#125;</span><br><span class="line">A[Hard] --&gt;|Text| B(Round)</span><br><span class="line">B --&gt; C&#123;Decision&#125;</span><br><span class="line">C --&gt;|One| D[Result 1]</span><br><span class="line">C --&gt;|Two| E[Result 2]</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>
<pre class="mermaid">
pie
&quot;Dogs&quot; : 386
&quot;Cats&quot; : 85
&quot;Rats&quot; : 15
</pre>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid pie %&#125;</span><br><span class="line">&quot;Dogs&quot; : 386</span><br><span class="line">&quot;Cats&quot; : 85</span><br><span class="line">&quot;Rats&quot; : 15</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="批注（提示、注意）"><a class="header-anchor" href="#批注（提示、注意）">.</a>批注（提示、注意）</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/note.html">Note (Bootstrap Callout) | NexT</a></p>
<h3 id="用法-12"><a class="header-anchor" href="#用法-12">.</a><strong>用法</strong></h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] [summary] %&#125;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>[class]</code>：*可选参数。*支持的值：default | primary | success | info | warning | danger.</li>
<li><code>[no-icon]</code>：*可选参数。*禁用批注中的图标。</li>
<li><code>[summary]</code>：<em>可选参数。</em> 可选的隐藏摘要。</li>
</ul>
<p>所有参数都是可选的。</p>
<h3 id="例子-5"><a class="header-anchor" href="#例子-5">.</a><strong>例子</strong></h3>
<div class="note "><h4 id="页眉"><a class="header-anchor" href="#页眉">.</a>页眉</h4>
<p>（不带定义类样式）</p>
</div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note %&#125;</span><br><span class="line"><span class="section">#### 页眉</span></span><br><span class="line">（不带定义类样式）</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note info"><h4 id="信息标题"><a class="header-anchor" href="#信息标题">.</a>信息标题</h4>
<p><strong>欢迎来到</strong> <a href="https://hexo.io">Hexo!</a></p>
</div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note info %&#125;</span><br><span class="line"><span class="section">#### 信息标题</span></span><br><span class="line"><span class="strong">**欢迎来到**</span> [<span class="string">Hexo!</span>](<span class="link">https://hexo.io</span>)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note warning"><h4 id="警告标头"><a class="header-anchor" href="#警告标头">.</a>警告标头</h4>
<p><strong>Welcome</strong> to <a href="https://hexo.io">Hexo!</a></p>
</div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note warning %&#125;</span><br><span class="line"><span class="section">#### 警告标头</span></span><br><span class="line"><span class="strong">**Welcome**</span> to [<span class="string">Hexo!</span>](<span class="link">https://hexo.io</span>)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note danger"><h4 id="危险标头"><a class="header-anchor" href="#危险标头">.</a>危险标头</h4>
<p><strong>Welcome</strong> to <a href="https://hexo.io">Hexo!</a></p>
</div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note danger %&#125;</span><br><span class="line"><span class="section">#### 危险标头</span></span><br><span class="line"><span class="strong">**Welcome**</span> to [<span class="string">Hexo!</span>](<span class="link">https://hexo.io</span>)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<details class="note primary"><summary><p>这是一个摘要</p>
</summary>
<h4 id="详细信息和摘要"><a class="header-anchor" href="#详细信息和摘要">.</a>详细信息和摘要</h4>
<p>附注摘要：<code>note primary This is a summary</code></p>

</details>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note primary This is a summary %&#125;</span><br><span class="line"><span class="section">#### 详细信息和摘要</span></span><br><span class="line">附注摘要：<span class="code">`note primary This is a summary`</span></span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note success"><h4 id="批注中的代码块"><a class="header-anchor" href="#批注中的代码块">.</a>批注中的代码块</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br></pre></td></tr></table></figure></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note success %&#125;</span><br><span class="line"><span class="section">#### 批注中的代码块</span></span><br><span class="line">&#123;% code %&#125;</span><br><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br><span class="line">&#123;% endcode %&#125;</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="PDF支持"><a class="header-anchor" href="#PDF支持">.</a>PDF支持</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/pdf.html">PDF | NexT</a></p>
<p>这是一个插件，允许在博客页面中预览PDF文件。</p>
<p>如果浏览器本身支持嵌入式 PDF，NexT 将创建一个标签，并在您的网站上包含 PDF 文件。否则，它将创建一个标签并使用PDF.js通过@mozilla来呈现pdf文件。</p>
<h2 id="选项卡"><a class="header-anchor" href="#选项卡">.</a>选项卡</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/tabs.html">Tabs | NexT</a></p>
<p>让选项卡的导航条嵌入内容之中，用以在同一行通过选项卡呈现不同的内容</p>
<h3 id="用法-13"><a class="header-anchor" href="#用法-13">.</a><strong>用法</strong></h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line"><span class="comment">&lt;!-- tab [Tab caption] [@icon] --&gt;</span></span><br><span class="line">Any content (support inline tags too).</span><br><span class="line"><span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>Unique name</code>：选项卡块标记的唯一名称，不带逗号。<br />
将在#id用作每个选项卡及其索引号的前缀。<br />
如果名称中有空格，则对于生成#id所有空格都将替换为短划线。<br />
仅对于帖子/页面的当前网址必须是唯一的！</li>
<li><code>[index]</code>：活动选项卡的索引号。<br />
如果未指定，将选择第一个选项卡 （1）。<br />
如果索引为 -1，则不会选择任何选项卡。这将是类似剧透的东西。<br />
可选参数。</li>
<li><code>[Tab caption]</code>：当前选项卡的标题。<br />
如果未指定标题，则带有选项卡索引后缀的唯一名称将用作选项卡的标题。<br />
如果未指定标题，但指定了图标，则标题将为空。<br />
可选参数。</li>
<li><code>[@icon]</code>：Font Awesome 图标名称。<br />
可以指定带或不带空格;例如，&quot;Tab caption @icon&quot;与&quot;Tab caption@icon&quot;相同。<br />
可选参数。</li>
</ul>
<h3 id="例子-6"><a class="header-anchor" href="#例子-6">.</a><strong>例子</strong></h3>
<h4 id="选中了第-3-个选项卡的选项卡"><a class="header-anchor" href="#选中了第-3-个选项卡的选项卡">.</a>选中了第 3 个选项卡的选项卡</h4>
<div class="tabs" id="second-unique-name"><ul class="nav-tabs"><li class="tab"><a href="#second-unique-name-1">Second unique name 1</a></li><li class="tab"><a href="#second-unique-name-2">Second unique name 2</a></li><li class="tab active"><a href="#second-unique-name-3">Second unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="second-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="second-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane active" id="second-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Second unique name, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<h4 id="未选择选项卡的选项卡"><a class="header-anchor" href="#未选择选项卡的选项卡">.</a>未选择选项卡的选项卡</h4>
<div class="tabs" id="third-unique-name"><ul class="nav-tabs"><li class="tab"><a href="#third-unique-name-1">Third unique name 1</a></li><li class="tab"><a href="#third-unique-name-2">Third unique name 2</a></li><li class="tab"><a href="#third-unique-name-3">Third unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="third-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="third-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="third-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Third unique name, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<h4 id="带有图标和自定义标签名称的选项卡"><a class="header-anchor" href="#带有图标和自定义标签名称的选项卡">.</a>带有图标和自定义标签名称的选项卡</h4>
<div class="tabs" id="fourth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fourth-unique-name-1"><i class="fa fa-text-width"></i>解决方案1</a></li><li class="tab"><a href="#fourth-unique-name-2"><i class="fa fa-font"></i>解决方案2</a></li><li class="tab"><a href="#fourth-unique-name-3"><i class="fa fa-bold"></i>解决方案3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="fourth-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="fourth-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="fourth-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Fourth unique name %&#125;</span><br><span class="line">&lt;!-- tab 解决方案1@text-width --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 解决方案2@font --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 解决方案3@bold --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<h4 id="标签永久链接测试"><a class="header-anchor" href="#标签永久链接测试">.</a>标签永久链接测试</h4>
<div class="note info"><p>名称中有空格，则对于生成#id所有空格都将替换为短划线。</p>
</div>
<p>链接至 &gt; <a href="#tab-one">Tab one</a>.<br />
链接至 &gt; <a href="#tab-one-1">Tab one 1</a>.<br />
链接至 &gt; <a href="#tab-one-2">Tab one 2</a>.<br />
链接至 &gt; <a href="#tab-one-3">Tab one 3</a>.</p>
<p>链接至 &gt; <a href="#tab-two">Tab two</a>.<br />
链接至 &gt; <a href="#tab-two-1">Tab two 1</a>.<br />
链接至 &gt; <a href="#tab-two-2">Tab two 2</a>.<br />
链接至 &gt; <a href="#tab-two-3">Tab two 3</a>.</p>
<div class="tabs" id="tab-one"><ul class="nav-tabs"><li class="tab active"><a href="#tab-one-1">Tab one 1</a></li><li class="tab"><a href="#tab-one-2">Tab one 2</a></li><li class="tab"><a href="#tab-one-3">Tab one 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-one-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="tab-one-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="tab-one-3"><p><strong>This is Tab 3.</strong></p></div></div></div>
<div class="tabs" id="tab-two"><ul class="nav-tabs"><li class="tab active"><a href="#tab-two-1">Tab two 1</a></li><li class="tab"><a href="#tab-two-2">Tab two 2</a></li><li class="tab"><a href="#tab-two-3">Tab two 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-two-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="tab-two-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="tab-two-3"><p><strong>This is Tab 3.</strong></p></div></div></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">链接至 &gt; [<span class="string">Tab one</span>](<span class="link">#tab-one</span>).</span><br><span class="line">链接至 &gt; [<span class="string">Tab one 1</span>](<span class="link">#tab-one-1</span>).</span><br><span class="line">链接至 &gt; [<span class="string">Tab one 2</span>](<span class="link">#tab-one-2</span>).</span><br><span class="line">链接至 &gt; [<span class="string">Tab one 3</span>](<span class="link">#tab-one-3</span>).</span><br><span class="line"></span><br><span class="line">链接至 &gt; [<span class="string">Tab two</span>](<span class="link">#tab-two</span>).</span><br><span class="line">链接至 &gt; [<span class="string">Tab two 1</span>](<span class="link">#tab-two-1</span>).</span><br><span class="line">链接至 &gt; [<span class="string">Tab two 2</span>](<span class="link">#tab-two-2</span>).</span><br><span class="line">链接至 &gt; [<span class="string">Tab two 3</span>](<span class="link">#tab-two-3</span>).</span><br><span class="line"></span><br><span class="line">&#123;% tabs Tab one %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tabs Tab two %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<h4 id="嵌套选项卡"><a class="header-anchor" href="#嵌套选项卡">.</a>嵌套选项卡</h4>
<div class="tabs" id="tags"><ul class="nav-tabs"><li class="tab active"><a href="#tags-1">Tags 1</a></li><li class="tab"><a href="#tags-2">Tags 2</a></li><li class="tab"><a href="#tags-3">Tags 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tags-1"><p><strong>This is Tab 1.</strong></p>
<ol>
<li>One</li>
<li>Two</li>
<li>Three</li>
</ol>
<p>Indented code block:</p>
<pre><code>nano /etc
</code></pre>
<p>Tagged code block:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code tag</span><br><span class="line">code tag</span><br><span class="line">code tag</span><br></pre></td></tr></table></figure>
<div class="note default"><p>Note default tag.</p>
</div></div><div class="tab-pane" id="tags-2"><p><strong>This is Tab 2.</strong></p>
<ul>
<li>Five</li>
<li>Six</li>
<li>Seven</li>
</ul>
<div class="note primary"><div class="video-container"><iframe src="https://www.youtube.com/embed/Kt7u5kr_P5o" frameborder="0" loading="lazy" allowfullscreen></iframe></div></div></div><div class="tab-pane" id="tags-3"><p><strong>This is Tab 3.</strong></p>
<div class="tabs" id="sub-tabs"><ul class="nav-tabs"><li class="tab active"><a href="#sub-tabs-1">Sub Tabs 1</a></li><li class="tab"><a href="#sub-tabs-2">Sub Tabs 2</a></li><li class="tab"><a href="#sub-tabs-3">Sub Tabs 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sub-tabs-1"><p><strong>This is Sub Tab 1.</strong></p>
<div class="note success"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>
<div class="note warning"><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>
</div>
<p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>
</div></div><div class="tab-pane" id="sub-tabs-2"><p><strong>This is Sub Tab 2.</strong></p>
<div class="note success"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>
<p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>
<div class="note danger"><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>
</div></div></div><div class="tab-pane" id="sub-tabs-3"><p><strong>This is Sub Tab 3.</strong></p>
<div class="tabs" id="sub-sub-tabs"><ul class="nav-tabs"><li class="tab active"><a href="#sub-sub-tabs-1">Sub-Sub Tabs 1</a></li><li class="tab"><a href="#sub-sub-tabs-2">Sub-Sub Tabs 2</a></li><li class="tab"><a href="#sub-sub-tabs-3">Sub-Sub Tabs 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sub-sub-tabs-1"><p><strong>This is Sub-Sub Tab 1 of Sub Tab 3.</strong></p>
<div class="note success"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>
<p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>
<p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>
</div></div><div class="tab-pane" id="sub-sub-tabs-2"><p><strong>This is Sub-Sub Tab 2 of Sub Tab 3.</strong></p>
<div class="note success"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>
<div class="note warning"><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>
<p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>
</div>
</div></div><div class="tab-pane" id="sub-sub-tabs-3"><p><strong>This is Sub-Sub Tab 3 of Sub Tab 3.</strong></p>
<div class="note success"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>
<div class="note warning"><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>
<div class="note danger"><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>
</div>
</div>
</div></div></div></div></div></div></div></div></div></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Tags %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> One</span><br><span class="line"><span class="bullet">2.</span> Two</span><br><span class="line"><span class="bullet">3.</span> Three</span><br><span class="line"></span><br><span class="line">Indented code block:</span><br><span class="line"></span><br><span class="line"><span class="code">    nano /etc</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">Tagged code block:</span><br><span class="line"></span><br><span class="line">&#123;% code %&#125;</span><br><span class="line">code tag</span><br><span class="line">code tag</span><br><span class="line">code tag</span><br><span class="line">&#123;% endcode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default %&#125;</span><br><span class="line">Note default tag.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> Five</span><br><span class="line"><span class="bullet">*</span> Six</span><br><span class="line"><span class="bullet">*</span> Seven</span><br><span class="line"></span><br><span class="line">&#123;% note primary %&#125;</span><br><span class="line">&#123;% youtube Kt7u5kr<span class="emphasis">_P5o %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&lt;!-- tab --&gt;</span></span><br><span class="line"><span class="emphasis"><span class="strong">**This is Tab 3.**</span></span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% subtabs Sub Tabs %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- tab --&gt;</span></span><br><span class="line"><span class="emphasis"><span class="strong">**This is Sub Tab 1.**</span></span></span><br><span class="line"><span class="emphasis">&#123;% note success %&#125;</span></span><br><span class="line"><span class="emphasis">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% note warning %&#125;</span></span><br><span class="line"><span class="emphasis">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&lt;!-- tab --&gt;</span></span><br><span class="line"><span class="emphasis"><span class="strong">**This is Sub Tab 2.**</span></span></span><br><span class="line"><span class="emphasis">&#123;% note success %&#125;</span></span><br><span class="line"><span class="emphasis">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% note danger %&#125;</span></span><br><span class="line"><span class="emphasis">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&lt;!-- tab --&gt;</span></span><br><span class="line"><span class="emphasis"><span class="strong">**This is Sub Tab 3.**</span></span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% subtabs Sub-Sub Tabs %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- tab --&gt;</span></span><br><span class="line"><span class="emphasis"><span class="strong">**This is Sub-Sub Tab 1 of Sub Tab 3.**</span></span></span><br><span class="line"><span class="emphasis">&#123;% note success %&#125;</span></span><br><span class="line"><span class="emphasis">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&lt;!-- tab --&gt;</span></span><br><span class="line"><span class="emphasis"><span class="strong">**This is Sub-Sub Tab 2 of Sub Tab 3.**</span></span></span><br><span class="line"><span class="emphasis">&#123;% note success %&#125;</span></span><br><span class="line"><span class="emphasis">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% note warning %&#125;</span></span><br><span class="line"><span class="emphasis">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&lt;!-- tab --&gt;</span></span><br><span class="line"><span class="emphasis"><span class="strong">**This is Sub-Sub Tab 3 of Sub Tab 3.**</span></span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% note success %&#125;</span></span><br><span class="line"><span class="emphasis">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% note warning %&#125;</span></span><br><span class="line"><span class="emphasis">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% note danger %&#125;</span></span><br><span class="line"><span class="emphasis">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis">&#123;% endsubtabs %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis">&#123;% endsubtabs %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis">&#123;% endtabs %&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>IT</category>
        <category>博客</category>
        <category>软件</category>
        <category>技巧</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>配置</tag>
        <tag>Next</tag>
        <tag>主题</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows11程序安装或卸载 问题解决</title>
    <url>/2022/03/Windows11%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%85%E6%88%96%E5%8D%B8%E8%BD%BD-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h1 id="Windows11程序安装或卸载"><a class="header-anchor" href="#Windows11程序安装或卸载">.</a>Windows11程序安装或卸载</h1>
<h2 id="问题描述-3"><a class="header-anchor" href="#问题描述-3">.</a>问题描述</h2>
<p>安装软件的时候，莫名其妙地报错，忘记截图了，就没法展示具体表现了。</p>
<p>我是在安装 <strong>QTTabBar</strong> 的时候，无法安装，估计是之前没卸载干净，然后又没有办法完全卸载了。</p>
<p>网上查了相关解决方法，我也试了用powershell指令去解决，没有效果。</p>
<p>再后来看到了微软官方的文档，试了一下，果然有用，而且根据官方的方案应该可以解决更多有关于安装这一方面的问题。</p>
<p>当无法安装或删除程序时，程序安装和卸载故障排除程序可自动修复问题。 它同时修复损坏的注册表项。</p>
<span id="more"></span>
<h2 id="问题解决-2"><a class="header-anchor" href="#问题解决-2">.</a>问题解决</h2>
<p>官方文档地址：<a href="https://support.microsoft.com/zh-cn/windows/%E4%BF%AE%E5%A4%8D%E9%98%BB%E6%AD%A2%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%85%E6%88%96%E5%88%A0%E9%99%A4%E7%9A%84%E9%97%AE%E9%A2%98-cca7d1b6-65a9-3d98-426b-e9f927e1eb4d">修复阻止程序安装或删除的问题 (microsoft.com)</a></p>
<p>故障排除程序：<a href="https://download.microsoft.com/download/7/E/9/7E9188C0-2511-4B01-8B4E-0A641EC2F600/MicrosoftProgram_Install_and_Uninstall.meta.diagcab">官方下载</a> <a href="https://yunying61.oss-cn-guangzhou.aliyuncs.com/IT/Windows/MicrosoftProgram_Install_and_Uninstall.meta.diagcab">阿里云下载</a></p>
<ol>
<li>首先，你需要下载故障排除程序。</li>
<li>然后打开故障排除程序</li>
<li>根据其提示进行相关操作（分为安装和卸载两大类解决方案）</li>
</ol>
<blockquote>
<p>故障排除程序提供了你要遵循的步骤。 如果卸载选项中未列出程序，系统将要求你提供该程序的产品代码。 要访问代码，你需要一个用于<strong>读取 MSI 文件</strong>的工具，这是 IT 专业人员常用的工具。 你可以在 MSI 文件的属性表中找到产品代码。</p>
<p><strong>故障排除程序可修复以下问题</strong>：</p>
<ul>
<li>64 位操作系统上损坏的注册表项。</li>
<li>控制更新数据的注册表项损坏。</li>
<li>无法安装新程序。</li>
<li>无法完全卸载或更新现有程序。</li>
<li>无法通过“控制面板”中的“添加或删除程序（或程序和功能）”卸载程序。</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>IT</category>
        <category>博客</category>
        <category>技术</category>
        <category>Windows</category>
        <category>软件</category>
        <category>技巧</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>问题解决</tag>
        <tag>Windows11</tag>
      </tags>
  </entry>
  <entry>
    <title>Node.js 配置</title>
    <url>/2022/03/Node-js-%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="Node-js-配置"><a class="header-anchor" href="#Node-js-配置">.</a>Node.js 配置</h1>
<p>查看所有Node.js配置：<code>npm config list -l</code></p>
<span id="more"></span>
<h2 id="本地安装与全局安装"><a class="header-anchor" href="#本地安装与全局安装">.</a>本地安装与全局安装</h2>
<ol>
<li>
<p>npm模块<strong>本地安装</strong>与<strong>全局安装</strong>有什么区别？</p>
<p>本地安装（<code>npm install xxx</code>）：是将模块下载到当前命令行执行所在目录；</p>
<p>全局安装（<code>npm install -g xxx</code>）：模块将被下载安装到【全局模块目录】中。</p>
</li>
<li>
<p>如何获取全局模块安装路径？</p>
 <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm config get prefix</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="使用淘宝源"><a class="header-anchor" href="#使用淘宝源">.</a>使用淘宝源</h2>
<p><a href="https://www.npmmirror.com/?spm=a2c6h.14029880.0.0.3ba675d7xzPsF2">npmmirror 中国镜像站</a></p>
<p>安装：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install <span class="literal">-g</span> cnpm <span class="literal">--registry</span>=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>
<p>以后既可以使用 <code>npm</code> 安装模块也可以使用 <code>cnpm</code> 安装模块</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install xxx</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">cnpm install xxx</span><br></pre></td></tr></table></figure>
<div class="note info"><p><code>cnpm</code> 支持 <code>npm</code> 除了 <code>publish</code> 之外的所有命令</p>
</div>
<h2 id="修改全局模块目录"><a class="header-anchor" href="#修改全局模块目录">.</a>修改全局模块目录</h2>
<p>默认路径：<code>C:\Users\用户名\AppData\Roaming\npm</code></p>
<p>获取路径：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm config get prefix</span><br></pre></td></tr></table></figure>
<p>设置路径：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;C:/Program Files/nodejs/npm_global&quot;</span>	 <span class="comment"># 设置全局包目录</span></span><br></pre></td></tr></table></figure>
<div class="note info"><p>需要重新配置环境变量：</p>
<p>在Path里添加 <code>C:\Program Files\nodejs\npm_global\</code></p>
</div>
<h2 id="修改缓存目录"><a class="header-anchor" href="#修改缓存目录">.</a>修改缓存目录</h2>
<p>默认路径：<code>C:\Users\用户名\AppData\Local\npm-cache</code></p>
<p>获取路径：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm config get cache</span><br></pre></td></tr></table></figure>
<p>设置路径：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;C:/Program Files/nodejs/npm_cache&quot;</span> 	<span class="comment"># 设置缓存目录</span></span><br></pre></td></tr></table></figure>
<p>注意的是：prefix 修改后，原来安装在默认目录下的npm包也还是生效的，并不需要再次安装:</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>配置</tag>
        <tag>Node</tag>
      </tags>
  </entry>
  <entry>
    <title>考研-数二-2022年考试大纲</title>
    <url>/2022/03/%E8%80%83%E7%A0%94-%E6%95%B0%E4%BA%8C-2022%E5%B9%B4%E8%80%83%E8%AF%95%E5%A4%A7%E7%BA%B2/</url>
    <content><![CDATA[<h2 id="考试形式和试卷结构"><a class="header-anchor" href="#考试形式和试卷结构">.</a>考试形式和试卷结构</h2>
<p>一、试卷满分及考试时间</p>
<p>​		试卷满分为150分，考试时间为180分钟.</p>
<p>二、答题方式</p>
<p>​		答题方式为闭卷、笔试.</p>
<p>三、试卷内容结构</p>
<ul>
<li>高等教学　约80%</li>
<li>线性代数　约20%</li>
</ul>
<p>四、试卷题型结构</p>
<ul>
<li>单项选择题 10小题，每小题5分，共50分</li>
<li>填空题 6小题，每小题5分，共30分</li>
<li>解答题(包括证明题) 7小题，共70分</li>
</ul>
<span id="more"></span>
<h2 id="高等数学"><a class="header-anchor" href="#高等数学">.</a>高等数学</h2>
<h3 id="函数、极限、连续"><a class="header-anchor" href="#函数、极限、连续">.</a>函数、极限、连续</h3>
<p>考试内容：</p>
<ul>
<li>
<p>函数的概念及表示法</p>
</li>
<li>
<p>函数的有界性、单调性、周期性和奇偶性</p>
</li>
<li>
<p>复合函数、反函数、分段函数和隐函数</p>
</li>
<li>
<p>基本初等函数的性质及其图形</p>
</li>
<li>
<p>初等函数 函数关系的建立</p>
</li>
<li>
<p>数列极限与函数极限的定义及其性质</p>
</li>
<li>
<p>函数的左极限和右极限</p>
</li>
<li>
<p>无穷小量和无穷大量的概念及其关系</p>
</li>
<li>
<p>无穷小量的性质及无穷小量的比较</p>
</li>
<li>
<p>极限的四则运算</p>
</li>
<li>
<p>极限存在的两个准则：单调有界准则和夹逼准则</p>
</li>
<li>
<p>两个重要极限：<br />
$$<br />
\lim _{x \rightarrow 0} \frac{\sin x}{x}=1<br />
$$</p>
<p>$$<br />
\lim _{x \rightarrow \infty}\left(1+\frac{1}{x}\right)^{x}=e<br />
$$</p>
</li>
<li>
<p>函数连续的概念</p>
</li>
<li>
<p>函数间断点的类型</p>
</li>
<li>
<p>初等函数的连续性</p>
</li>
<li>
<p>闭区间上连续函数的性质</p>
</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解函数的概念，掌握函数的表示法，并会建立应用问题的函数关系。</li>
<li>了解函数的有界性、单调性、周期性和奇偶性.</li>
<li>理解复合函数及分段函数的概念、了解反函数及隐函数的概念、掌握基本初等函数的性质及其图形、了解初等函数的概念、理解极限的概念、理解函数左极限与右极限的概念以及函数极限存在与左极限、右极限之间的关系.</li>
<li>掌握极限的性质及四则运算法则.</li>
<li>掌握极限存在的两个准则，并会利用它们求极限，掌握利用两个重要极限求极限的方法.</li>
<li>理解无穷小量、无穷大量的概念，掌握无穷小量的比较方法,会用等价无穷小量求极限.</li>
<li>理解函数连续性的概念(含左连续与右连续)，会判别函数间断点的类型.</li>
<li>了解连续函数的性质和初等函数的连续性,理解闭区间上连续函数的性质(有界性、最大值和最小值定理、介值定理)，并会应用这些性质.</li>
</ol>
<h3 id="一元函数微分学"><a class="header-anchor" href="#一元函数微分学">.</a>一元函数微分学</h3>
<p>考试内容：</p>
<div class="tabs" id="一元函数微分学"><ul class="nav-tabs"><li class="tab active"><a href="#一元函数微分学-1">1</a></li><li class="tab"><a href="#一元函数微分学-2">2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="一元函数微分学-1"><ul>
<li>导数和微分的概念</li>
<li>导数的几何意义和物理意义</li>
<li>函数的可导性与连续性之间的关系</li>
<li>平面曲线的切线和法线</li>
<li>导数和微分的四则运算</li>
<li>基本初等函数的导数</li>
<li>复合函数、反函数、隐函数以及参数方程所确定的函数的微分法</li>
<li>高阶导数</li>
<li>一阶微分形式的不变性</li>
<li>微分中值定理洛必达法则</li>
<li>函数单调性的判别</li>
<li>函数的极值</li>
<li>函数图形的凹凸性</li>
<li>拐点及渐近线</li>
<li>函数图形的描绘</li>
<li>函数的最大值与最小值</li>
<li>弧微分</li>
<li>曲率的概念</li>
<li>曲率圆与曲率半径</li>
</ul></div><div class="tab-pane" id="一元函数微分学-2"><ul>
<li>导数和微分</li>
<li>函数的可导性与连续性</li>
<li>导数的四则运算法则</li>
<li>复合函数的求导法则</li>
<li>基本初等函数的导数公式</li>
<li>微分的四则运算法则</li>
<li>一阶微分形式的不变性</li>
<li>高阶导数的概念</li>
<li>分段函数的导数</li>
<li>隐函数、由参数方程所确定的函数、反函数的导数</li>
<li>罗尔定理、拉格朗日中值定理、泰勒定理、柯西中值定理</li>
<li>洛必达法则</li>
<li>函数的极值概念，掌握用导数判断函数的单调性</li>
<li>函数图形的凹凸性</li>
<li>曲率、曲率圆和曲率半径</li>
</ul></div></div></div>
<p>考试要求</p>
<ol>
<li>理解导数和微分的概念，理解导数和微分的关系，理解函数的可导性与连续性之间的关系.</li>
<li>掌握导数的四则运算法则和复合函数的求导法则，掌握基本初等函数的导数公式.了解微分的四则运算法则和一阶微分形式的不变性，会求函数的微分.</li>
<li>了解高阶导数的概念，会求简单函数的高阶导数.</li>
<li>会求分段函数的导数，会求隐函数和由参数方程所确定的函数以及反函数的导数.</li>
<li>理解并会用罗尔（Rolle）定理、拉格朗日（Lagrange）中值定理和泰勒（Taylor）定理，了解并会用柯西( Cauchy ）中值定理.</li>
<li>掌握用洛必达法则求未定式极限的方法.</li>
<li>理解函数的极值概念，掌握用导数判断函数的单调性和求函数极值的方法，掌握函数最大值和最小值的求法及其应用.</li>
<li>会用导数判断函数图形的凹凸性(注:在区间(a,b)内，设函数(x)具有二阶导数当 $f(x)‘’&gt;0$ 时，f(x)的图形是凹的;当 $f(x)‘’&lt;0$ 时，f(X)的图形是凸的)，会求函数图形的拐点以及水平、铅直和斜渐近线,会描绘函数的图形.</li>
<li>了解曲率、曲率圆和曲率半径的概念，会计算曲率和曲率半径.</li>
</ol>
<h3 id="一元函数积分学"><a class="header-anchor" href="#一元函数积分学">.</a>一元函数积分学</h3>
<p>考试内容：</p>
<ul>
<li>原函数和不定积分的概念</li>
<li>不定积分的基本性质</li>
<li>基本<a href="https://baike.baidu.com/item/%E7%A7%AF%E5%88%86%E5%85%AC%E5%BC%8F">积分公式</a></li>
<li>定积分的概念和基本性质</li>
<li>定积分中值定理</li>
<li>积分上限的函数及其导数</li>
<li>牛顿-莱布尼茨公式</li>
<li>不定积分和定积分的换元积分法与分部积分法</li>
<li>有理函数、三角函数的有理式和简单无理函数的积分反常（广义）积分</li>
<li>定积分的应用</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解原函数的概念，理解不定积分和定积分的概念.</li>
<li>掌握不定积分的基本公式，掌握不定积分和定积分的性质及定积分中值定理，掌握换元积分法与分部积分法.</li>
<li>会求有理函数、三角函数有理式和简单无理函数的积分.</li>
<li>理解积分上限的函数，会求它的导数，掌握牛顿一莱布尼茨公式.</li>
<li>了解反常积分的概念，了解反常积分收敛的比较判别法，会计算反常积分.</li>
<li>掌握用定积分表达和计算一些几何量与物理量（平面图形的面积、平面曲线的弧长、旋转体的体积及侧面积、平行截面面积为已知的立体体积、功、引力、压力、质心、形心等）及函数的平均值.</li>
</ol>
<h3 id="多元函数微积分学"><a class="header-anchor" href="#多元函数微积分学">.</a>多元函数微积分学</h3>
<p>考试内容：</p>
<ul>
<li>多元函数的概念</li>
<li>二元函数的几何意义</li>
<li>二元函数的极限与连续的概念</li>
<li>有界闭区域上，二元连续函数的性质</li>
<li>多元函数的偏导数和全微分</li>
<li>多元复合函数</li>
<li>隐函数的求导法</li>
<li>二阶偏导数</li>
<li>多元函数的极值和条件极值、最大值和最小值</li>
<li>二重积分的概念、基本性质和计算.</li>
</ul>
<p>考试要求</p>
<ol>
<li>了解多元函数的概念，了解二元函数的几何意义.</li>
<li>了解二元函数的极限与连续的概念，了解有界闭区域上二元连续函数的性质.</li>
<li>了解多元函数偏导数与全微分的概念，会求多元复合函数一阶、二阶偏导数，会求全微分，了解隐函数存在定理，会求多元隐函数的偏导数.</li>
<li>了解多元函数极值和条件极值的概念，掌握多元函数极值存在的必要条件，了解二元函数极值存在的充分条件，会求二元函数的极值，会用拉格朗日乘数法求条件极值，会求简单多元函数的最大值和最小值，并求解一些简单的应用问题.</li>
<li>理解二重积分的概念，了解二重积分的基本性质，了解二重积分的中值定理，掌握二重积分的计算方法（直角坐标、极坐标）.</li>
</ol>
<h3 id="常微分方程"><a class="header-anchor" href="#常微分方程">.</a>常微分方程</h3>
<p>考试内容：</p>
<ul>
<li>常微分方程的基本概念</li>
<li>变量可分离的微分方程</li>
<li>齐次微分方程</li>
<li>一阶线性微分方程</li>
<li>可降阶的高阶微分方程</li>
<li>线性微分方程解的性质及解的结构定理</li>
<li>二阶常系数齐次线性微分方程</li>
<li>高于二阶的某些常系数齐次线性微分方程</li>
<li>简单的二阶常系数非齐次线性微分方程</li>
<li>微分方程的简单应用</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>了解微分方程及其阶、解、通解、初始条件和特解等概念.</li>
<li>掌握变量可分离的微分方程及一阶线性微分方程的解法，会解齐次微分方程.</li>
<li>会用降阶法解下列形式的微分方程：$y’‘=f(x)$ 、$y’‘=f(x,y’)$ 和 $y’‘=f(y,y’)$.</li>
<li>理解<a href="https://baike.baidu.com/item/%E7%BA%BF%E6%80%A7%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/946736">线性微分方程</a>解的性质及解的结构.</li>
<li>掌握二阶常系数齐次线性微分方程的解法，并会解某些高于二阶的常系数齐次线性微分方程.</li>
<li>会解自由项为多项式、指数函数、正弦函数、余弦函数以及它们的和与积的二阶常系数非齐次线性微分方程.</li>
<li>会用微分方程解决一些简单的应用问题.</li>
</ol>
<h2 id="线性代数"><a class="header-anchor" href="#线性代数">.</a>线性代数</h2>
<h3 id="行列式"><a class="header-anchor" href="#行列式">.</a>行列式</h3>
<p>考试内容：</p>
<ul>
<li>行列式的概念和基本性质</li>
<li>行列式按行（列）展开定理</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>了解行列式的概念，掌握行列式的性质.</li>
<li>会应用行列式的性质和行列式按行（列）展开定理计算行列式.</li>
</ol>
<h3 id="矩阵"><a class="header-anchor" href="#矩阵">.</a>矩阵</h3>
<p><strong>考试内容：</strong></p>
<ul>
<li>矩阵的概念</li>
<li>矩阵的线性运算</li>
<li>矩阵的乘法</li>
<li>方阵的幂</li>
<li>方阵乘积的行列式</li>
<li>矩阵的转置</li>
<li>逆矩阵的概念和性质</li>
<li>矩阵可逆的充分必要条件</li>
<li>伴随矩阵</li>
<li>矩阵的初等变换</li>
<li>初等矩阵</li>
<li>矩阵的秩</li>
<li>矩阵的等价分块矩阵及其运算</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解矩阵的概念，了解单位矩阵、数量矩阵、对角矩阵、三角矩阵、对称矩阵、反对称矩阵和正交矩阵以及它们的性质.</li>
<li>掌握矩阵的线性运算、乘法、转置以及它们的运算规律，了解方阵的幂与方阵乘积的行列式的性质.</li>
<li>理解逆矩阵的概念，掌握逆矩阵的性质以及矩阵可逆的充分必要条件.理解伴随矩阵的概念，会用伴随矩阵求逆矩阵.</li>
<li>了解矩阵初等变换的概念，了解初等矩阵的性质和矩阵等价的概念，理解矩阵的秩的概念，掌握用初等变换求矩阵的秩和逆矩阵的方法.</li>
<li>了解分块矩阵及其运算.</li>
</ol>
<h3 id="向量"><a class="header-anchor" href="#向量">.</a>向量</h3>
<p>考试内容：</p>
<ul>
<li>向量的概念</li>
<li>向量的线性组合和线性表示</li>
<li>向量组的线性相关与线性无关</li>
<li>向量组的极大线性无关组</li>
<li><a href="https://baike.baidu.com/item/%E7%AD%89%E4%BB%B7%E5%90%91%E9%87%8F%E7%BB%84/1267576">等价向量组</a></li>
<li>向量组的秩</li>
<li>向量组的秩与矩阵的秩之间的关系</li>
<li>向量的内积</li>
<li>线性无关向量组的正交规范化方法</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解n维向量、向量的线性组合与线性表示的概念.</li>
<li>理解向量组线性相关、线性无关的概念，掌握向量组线性相关、线性无关的有关性质及判别法.</li>
<li>了解向量组的极大线性无关组和向量组的秩的概念，会求向量组的极大线性无关组及秩.</li>
<li>了解向量组等价的概念，了解矩阵的秩与其行（列）向量组的秩的关系.</li>
<li>了解内积的概念，掌握线性无关向量组正交规范化的施密特（Schmidt）方法.</li>
</ol>
<h3 id="线性方程组"><a class="header-anchor" href="#线性方程组">.</a>线性方程组</h3>
<p>考试内容：</p>
<ul>
<li>线性方程组的克莱姆（Cramer）法则</li>
<li>齐次线性方程组有非零解的充分必要条件</li>
<li>非齐次线性方程组有解的充分必要条件</li>
<li>线性方程组解的性质和解的结构</li>
<li>齐次线性方程组的基础解系和通解</li>
<li>非齐次线性方程组的通解</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>会用克莱姆法则.</li>
<li>理解齐次线性方程组有非零解的充分必要条件及非齐次线性方程组有解的充分必要条件.</li>
<li>理解齐次线性方程组的基础解系及通解的概念，掌握齐次线性方程组的基础解系和通解的求法.</li>
<li>理解非齐次线性方程组的解的结构及通解的概念.</li>
<li>会用初等行变换求解线性方程组.</li>
</ol>
<h3 id="矩阵的特征值和特征向量"><a class="header-anchor" href="#矩阵的特征值和特征向量">.</a>矩阵的特征值和特征向量</h3>
<p>考试内容：</p>
<ul>
<li>矩阵的特征值和特征向量的概念、性质</li>
<li>相似矩阵的概念及性质</li>
<li>矩阵可相似对角化的充分必要条件及相似对角矩阵</li>
<li>实对称矩阵的特征值、特征向量及其相似对角矩阵</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解矩阵的特征值和特征向量的概念及性质，会求矩阵的特征值和特征向量.</li>
<li>理解相似矩阵的概念、性质及矩阵可相似对角化的充分必要条件，掌握将矩阵化为相似对角矩阵的方法.</li>
<li>掌握实对称矩阵的特征值和特征向量的性质.</li>
</ol>
<h3 id="二次型"><a class="header-anchor" href="#二次型">.</a>二次型</h3>
<p>考试内容：</p>
<ul>
<li>二次型及其矩阵表示</li>
<li>合同变换与合同矩阵</li>
<li>二次型的秩</li>
<li>惯性定理</li>
<li>二次型的标准形和规范形用正交变换和配方法化二次型为标准形</li>
<li>二次型及其矩阵的正定性</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>掌握二次型及其矩阵表示，了解二次型秩的概念，了解合同变换与合同矩阵的概念，了解二次型的标准形、规范形的概念以及惯性定理.</li>
<li>掌握用正交变换化二次型为标准形的方法，会用配方法化二次型为标准形.</li>
<li>理解正定二次型、正定矩阵的概念，并掌握其判别法</li>
</ol>
]]></content>
      <categories>
        <category>个人</category>
        <category>学习</category>
        <category>考研</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>考研</tag>
        <tag>高数</tag>
      </tags>
  </entry>
  <entry>
    <title>考研-高数复习笔记</title>
    <url>/2022/03/%E8%80%83%E7%A0%94-%E9%AB%98%E6%95%B0%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="考研数二"><a class="header-anchor" href="#考研数二">.</a>考研数二</h1>
<h2 id="高等数学-2"><a class="header-anchor" href="#高等数学-2">.</a>高等数学</h2>
<h3 id="函数、极限、连续-2"><a class="header-anchor" href="#函数、极限、连续-2">.</a>函数、极限、连续</h3>
<span id="more"></span>
<p>考试内容：</p>
<ul>
<li>
<p>函数的概念及表示法</p>
</li>
<li>
<p>函数的有界性、单调性、周期性和奇偶性</p>
</li>
<li>
<p>复合函数、反函数、分段函数和隐函数</p>
</li>
<li>
<p>基本初等函数的性质及其图形</p>
</li>
<li>
<p>初等函数 函数关系的建立</p>
</li>
<li>
<p>数列极限与函数极限的定义及其性质</p>
</li>
<li>
<p>函数的左极限和右极限</p>
</li>
<li>
<p>无穷小量和无穷大量的概念及其关系</p>
</li>
<li>
<p>无穷小量的性质及无穷小量的比较</p>
</li>
<li>
<p>极限的四则运算</p>
</li>
<li>
<p>极限存在的两个准则：单调有界准则和夹逼准则</p>
</li>
<li>
<p>两个重要极限：<br />
$$<br />
\lim _{x \rightarrow 0} \frac{\sin x}{x}=1<br />
$$</p>
<p>$$<br />
\lim _{x \rightarrow \infty}\left(1+\frac{1}{x}\right)^{x}=e<br />
$$</p>
</li>
<li>
<p>函数连续的概念</p>
</li>
<li>
<p>函数间断点的类型</p>
</li>
<li>
<p>初等函数的连续性</p>
</li>
<li>
<p>闭区间上连续函数的性质</p>
</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解函数的概念，掌握函数的表示法，并会建立应用问题的函数关系。</li>
<li>了解函数的有界性、单调性、周期性和奇偶性.</li>
<li>理解复合函数及分段函数的概念、了解反函数及隐函数的概念、掌握基本初等函数的性质及其图形、了解初等函数的概念、理解极限的概念、理解函数左极限与右极限的概念以及函数极限存在与左极限、右极限之间的关系.</li>
<li>掌握极限的性质及四则运算法则.</li>
<li>掌握极限存在的两个准则，并会利用它们求极限，掌握利用两个重要极限求极限的方法.</li>
<li>理解无穷小量、无穷大量的概念，掌握无穷小量的比较方法,会用等价无穷小量求极限.</li>
<li>理解函数连续性的概念(含左连续与右连续)，会判别函数间断点的类型.</li>
<li>了解连续函数的性质和初等函数的连续性,理解闭区间上连续函数的性质(有界性、最大值和最小值定理、介值定理)，并会应用这些性质.</li>
</ol>
<h4 id="函数的性质"><a class="header-anchor" href="#函数的性质">.</a>函数的性质</h4>
<ol>
<li>
<p>有界性<br />
对任一 $x \in X$ ，存在正数 M，使得 $\left | f(x) \right | \leqslant M$ ，那么称为函数 f(x) 在 X 上有界；反之，则无界。<br />
通俗的来说，就是 f(x) 的图像在 y 轴上是不是无限往上或往下延伸。</p>
</li>
<li>
<p>单调性<br />
在区间内，图像恒增(&gt;)或恒减(&lt;)；恒不增(≥)或恒不减(≤)。</p>
<p>**判定：**在区间 I 内连续且可导，</p>
</li>
<li>
<p>奇偶性</p>
</li>
<li>
<p>周期性</p>
</li>
</ol>
<h3 id="一元函数微分学-2"><a class="header-anchor" href="#一元函数微分学-2">.</a>一元函数微分学</h3>
<p>考试内容：</p>
<div class="tabs" id="一元函数微分学"><ul class="nav-tabs"><li class="tab active"><a href="#一元函数微分学-1">1</a></li><li class="tab"><a href="#一元函数微分学-2">2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="一元函数微分学-1"><ul>
<li>导数和微分的概念</li>
<li>导数的几何意义和物理意义</li>
<li>函数的可导性与连续性之间的关系</li>
<li>平面曲线的切线和法线</li>
<li>导数和微分的四则运算</li>
<li>基本初等函数的导数</li>
<li>复合函数、反函数、隐函数以及参数方程所确定的函数的微分法</li>
<li>高阶导数</li>
<li>一阶微分形式的不变性</li>
<li>微分中值定理洛必达法则</li>
<li>函数单调性的判别</li>
<li>函数的极值</li>
<li>函数图形的凹凸性</li>
<li>拐点及渐近线</li>
<li>函数图形的描绘</li>
<li>函数的最大值与最小值</li>
<li>弧微分</li>
<li>曲率的概念</li>
<li>曲率圆与曲率半径</li>
</ul></div><div class="tab-pane" id="一元函数微分学-2"><ul>
<li>导数和微分</li>
<li>函数的可导性与连续性</li>
<li>导数的四则运算法则</li>
<li>复合函数的求导法则</li>
<li>基本初等函数的导数公式</li>
<li>微分的四则运算法则</li>
<li>一阶微分形式的不变性</li>
<li>高阶导数的概念</li>
<li>分段函数的导数</li>
<li>隐函数、由参数方程所确定的函数、反函数的导数</li>
<li>罗尔定理、拉格朗日中值定理、泰勒定理、柯西中值定理</li>
<li>洛必达法则</li>
<li>函数的极值概念，掌握用导数判断函数的单调性</li>
<li>函数图形的凹凸性</li>
<li>曲率、曲率圆和曲率半径</li>
</ul></div></div></div>
<p>考试要求</p>
<ol>
<li>理解导数和微分的概念，理解导数和微分的关系，理解函数的可导性与连续性之间的关系.</li>
<li>掌握导数的四则运算法则和复合函数的求导法则，掌握基本初等函数的导数公式.了解微分的四则运算法则和一阶微分形式的不变性，会求函数的微分.</li>
<li>了解高阶导数的概念，会求简单函数的高阶导数.</li>
<li>会求分段函数的导数，会求隐函数和由参数方程所确定的函数以及反函数的导数.</li>
<li>理解并会用罗尔（Rolle）定理、拉格朗日（Lagrange）中值定理和泰勒（Taylor）定理，了解并会用柯西( Cauchy ）中值定理.</li>
<li>掌握用洛必达法则求未定式极限的方法.</li>
<li>理解函数的极值概念，掌握用导数判断函数的单调性和求函数极值的方法，掌握函数最大值和最小值的求法及其应用.</li>
<li>会用导数判断函数图形的凹凸性(注:在区间(a,b)内，设函数(x)具有二阶导数当 $f(x)‘’&gt;0$ 时，f(x)的图形是凹的;当 $f(x)‘’&lt;0$ 时，f(X)的图形是凸的)，会求函数图形的拐点以及水平、铅直和斜渐近线,会描绘函数的图形.</li>
<li>了解曲率、曲率圆和曲率半径的概念，会计算曲率和曲率半径.</li>
</ol>
<h3 id="一元函数积分学-2"><a class="header-anchor" href="#一元函数积分学-2">.</a>一元函数积分学</h3>
<p>考试内容：</p>
<ul>
<li>原函数和不定积分的概念</li>
<li>不定积分的基本性质</li>
<li>基本<a href="https://baike.baidu.com/item/%E7%A7%AF%E5%88%86%E5%85%AC%E5%BC%8F">积分公式</a></li>
<li>定积分的概念和基本性质</li>
<li>定积分中值定理</li>
<li>积分上限的函数及其导数</li>
<li>牛顿-莱布尼茨公式</li>
<li>不定积分和定积分的换元积分法与分部积分法</li>
<li>有理函数、三角函数的有理式和简单无理函数的积分反常（广义）积分</li>
<li>定积分的应用</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解原函数的概念，理解不定积分和定积分的概念.</li>
<li>掌握不定积分的基本公式，掌握不定积分和定积分的性质及定积分中值定理，掌握换元积分法与分部积分法.</li>
<li>会求有理函数、三角函数有理式和简单无理函数的积分.</li>
<li>理解积分上限的函数，会求它的导数，掌握牛顿一莱布尼茨公式.</li>
<li>了解反常积分的概念，了解反常积分收敛的比较判别法，会计算反常积分.</li>
<li>掌握用定积分表达和计算一些几何量与物理量（平面图形的面积、平面曲线的弧长、旋转体的体积及侧面积、平行截面面积为已知的立体体积、功、引力、压力、质心、形心等）及函数的平均值.</li>
</ol>
<h3 id="多元函数微积分学-2"><a class="header-anchor" href="#多元函数微积分学-2">.</a>多元函数微积分学</h3>
<p>考试内容：</p>
<ul>
<li>多元函数的概念</li>
<li>二元函数的几何意义</li>
<li>二元函数的极限与连续的概念</li>
<li>有界闭区域上，二元连续函数的性质</li>
<li>多元函数的偏导数和全微分</li>
<li>多元复合函数</li>
<li>隐函数的求导法</li>
<li>二阶偏导数</li>
<li>多元函数的极值和条件极值、最大值和最小值</li>
<li>二重积分的概念、基本性质和计算.</li>
</ul>
<p>考试要求</p>
<ol>
<li>了解多元函数的概念，了解二元函数的几何意义.</li>
<li>了解二元函数的极限与连续的概念，了解有界闭区域上二元连续函数的性质.</li>
<li>了解多元函数偏导数与全微分的概念，会求多元复合函数一阶、二阶偏导数，会求全微分，了解隐函数存在定理，会求多元隐函数的偏导数.</li>
<li>了解多元函数极值和条件极值的概念，掌握多元函数极值存在的必要条件，了解二元函数极值存在的充分条件，会求二元函数的极值，会用拉格朗日乘数法求条件极值，会求简单多元函数的最大值和最小值，并求解一些简单的应用问题.</li>
<li>理解二重积分的概念，了解二重积分的基本性质，了解二重积分的中值定理，掌握二重积分的计算方法（直角坐标、极坐标）.</li>
</ol>
<h3 id="常微分方程-2"><a class="header-anchor" href="#常微分方程-2">.</a>常微分方程</h3>
<p>考试内容：</p>
<ul>
<li>常微分方程的基本概念</li>
<li>变量可分离的微分方程</li>
<li>齐次微分方程</li>
<li>一阶线性微分方程</li>
<li>可降阶的高阶微分方程</li>
<li>线性微分方程解的性质及解的结构定理</li>
<li>二阶常系数齐次线性微分方程</li>
<li>高于二阶的某些常系数齐次线性微分方程</li>
<li>简单的二阶常系数非齐次线性微分方程</li>
<li>微分方程的简单应用</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>了解微分方程及其阶、解、通解、初始条件和特解等概念.</li>
<li>掌握变量可分离的微分方程及一阶线性微分方程的解法，会解齐次微分方程.</li>
<li>会用降阶法解下列形式的微分方程：$y’‘=f(x)$ 、$y’‘=f(x,y’)$ 和 $y’‘=f(y,y’)$.</li>
<li>理解<a href="https://baike.baidu.com/item/%E7%BA%BF%E6%80%A7%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/946736">线性微分方程</a>解的性质及解的结构.</li>
<li>掌握二阶常系数齐次线性微分方程的解法，并会解某些高于二阶的常系数齐次线性微分方程.</li>
<li>会解自由项为多项式、指数函数、正弦函数、余弦函数以及它们的和与积的二阶常系数非齐次线性微分方程.</li>
<li>会用微分方程解决一些简单的应用问题.</li>
</ol>
<h2 id="线性代数-2"><a class="header-anchor" href="#线性代数-2">.</a>线性代数</h2>
<h3 id="行列式-2"><a class="header-anchor" href="#行列式-2">.</a>行列式</h3>
<p>考试内容：</p>
<ul>
<li>行列式的概念和基本性质</li>
<li>行列式按行（列）展开定理</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>了解行列式的概念，掌握行列式的性质.</li>
<li>会应用行列式的性质和行列式按行（列）展开定理计算行列式.</li>
</ol>
<h3 id="矩阵-2"><a class="header-anchor" href="#矩阵-2">.</a>矩阵</h3>
<p><strong>考试内容：</strong></p>
<ul>
<li>矩阵的概念</li>
<li>矩阵的线性运算</li>
<li>矩阵的乘法</li>
<li>方阵的幂</li>
<li>方阵乘积的行列式</li>
<li>矩阵的转置</li>
<li>逆矩阵的概念和性质</li>
<li>矩阵可逆的充分必要条件</li>
<li>伴随矩阵</li>
<li>矩阵的初等变换</li>
<li>初等矩阵</li>
<li>矩阵的秩</li>
<li>矩阵的等价分块矩阵及其运算</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解矩阵的概念，了解单位矩阵、数量矩阵、对角矩阵、三角矩阵、对称矩阵、反对称矩阵和正交矩阵以及它们的性质.</li>
<li>掌握矩阵的线性运算、乘法、转置以及它们的运算规律，了解方阵的幂与方阵乘积的行列式的性质.</li>
<li>理解逆矩阵的概念，掌握逆矩阵的性质以及矩阵可逆的充分必要条件.理解伴随矩阵的概念，会用伴随矩阵求逆矩阵.</li>
<li>了解矩阵初等变换的概念，了解初等矩阵的性质和矩阵等价的概念，理解矩阵的秩的概念，掌握用初等变换求矩阵的秩和逆矩阵的方法.</li>
<li>了解分块矩阵及其运算.</li>
</ol>
<h3 id="向量-2"><a class="header-anchor" href="#向量-2">.</a>向量</h3>
<p>考试内容：</p>
<ul>
<li>向量的概念</li>
<li>向量的线性组合和线性表示</li>
<li>向量组的线性相关与线性无关</li>
<li>向量组的极大线性无关组</li>
<li><a href="https://baike.baidu.com/item/%E7%AD%89%E4%BB%B7%E5%90%91%E9%87%8F%E7%BB%84/1267576">等价向量组</a></li>
<li>向量组的秩</li>
<li>向量组的秩与矩阵的秩之间的关系</li>
<li>向量的内积</li>
<li>线性无关向量组的正交规范化方法</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解n维向量、向量的线性组合与线性表示的概念.</li>
<li>理解向量组线性相关、线性无关的概念，掌握向量组线性相关、线性无关的有关性质及判别法.</li>
<li>了解向量组的极大线性无关组和向量组的秩的概念，会求向量组的极大线性无关组及秩.</li>
<li>了解向量组等价的概念，了解矩阵的秩与其行（列）向量组的秩的关系.</li>
<li>了解内积的概念，掌握线性无关向量组正交规范化的施密特（Schmidt）方法.</li>
</ol>
<h3 id="线性方程组-2"><a class="header-anchor" href="#线性方程组-2">.</a>线性方程组</h3>
<p>考试内容：</p>
<ul>
<li>线性方程组的克莱姆（Cramer）法则</li>
<li>齐次线性方程组有非零解的充分必要条件</li>
<li>非齐次线性方程组有解的充分必要条件</li>
<li>线性方程组解的性质和解的结构</li>
<li>齐次线性方程组的基础解系和通解</li>
<li>非齐次线性方程组的通解</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>会用克莱姆法则.</li>
<li>理解齐次线性方程组有非零解的充分必要条件及非齐次线性方程组有解的充分必要条件.</li>
<li>理解齐次线性方程组的基础解系及通解的概念，掌握齐次线性方程组的基础解系和通解的求法.</li>
<li>理解非齐次线性方程组的解的结构及通解的概念.</li>
<li>会用初等行变换求解线性方程组.</li>
</ol>
<h3 id="矩阵的特征值和特征向量-2"><a class="header-anchor" href="#矩阵的特征值和特征向量-2">.</a>矩阵的特征值和特征向量</h3>
<p>考试内容：</p>
<ul>
<li>矩阵的特征值和特征向量的概念、性质</li>
<li>相似矩阵的概念及性质</li>
<li>矩阵可相似对角化的充分必要条件及相似对角矩阵</li>
<li>实对称矩阵的特征值、特征向量及其相似对角矩阵</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解矩阵的特征值和特征向量的概念及性质，会求矩阵的特征值和特征向量.</li>
<li>理解相似矩阵的概念、性质及矩阵可相似对角化的充分必要条件，掌握将矩阵化为相似对角矩阵的方法.</li>
<li>掌握实对称矩阵的特征值和特征向量的性质.</li>
</ol>
<h3 id="二次型-2"><a class="header-anchor" href="#二次型-2">.</a>二次型</h3>
<p>考试内容：</p>
<ul>
<li>二次型及其矩阵表示</li>
<li>合同变换与合同矩阵</li>
<li>二次型的秩</li>
<li>惯性定理</li>
<li>二次型的标准形和规范形用正交变换和配方法化二次型为标准形</li>
<li>二次型及其矩阵的正定性</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>掌握二次型及其矩阵表示，了解二次型秩的概念，了解合同变换与合同矩阵的概念，了解二次型的标准形、规范形的概念以及惯性定理.</li>
<li>掌握用正交变换化二次型为标准形的方法，会用配方法化二次型为标准形.</li>
<li>理解正定二次型、正定矩阵的概念，并掌握其判别法</li>
</ol>
<h2 id="其他"><a class="header-anchor" href="#其他">.</a>其他</h2>
<h3 id="导函数"><a class="header-anchor" href="#导函数">.</a>导函数</h3>
<p>注：来源于 <a href="https://blog.csdn.net/sunbobosun56801/article/details/77892321">数学笔记——导数1(导数的基本概念)_我是8位的-CSDN博客_导数的概念</a></p>
<p>从物理意义上讲，导数就是求解变化率的问题；从几何意义上讲，导数就是求函数在某一点上的切线的斜率。</p>
<p>我们熟知的速度公式：v = s/t，这求解的是平均速度，实际上往往需要知道瞬时速度：</p>
<p>$$<br />
v = \frac{ s-s_{0} }{ t-t_{0} }<br />
$$<br />
　　当t趋近于t0，即t-t0趋近于0时，得到的就是顺时速度。设Δt=t-t0，s是t的函数s=f(t)，瞬时速度用数学表示就是：</p>
<p>$$<br />
v=\lim_{\Delta t \to 0} \frac{ f(t)-f(t_{0}) }{ \Delta t }<br />
$$<br />
　　从几何意义上讲，导数是函数在某一点处的切线的斜率：</p>
<p><img data-src="https://img-61.oss-cn-shanghai.aliyuncs.com/img/PicGo/dao_shu_qie_xian.png" alt="dao_shu_qie_xian" /></p>
<pre><code>	直线a与曲线相切于点Q，直线b与曲线相割于点Q和点P。b的斜率是k=(y-y0)/(x-x0)，当b以Q为轴心沿着曲线旋转时，铉长|PQ|趋近于0，即x→x0时，极限存在：
</code></pre>
<p>$$<br />
k = \lim_{x \to x_{0}} \frac{ y-y_{0} }{ x-x_{0} }<br />
$$<br />
由上述两个问题可以看出，变化率和切线的问题都可以归结为下面的公式：<br />
$$<br />
\lim <em>{x \rightarrow x</em>{0}} \frac{f(x)-f\left(x_{0}\right)}{x-x_{0}}<br />
$$<br />
　　令Δx = x-x0, Δy = y - y0 = f(x) – f(x0) = f(x0 + Δx) - f(x0)，上面的公式可以写成：<br />
$$<br />
\lim <em>{\Delta x \rightarrow 0} \frac{\Delta y}{\Delta x} \text { 或 } \lim <em>{\Delta x \rightarrow 0} \frac{f\left(x</em>{0}+\Delta x\right)-f\left(x</em>{0}\right)}{\Delta x}<br />
$$<br />
由此得出导数的概念，设函数y=f(x)在点x0的某个邻域内有定义，当自变量x在x0处取得增量Δx，且x0+Δx仍在该邻域内时，y取得增量Δy；如果Δy与Δx之比在Δx→0时存在极限，则称函数y=f(x)在点x0处可导，并称这个极限为函数y=f(x)在点x0处的导数，记作f’(x0) ：<br />
$$<br />
f’(x_{0}) = \lim_{\Delta x \to 0} \frac{ \Delta y}{ \Delta x } = \lim_{\Delta x \to 0} \frac{ f(x_{0}+\Delta x)-f(x_{0}) }{\Delta x }<br />
$$</p>
<div class="tabs" id="dao-shu"><ul class="nav-tabs"><li class="tab active"><a href="#dao-shu-1">1/x求导</a></li></ul><div class="tab-content"><div class="tab-pane active" id="dao-shu-1"><p>例如，1/x求导</p>
<p>根据导数公式，代入f(x) = 1/x</p>
<p>$$<br />
f^{\prime}(x)=\lim _{\Delta x \rightarrow 0} \frac{\frac{1}{x+\Delta x}-\frac{1}{x}}{\Delta x}<br />
$$<br />
　　这就OK了，所以说导数很简单，因为它仅有一个公式。但没完，因为上式没有任何意义，仅仅是看起来更复杂了。如果我们直接观察导数公式，对于所有求导，当Δx→0时，分母都为0，所以必须将导数进一步简化。</p>
<p>$$<br />
\begin{array}{c}<br />
\frac{\frac{1}{x+\Delta x}-\frac{1}{x}}{\Delta x}=\frac{1}{\Delta x}\left(\frac{1}{x+\Delta x}-\frac{1}{x}\right)= \<br />
\frac{1}{\Delta x}\left(\frac{-\Delta x}{(x+\Delta x) x}\right)=\frac{-1}{x^{2}+x \Delta x}  \<br />
f^{\prime}(x)=\lim _{\Delta x \rightarrow 0} \frac{-1}{x^{2}+x \Delta x}=\frac{-1}{x^{2}}<br />
\end{array}<br />
$$<br />
　　 “求f(x)的导数”或“对f(x)求导”有两种解释，一种是求f(x)的导函数，此时的结果是一个函数；另一种是求f(x)在定义域某一点的导数，此时的结果是将该点的值代入导函数，最终得到一个具体的数值。</p></div></div></div>
<h4 id="基本初等函数的导数"><a class="header-anchor" href="#基本初等函数的导数">.</a>基本初等函数的导数</h4>
<table>
<thead>
<tr>
<th><strong>函数</strong></th>
<th><strong>原函数</strong></th>
<th><strong>导函数</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%B8%B8%E5%87%BD%E6%95%B0">常函数</a></strong>（即<a href="https://baike.baidu.com/item/%E5%B8%B8%E6%95%B0">常数</a>）</td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/6f48ec146bf185699bc793e94d05f60c.svg" alt="img" /> （***C***为常数)</td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/5e230f5a0da4d25df0aa7e2d5516e42a.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E6%8C%87%E6%95%B0%E5%87%BD%E6%95%B0">指数函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/e3ce5e293d27391048a34d21dcfc3567.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/c21a21b4809f4409f9ef5eacd103a67b.svg" alt="img" /></td>
</tr>
<tr>
<td></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/05e9641809287619ff141f1164b91e53.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/06e6eb3b4a0424439aa9f5b6a7777dd1.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%B9%82%E5%87%BD%E6%95%B0">幂函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/ef7655a674eb56e73d9d99106359cacc.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/77959c08aecc6b58d6ee46e034a28371.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%AF%B9%E6%95%B0%E5%87%BD%E6%95%B0">对数函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/e3a5370faa1c321a77c71dd984575883.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/31d55db131061436c43da6fa49521c6c.svg" alt="img" /></td>
</tr>
<tr>
<td></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/8b558ab39806296fad8e943051cbbcc0.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/04522b1455260aae6b2cd8fcbf4e38a0.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E6%AD%A3%E5%BC%A6%E5%87%BD%E6%95%B0">正弦函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/0f2cbbfff8dfdeb1795031afd5f4a447.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/9b173723cd04f95cfe4baf428379aad7.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E4%BD%99%E5%BC%A6%E5%87%BD%E6%95%B0">余弦函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/30270e38ed05100aa0d81333c4e23c7b.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/dc299b291d088d3610622cd8b0fc1ac6.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E6%AD%A3%E5%88%87%E5%87%BD%E6%95%B0">正切函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/0dd48f9fe0bac0914637e5681228b6b3.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/f5384f2521c4739922680bd28169b921.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E4%BD%99%E5%88%87%E5%87%BD%E6%95%B0">余切函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/268e7f44dade45f540c5b7c7b1cbe1a2.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/4cfb86aa2f73f9515e04e8f524fa119e.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E6%AD%A3%E5%89%B2%E5%87%BD%E6%95%B0">正割函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/ea45be3b8ffb045e9fb3d47302b51821.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/6898483dc7d7c955731191e622149a14.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E4%BD%99%E5%89%B2%E5%87%BD%E6%95%B0">余割函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/a2970da37d9e09326df1d5d179731f0b.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/c05bee31e3e0544ce7249db303a6d9b9.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%8F%8D%E6%AD%A3%E5%BC%A6%E5%87%BD%E6%95%B0">反正弦函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/a8ed3000d5b75b60f541968571db44ed.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/c41fb542290f578b45c5ed357218b457.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%8F%8D%E4%BD%99%E5%BC%A6%E5%87%BD%E6%95%B0">反余弦函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/be4fe67defefcb2eac6169117c181c75.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/133f624a66aacaf29fb99b9a817e5243.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%8F%8D%E6%AD%A3%E5%88%87%E5%87%BD%E6%95%B0">反正切函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/e205cc5545e96047c124a85cfd2ffd4b.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/cbd133df57d7a708144f6d6045437cb7.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%8F%8D%E4%BD%99%E5%88%87%E5%87%BD%E6%95%B0">反余切函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/5321da938d4f77b15cfd7fcb8a96708c.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/e5ea6b41b6741a475c3e935700b4e543.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%8F%8C%E6%9B%B2%E7%BA%BF%E5%87%BD%E6%95%B0">双曲线函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/10e067f173633456b45f91334f1e56ef.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/7c508809a7081cc904bd5e143e6b701a.svg" alt="img" /></td>
</tr>
</tbody>
</table>
<h3 id="反函数"><a class="header-anchor" href="#反函数">.</a>反函数</h3>
<p>一般来说，设函数y=f(x)(x∈A)的值域是C，若找得到一个函数g(y)在每一处g(y)都等于x，这样的函数x= g(y)(y∈C)叫做函数y=f(x)(x∈A)的<strong>反函数</strong>，记作x=f-1(y) 。反函数x=f -1(y)的定义域、值域分别是函数y=f(x)的值域、定义域。最具有代表性的反函数就是对数函数与指数函数。</p>
<p>例如，函数 $y=x^{3}, x \in R$ 的反函数是 $y=\sqrt[3]{x}, x \in R$</p>
<p><strong>几何意义</strong>：反函数和原函数的图象关于直线y=x对称。<br />
这是因为，如果设(a,b)是y=f(x)的图象上任意一点，即b=f(a)。根据反函数的定义，有 $a=f^{-1}(b)$ ，即点(b,a)在反函数 $y=f^{-1}(x)$ 的图象上。而点(a,b)和(b,a)关于直线y=x对称，由(a,b)的任意性可知 $f(x)$ 和 $f^{-1}(x)$ 关于y=x对称。</p>
<blockquote>
<p>求 $y=f(x)$ 的反函数 $y=f^{-1}(x)$ 的步骤：</p>
<ol>
<li>由 $y=f(x)$ 中解出 $x$ ；</li>
<li>$x,y$ 互换</li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>个人</category>
        <category>学习</category>
        <category>考研</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>考研</tag>
        <tag>高数</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-Next主题-添加与修改-功能与样式</title>
    <url>/2022/03/Hexo-Next%E4%B8%BB%E9%A2%98-%E6%B7%BB%E5%8A%A0%E4%B8%8E%E4%BF%AE%E6%94%B9-%E5%8A%9F%E8%83%BD%E4%B8%8E%E6%A0%B7%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="Hexo-Next主题-添加与修改-功能与样式"><a class="header-anchor" href="#Hexo-Next主题-添加与修改-功能与样式">.</a>Hexo-Next主题-添加与修改-功能与样式</h1>
<div class="note info"><p>NexT version ：<strong>8.10.0</strong></p>
</div>
<h2 id="文章加密访问"><a class="header-anchor" href="#文章加密访问">.</a>文章加密访问</h2>
<span id="more"></span>
<p>打开 <code>themes/next/layout/_partials/head/head.njk</code>文件，在 <code>&#123;% if theme.pace.enable %&#125;</code> 标签下面插入代码，如：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">&#123;%- <span class="keyword">if</span> theme<span class="selector-class">.pace</span><span class="selector-class">.enable</span> %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    (<span class="built_in">function</span>()&#123;</span><br><span class="line">        <span class="built_in">if</span>(<span class="string">&#x27;&#123;&#123; page.password &#125;&#125;&#x27;</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="built_in">prompt</span>(<span class="string">&#x27;请输入文章密码&#x27;</span>) !== <span class="string">&#x27;&#123;&#123; page.password &#125;&#125;&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">alert</span>(<span class="string">&#x27;密码错误&#x27;</span>);</span><br><span class="line">            history<span class="selector-class">.back</span>();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">  &#123;&#123; <span class="built_in">next_vendors</span>(<span class="string">&#x27;pace_css&#x27;</span>) &#125;&#125;</span><br><span class="line">  &#123;&#123; <span class="built_in">next_vendors</span>(<span class="string">&#x27;pace_js&#x27;</span>) &#125;&#125;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>
<p>在文章的 Front-matter 上添加新项<code>password</code>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo-Next主题-添加与修改-功能与样式</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-03-29 16:43:37</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> [<span class="string">IT</span>,<span class="string">博客</span>]</span><br><span class="line"><span class="bullet">-</span> [<span class="string">IT</span>,<span class="string">软件</span>,<span class="string">搭建与配置</span>]</span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Next</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">主题</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">配置</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<h2 id="头像链接至首页"><a class="header-anchor" href="#头像链接至首页">.</a>头像链接至首页</h2>
<p>修改 <code>themes\next\layout\_partials\sidebar\site-overview.njk</code> 文件，原位置如下：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">&#123;%- <span class="keyword">if</span> theme<span class="selector-class">.avatar</span><span class="selector-class">.url</span> %&#125;</span><br><span class="line">  &lt;<span class="selector-tag">img</span> class=<span class="string">&quot;site-author-image&quot;</span> itemprop=<span class="string">&quot;image&quot;</span> alt=<span class="string">&quot;&#123;&#123; author &#125;&#125;&quot;</span></span><br><span class="line">    <span class="attribute">src</span>=<span class="string">&quot;&#123;&#123; url_for(theme.avatar.url) &#125;&#125;&quot;</span>&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>
<p>在 &lt;img&gt; 标签前后，用 &lt;a&gt; 标签囊括，href 指向 <code>&#123;&#123; config.root &#125;&#125;</code></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"> &#123;%- <span class="keyword">if</span> theme<span class="selector-class">.avatar</span><span class="selector-class">.url</span> %&#125;</span><br><span class="line">   &lt;<span class="selector-tag">a</span> href=<span class="string">&quot;&#123;&#123; config.root &#125;&#125;&quot;</span>&gt;&lt;<span class="selector-tag">img</span> class=<span class="string">&quot;site-author-image&quot;</span> itemprop=<span class="string">&quot;image&quot;</span> alt=<span class="string">&quot;&#123;&#123; author &#125;&#125;&quot;</span></span><br><span class="line"><span class="attribute">src</span>=<span class="string">&quot;&#123;&#123; url_for(theme.avatar.url) &#125;&#125;&quot;</span>&gt;&lt;/a&gt;</span><br><span class="line"> &#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="首页不显示文章的分类信息"><a class="header-anchor" href="#首页不显示文章的分类信息">.</a>首页不显示文章的分类信息</h2>
<p>文章设置了很多分类时，在首页会显示过长的分类信息，影响观感。所以我只在点开具体文章时才显示详细分类。</p>
<p>修改 <code>themes\next\layout\_partials\post\post-meta.njk</code> 文件，原位置如下：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">&#123;%- <span class="keyword">if</span> post<span class="selector-class">.categories</span> and post<span class="selector-class">.categories</span><span class="selector-class">.length</span> and theme<span class="selector-class">.post_meta</span><span class="selector-class">.categories</span> %&#125;</span><br></pre></td></tr></table></figure>
<p>将其修改为：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">&#123;%- <span class="keyword">if</span> not is_index and post<span class="selector-class">.categories</span> and post<span class="selector-class">.categories</span><span class="selector-class">.length</span> and theme<span class="selector-class">.post_meta</span><span class="selector-class">.categories</span> %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="允许本地刷新增加阅读量"><a class="header-anchor" href="#允许本地刷新增加阅读量">.</a>允许本地刷新增加阅读量</h2>
<p>本项修改仅针对使用 <strong>leancloud</strong> 进行文章阅读量统计的人，而且好像也修复了 leancloud 不能用的问题。</p>
<p>修改 <code>themes\next\source\js\third-party\statistics\lean-analytics.js</code> 文件，原位置如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable constant_">CONFIG</span>.<span class="property">page</span>.<span class="property">isPost</span>) &#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable constant_">CONFIG</span>.<span class="property">hostname</span> !== location.<span class="property">hostname</span>) <span class="keyword">return</span>;</span><br><span class="line">	<span class="title function_">addCount</span>(<span class="title class_">Counter</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.post-title-link&#x27;</span>).<span class="property">length</span> &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">	<span class="title function_">showTime</span>(<span class="title class_">Counter</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注释掉<code>if (CONFIG.hostname !== location.hostname) return;</code>，即可</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable constant_">CONFIG</span>.<span class="property">page</span>.<span class="property">isPost</span>) &#123;</span><br><span class="line">	<span class="comment">// if (CONFIG.hostname !== location.hostname) return;</span></span><br><span class="line">	<span class="title function_">addCount</span>(<span class="title class_">Counter</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.post-title-link&#x27;</span>).<span class="property">length</span> &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">	<span class="title function_">showTime</span>(<span class="title class_">Counter</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="文章时效性提示"><a class="header-anchor" href="#文章时效性提示">.</a>文章时效性提示</h2>
<blockquote><p>技术性文章往往存在时效性的问题，比如某些文章会介绍一些临时解决方案，但随着时间推移可能已经失效了。我们可以通过判断发布时间（即文章设置的 <code>date</code>）与当前时间的间隔，来为文章开头插入一条提示。</p>
<footer><strong>张凯强, -</strong><cite><a href="https://hexo.fluid-dev.com/posts/hexo-injector/">通过 Hexo 5 注入器为主题添加新功能</a></cite></footer></blockquote>
<p>效果如下：</p>
<div class="note warning"><h4 id="文章时效性提示-2"><a class="header-anchor" href="#文章时效性提示-2">.</a>文章时效性提示</h4>
<p>这是一篇发布于 xxx 天前的文章，部分信息可能已发生改变，请注意甄别。</p>
</div>
<ol>
<li>
<p>首先在hexo根目录/source文件夹中创建<code>js</code>文件夹，并在js文件夹中创建<code>date_to_now.js</code>文件。</p>
</li>
<li>
<p>在<code>date_to_now.js</code>文件中添加以下代码：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> times = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;time&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (times.<span class="property">length</span> === <span class="number">0</span>) &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line">  <span class="keyword">var</span> posts = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;post-body&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (posts.<span class="property">length</span> === <span class="number">0</span>) &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> updateTime = <span class="keyword">new</span> <span class="title class_">Date</span>(times[<span class="number">1</span>].<span class="property">dateTime</span>).<span class="title function_">getTime</span>();  <span class="comment">/* 文章发布时间戳 */</span></span><br><span class="line">  <span class="keyword">var</span> nowTime = <span class="title class_">Date</span>.<span class="title function_">now</span>()  <span class="comment">/* 当前时间戳 */</span></span><br><span class="line">  <span class="keyword">var</span> interval = <span class="built_in">parseInt</span>(nowTime - updateTime)</span><br><span class="line">  <span class="comment">/* 发布时间超过指定时间（毫秒）（30天） */</span></span><br><span class="line">  <span class="keyword">if</span> (interval &gt; <span class="number">30</span>*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> days = <span class="built_in">parseInt</span>(interval / <span class="number">86400000</span>)</span><br><span class="line">    posts[<span class="number">0</span>].<span class="property">innerHTML</span> = <span class="string">&#x27;&lt;div class=&quot;note warning&quot;&gt;&lt;p&gt;&#x27;</span> +</span><br><span class="line">      <span class="string">&#x27;&lt;h4&gt;文章时效性提示&lt;/h4&gt;&lt;p&gt;这是一篇发布于 &#x27;</span> + days + <span class="string">&#x27; 天前的文章，部分信息可能已发生改变，请注意甄别。&#x27;</span> +</span><br><span class="line">      <span class="string">&#x27;&lt;/p&gt;&lt;/p&gt;&lt;/div&gt;&#x27;</span> + posts[<span class="number">0</span>].<span class="property">innerHTML</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>然后在hexo根目录创建文件夹 <code>scripts</code>，hexo会自动使用该文件夹下的脚本</p>
</li>
<li>
<p>在<code>scripts</code>文件夹中创建文件<code>injector.js</code> ，添加以下代码：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">injector</span>.<span class="title function_">register</span>(<span class="string">&#x27;body_end&#x27;</span>, <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;script src=&quot;/js/date_to_now.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">`</span>)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="添加代码折叠功能"><a class="header-anchor" href="#添加代码折叠功能">.</a>添加代码折叠功能</h2>
<p><a href="https://www.toimc.com/hexo-usage-2/">原文</a></p>
<h3 id="实现折叠的主代码"><a class="header-anchor" href="#实现折叠的主代码">.</a>实现折叠的主代码</h3>
<p>在 <code>themes\next\source\js</code> 文件夹下，新建文件 <code>code-unfold.js</code> ，添加以下代码：</p>
<figure class="highlight js"><figcaption><span>代码折叠</span><a href="/downloads/code/code-unfold.js">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="variable constant_">CODE_MAX_HEIGHT</span> = <span class="number">500</span>;</span><br><span class="line"><span class="keyword">var</span> containers = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 展开</span></span><br><span class="line">$(<span class="string">&#x27;body&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;.js_unfold_code_btn&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) {</span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">closest</span>(<span class="string">&#x27;.js_highlight_container&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;on&#x27;</span>);</span><br><span class="line">});</span><br><span class="line"><span class="comment">// 收起</span></span><br><span class="line">$(<span class="string">&#x27;body&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;.js_retract_code_btn&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) {</span><br><span class="line">  <span class="keyword">var</span> $container = $(<span class="variable language_">this</span>).<span class="title function_">closest</span>(<span class="string">&#x27;.js_highlight_container&#x27;</span>).<span class="title function_">removeClass</span>(<span class="string">&#x27;on&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> winTop = $(<span class="variable language_">window</span>).<span class="title function_">scrollTop</span>();</span><br><span class="line">  <span class="keyword">var</span> offsetTop = $container.<span class="title function_">offset</span>().<span class="property">top</span>;</span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">css</span>(<span class="string">&#x27;top&#x27;</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> (winTop &gt; offsetTop) {</span><br><span class="line">    <span class="comment">// 设置滚动条位置</span></span><br><span class="line">    $(<span class="string">&#x27;body, html&#x27;</span>).<span class="title function_">animate</span>({</span><br><span class="line">      <span class="attr">scrollTop</span>: $container.<span class="title function_">offset</span>().<span class="property">top</span> - <span class="variable constant_">CODE_MAX_HEIGHT</span></span><br><span class="line">    }, <span class="number">600</span>);</span><br><span class="line">  }</span><br><span class="line">});</span><br><span class="line"><span class="comment">// 滚动事件，触发动画效果</span></span><br><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">on</span>(<span class="string">&#x27;scroll&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) {</span><br><span class="line">  <span class="keyword">var</span> scrollTop = $(<span class="variable language_">window</span>).<span class="title function_">scrollTop</span>();</span><br><span class="line">  <span class="keyword">var</span> temp = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; containers.<span class="property">length</span>; i++) {</span><br><span class="line">    <span class="keyword">var</span> item = containers[i];</span><br><span class="line">    <span class="keyword">var</span> { $container, height, $hide, hasHorizontalScrollbar } = item;</span><br><span class="line">    <span class="keyword">if</span> ($container.<span class="title function_">closest</span>(<span class="string">&#x27;body&#x27;</span>).<span class="property">length</span> === <span class="number">0</span>) {</span><br><span class="line">      <span class="comment">// 如果 $container 元素已经不在页面上, 则删除该元素</span></span><br><span class="line">      <span class="comment">// 防止pjax页面跳转之后，元素未删除</span></span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    }</span><br><span class="line">    temp.<span class="title function_">push</span>(item);</span><br><span class="line">    <span class="keyword">if</span> (!$container.<span class="title function_">hasClass</span>(<span class="string">&#x27;on&#x27;</span>)) {</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">var</span> offsetTop = $container.<span class="title function_">offset</span>().<span class="property">top</span>;</span><br><span class="line">    <span class="keyword">var</span> hideBtnHeight = $hide.<span class="title function_">outerHeight</span>();</span><br><span class="line">    <span class="comment">// 减去按钮高度，减去底部滚动条高度</span></span><br><span class="line">    <span class="keyword">var</span> maxTop = <span class="built_in">parseInt</span>(height - (hasHorizontalScrollbar ? <span class="number">17</span> : <span class="number">0</span>) - hideBtnHeight);</span><br><span class="line">    <span class="keyword">let</span> top = <span class="built_in">parseInt</span>(</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">min</span>(</span><br><span class="line">        <span class="title class_">Math</span>.<span class="title function_">max</span>(scrollTop - offsetTop, <span class="number">0</span>), <span class="comment">// 如果小于 0 ，则取 0</span></span><br><span class="line">        maxTop,<span class="comment">// 如果大于 height ，则取 height</span></span><br><span class="line">      )</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 根据 sin 曲线设置&quot;收起代码&quot;位置</span></span><br><span class="line">    <span class="keyword">var</span> halfHeight = <span class="built_in">parseInt</span>($(<span class="variable language_">window</span>).<span class="title function_">height</span>() / <span class="number">2</span> * <span class="title class_">Math</span>.<span class="title function_">sin</span>((top / maxTop) * <span class="number">90</span> * (<span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>/<span class="number">360</span>)));</span><br><span class="line">    $hide.<span class="title function_">css</span>(<span class="string">&#x27;top&#x27;</span>, <span class="title class_">Math</span>.<span class="title function_">min</span>(top + halfHeight, maxTop));</span><br><span class="line">  }</span><br><span class="line">  containers = temp;</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加隐藏容器</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addCodeWrap</span>(<span class="params">$node</span>) {</span><br><span class="line">  <span class="keyword">var</span> $container = $node.<span class="title function_">wrap</span>(<span class="string">&#x27;&lt;div class=&quot;js_highlight_container highlight-container&quot;&gt;&lt;div class=&quot;highlight-wrap&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span>).<span class="title function_">closest</span>(<span class="string">&#x27;.js_highlight_container&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 底部 &quot;展开代码&quot; 与 侧边栏 &quot;收起代码&quot;</span></span><br><span class="line">  <span class="keyword">var</span> $btn = $(<span class="string">`</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;highlight-footer&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;a class=&quot;js_unfold_code_btn show-btn&quot; href=&quot;javascript:;&quot;&gt;展开代码&lt;i class=&quot;fa fa-angle-down&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;a class=&quot;js_retract_code_btn hide-btn&quot; href=&quot;javascript:;&quot;&gt;&lt;i class=&quot;fa fa-angle-up&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;收起代码&lt;/a&gt;</span></span><br><span class="line"><span class="string">  `</span>);</span><br><span class="line"></span><br><span class="line">  $container.<span class="title function_">append</span>($btn);</span><br><span class="line">  <span class="keyword">return</span> $container;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">codeUnfold</span> () {</span><br><span class="line">  $(<span class="string">&#x27;.highlight&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span> (<span class="params"></span>) {</span><br><span class="line">    <span class="comment">// 防止重复渲染</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">__render__</span> === <span class="literal">true</span>) {</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">__render__</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">var</span> $this = $(<span class="variable language_">this</span>);</span><br><span class="line">    <span class="keyword">var</span> height = $(<span class="variable language_">this</span>).<span class="title function_">outerHeight</span>();</span><br><span class="line">    <span class="keyword">if</span> (height &gt; <span class="variable constant_">CODE_MAX_HEIGHT</span>) {</span><br><span class="line">      <span class="comment">// 添加展开&amp;收起容器</span></span><br><span class="line">      <span class="keyword">var</span> $container = <span class="title function_">addCodeWrap</span>($this, height);</span><br><span class="line">      containers.<span class="title function_">push</span>({</span><br><span class="line">        $container,</span><br><span class="line">        height,</span><br><span class="line">        <span class="attr">$hide</span>: $container.<span class="title function_">find</span>(<span class="string">&#x27;.js_retract_code_btn&#x27;</span>),</span><br><span class="line">        <span class="attr">hasHorizontalScrollbar</span>: <span class="variable language_">this</span>.<span class="property">scrollWidth</span> &gt; <span class="variable language_">this</span>.<span class="property">offsetWidth</span>,</span><br><span class="line">      });</span><br><span class="line">    }</span><br><span class="line">  });</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
<h3 id="启用Jquery"><a class="header-anchor" href="#启用Jquery">.</a>启用Jquery</h3>
<ul>
<li>
<p>方案一：</p>
<p>修改配置：在 <strong>Next 主题配置文件</strong>中，将 <code>fancybox</code> 项设为 true 。如下：</p>
  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>因为fancybox会依赖jquery，所以设置成<code>true</code>时，就会启用jquery。</p>
</li>
<li>
<p>方案二：在<code>next</code>主题全局引用jquery</p>
</li>
</ul>
<h3 id="引用-code-unfold-js"><a class="header-anchor" href="#引用-code-unfold-js">.</a>引用 code-unfold.js</h3>
<p>修改文件<code>themes/next/layout/_scripts/index.njk</code>，在最后面添加以下代码：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">&#123;# 代码折叠 #&#125;</span><br><span class="line">&#123;%- <span class="keyword">if</span> theme<span class="selector-class">.code_unfold</span> %&#125;</span><br><span class="line">  &#123;&#123;- <span class="built_in">next_js</span>(<span class="string">&#x27;code-unfold.js&#x27;</span>) &#125;&#125;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>
<p>修改文件<code>themes/next/source/js/next-boot.js</code>，仿造如下格式，添加代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">NexT</span>.<span class="property">boot</span>.<span class="property">refresh</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 代码折叠</span></span><br><span class="line">  <span class="title function_">codeUnfold</span>();</span><br></pre></td></tr></table></figure>
<h3 id="添加样式"><a class="header-anchor" href="#添加样式">.</a>添加样式</h3>
<p>在<code>theme/next/source/css/_common/components</code>目录下，新建文件 <code>highlight.styl</code> ，添加以下代码：</p>
<figure class="highlight js"><figcaption><span>样式</span><a href="/downloads/code/highlight.styl">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">// 展开收起效果</span></span><br><span class="line">.<span class="property">highlight</span>-container</span><br><span class="line">  <span class="attr">position</span>: relative</span><br><span class="line">  background-<span class="attr">color</span>: highlight-background</span><br><span class="line">  &amp;.<span class="property">on</span></span><br><span class="line">    .<span class="property">highlight</span>-footer</span><br><span class="line">      <span class="attr">display</span>: none</span><br><span class="line">    .<span class="property">hide</span>-btn</span><br><span class="line">      <span class="attr">display</span>: flex</span><br><span class="line">    .<span class="property">highlight</span>-wrap</span><br><span class="line">      max-<span class="attr">height</span>: none</span><br><span class="line">  .<span class="property">highlight</span>-wrap</span><br><span class="line">    <span class="attr">overflow</span>: hidden</span><br><span class="line">    max-<span class="attr">height</span>: 508px</span><br><span class="line">  .<span class="property">highlight</span>-footer</span><br><span class="line">    position absolute</span><br><span class="line">    <span class="attr">width</span>: <span class="number">100</span>%</span><br><span class="line">    <span class="attr">left</span>: <span class="number">0</span></span><br><span class="line">    <span class="attr">bottom</span>: <span class="number">0</span></span><br><span class="line">    <span class="attr">height</span>: 60px</span><br><span class="line">    background-<span class="attr">image</span>: <span class="string">&#x27;linear-gradient(-180deg, rgba(255,255,255,0) 0%, %s 65%)&#x27;</span> % highlight-background;</span><br><span class="line">    text-<span class="attr">align</span>: center</span><br><span class="line">  .<span class="property">show</span>-btn</span><br><span class="line">    font-<span class="attr">size</span>: 20px</span><br><span class="line">    <span class="attr">color</span>: #fff</span><br><span class="line">    <span class="attr">position</span>: absolute</span><br><span class="line">    <span class="attr">left</span>: <span class="number">50</span>%</span><br><span class="line">    <span class="attr">transform</span>: <span class="title function_">translateX</span>(-<span class="number">50</span>%)</span><br><span class="line">    <span class="attr">bottom</span>: <span class="number">0</span></span><br><span class="line">    line-<span class="attr">height</span>: 2em</span><br><span class="line">    text-<span class="attr">decoration</span>: none</span><br><span class="line">    <span class="attr">padding</span>: <span class="number">0</span> <span class="number">0.</span>8em</span><br><span class="line">    text-<span class="attr">align</span>: center</span><br><span class="line">    border-<span class="attr">radius</span>: 4px 4px <span class="number">0</span></span><br><span class="line">    &amp;:hover</span><br><span class="line">      text-<span class="attr">decoration</span>: none</span><br><span class="line">  .<span class="property">hide</span>-btn</span><br><span class="line">    <span class="attr">color</span>: #fff</span><br><span class="line">    font-<span class="attr">size</span>: 20px</span><br><span class="line">    <span class="attr">width</span>: 28px</span><br><span class="line">    <span class="attr">position</span>: absolute</span><br><span class="line">    <span class="attr">left</span>: -28px</span><br><span class="line">    <span class="attr">top</span>: <span class="number">0</span></span><br><span class="line">    line-<span class="attr">height</span>: 1em</span><br><span class="line">    text-<span class="attr">decoration</span>: none</span><br><span class="line">    text-<span class="attr">align</span>: center</span><br><span class="line">    <span class="attr">display</span>: none</span><br><span class="line">    flex-<span class="attr">direction</span>: column</span><br><span class="line">    background-<span class="attr">color</span>: highlight-background</span><br><span class="line">    border-<span class="attr">radius</span>: 4px <span class="number">0</span> <span class="number">0</span> 4px</span><br><span class="line">    <span class="attr">padding</span>: <span class="number">0.</span>1em <span class="number">0</span> <span class="number">0.</span>6em</span><br><span class="line">    <span class="attr">transition</span>: top ease <span class="number">0.</span>35s</span><br><span class="line">  .<span class="property">fa</span>-angle-up,</span><br><span class="line">  .<span class="property">fa</span>-angle-down</span><br><span class="line">    font-<span class="attr">style</span>: normal</span><br><span class="line">    <span class="attr">color</span>: #fff</span><br><span class="line">  .<span class="property">fa</span>-angle-<span class="attr">up</span>:before</span><br><span class="line">    <span class="attr">content</span>:<span class="string">&quot;\f106&quot;</span></span><br><span class="line">  .<span class="property">fa</span>-angle-<span class="attr">down</span>:before</span><br><span class="line">    <span class="attr">content</span>:<span class="string">&quot;\f107&quot;</span></span><br><span class="line">    margin-<span class="attr">left</span>: <span class="number">0.</span>5em</span><br><span class="line">  .<span class="property">js_unfold_code_btn</span>, .<span class="property">js_retract_code_btn</span></span><br><span class="line">    <span class="attr">background</span>: <span class="title function_">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>)</span><br><span class="line">    border-<span class="attr">bottom</span>: none !important</span><br><span class="line">    &amp;:hover</span><br><span class="line">      border-bottom-<span class="attr">color</span>: none !important</span><br></pre></td></tr></table></figure>
<h3 id="引用样式"><a class="header-anchor" href="#引用样式">.</a>引用样式</h3>
<p>修改文件<code>themes/next/source/css/_common/components/index.styl</code>，在最后面添加以下代码：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 代码折叠按钮样式</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;highlight&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="启用代码折叠功能"><a class="header-anchor" href="#启用代码折叠功能">.</a>启用代码折叠功能</h3>
<p>在 <strong>Next 主题配置文件</strong>中，在最后面添加以下代码：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 代码折叠</span></span><br><span class="line"><span class="comment"># 因为需要jquery，所以需要同时启用 fancybox</span></span><br><span class="line"><span class="attr">code_unfold:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h2 id="更换渲染器"><a class="header-anchor" href="#更换渲染器">.</a>更换渲染器</h2>
<div class="note info"><p>在 Hexo 根目录下执行以下操作。</p>
</div>
<ol>
<li>
<p>卸载 Hexo 默认自带的 Markdown 渲染器</p>
<p><code>npm uninstall hexo-renderer-marked --save</code></p>
</li>
<li>
<p>安装 <code>hexo-renderer-markdown-it</code> 插件</p>
<p><code>npm install hexo-renderer-markdown-it --save</code></p>
</li>
</ol>
<h3 id="为文章标题添加锚点"><a class="header-anchor" href="#为文章标题添加锚点">.</a>为文章标题添加锚点</h3>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br></pre></td></tr></table></figure>
<p>在hexo根目录下的 <code>_config.yml</code> ，<code>## Plugins: https://hexo.io/plugins/</code>下面添加以下代码</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Markdown-it 渲染器设置</span></span><br><span class="line"><span class="comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="comment"># 控制 Markdown 文档中的 HTML 内容是否直接渲染, 如果为 true 则表示直接使用 HTML 输出, 如果为 false 则表示对 HTML 内容转意为纯文本.</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># HTML 输出时将其兼容为 XHTML.</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">quotes:</span> <span class="string">&#x27;“”‘’&#x27;</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span>        <span class="comment"># &lt;abbr&gt;标签支持</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span>    <span class="comment"># 脚注</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-ins</span>         <span class="comment"># 支持插入标签&lt;del&gt;&lt;/del&gt;&lt;ins&gt;&lt;/ins&gt;/~~~~++++</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span>         <span class="comment"># 支持下标</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span>         <span class="comment"># 支持上标</span></span><br><span class="line">    <span class="comment">#- markdown-it-emoji       # 支持emoji表情</span></span><br><span class="line">    <span class="comment"># - markdown-it-checkbox    # 本行启用了 checkbox 插件</span></span><br><span class="line">  <span class="attr">anchors:</span></span><br><span class="line">    <span class="comment"># 将从设置的数值的标题开始添加锚点</span></span><br><span class="line">    <span class="attr">level:</span> <span class="number">1</span></span><br><span class="line">    <span class="comment"># 处理重复ID</span></span><br><span class="line">    <span class="comment"># collisionSuffix: &#x27;v&#x27;:如果这样设置假设markdown文档中有两个#### 1则对应的锚点为http://example.com/#1和http://example.com/#1-v2</span></span><br><span class="line">    <span class="attr">collisionSuffix:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 将在标题处创建锚点</span></span><br><span class="line">    <span class="attr">permalink:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">permalinkClass:</span> <span class="string">header-anchor</span></span><br><span class="line">    <span class="comment"># 设置为left则锚点符号将出现在标题前，而如果设置为right则锚点符号将出现与文章后。</span></span><br><span class="line">    <span class="attr">permalinkSide:</span> <span class="string">&#x27;left&#x27;</span></span><br><span class="line">    <span class="attr">permalinkSymbol:</span> <span class="string">&#x27;.&#x27;</span></span><br><span class="line">    <span class="comment"># 转换锚点 ID 中的字母为大写或小写 # &quot;0&quot; 不转换, &quot;1&quot; 为小写, &quot;2&quot; 为大写.</span></span><br><span class="line">    <span class="attr">case:</span> <span class="number">0</span> </span><br><span class="line">    <span class="comment"># 用于替换空格的符号. # 默认为 &quot;-&quot;</span></span><br><span class="line">    <span class="attr">separator:</span> <span class="string">&#x27;-&#x27;</span> </span><br></pre></td></tr></table></figure>
<h3 id="添加emoji表情支持"><a class="header-anchor" href="#添加emoji表情支持">.</a>添加emoji表情支持</h3>
<p>下载 markdown-it 的 markdown-it-emoji 插件：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install markdown<span class="literal">-it-emoji</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure>
<p>在hexo根目录下的 <code>_config.yml</code> ，<code>markdown - plugins</code> 项下添加以下代码：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">markdown-it-emoji</span>       <span class="comment"># 支持emoji表情</span></span><br></pre></td></tr></table></figure>
<h2 id="样式的添加与修改"><a class="header-anchor" href="#样式的添加与修改">.</a>样式的添加与修改</h2>
<p>要进行样式的编辑，首先需要在 <strong>Next 主题配置文件</strong>中，取消 <code>custom_file_path</code> 项中 <code>style</code> 的注释。如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>
<p>然后在 <code>hexo根目录/source</code> 目录下创建 <code>_data/</code> 文件夹，并在其目录下创建 <code>styles.styl</code> 文件，具体路径：<code>source/_data/styles.styl</code></p>
<h3 id="添加背景图"><a class="header-anchor" href="#添加背景图">.</a>添加背景图</h3>
<p>在 <code>source/_data/styles.styl</code> 文件中插入如下代码：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:url(/images/background.jpg);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;   <span class="comment">// 不重复</span></span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed;    <span class="comment">// 填充</span></span><br><span class="line">    <span class="attribute">background-size</span>: cover;         <span class="comment">// 覆盖</span></span><br><span class="line">    <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;    <span class="comment">// 定位</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>在 <code>source/images</code> 文件夹下，添加一张名为 <code>backgroud.jpg</code> 的图片</p>
<h3 id="添加透明样式"><a class="header-anchor" href="#添加透明样式">.</a>添加透明样式</h3>
<p>在 <code>source/_data/styles.styl</code> 文件中插入如下代码：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 亮色模式下的样式设置</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">prefers-color-scheme</span>: light) &#123;</span><br><span class="line">  <span class="comment">// 文章内容的透明度设置</span></span><br><span class="line">  <span class="selector-class">.post-block</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.85</span>) none repeat scroll <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 侧边框的透明度设置</span></span><br><span class="line">  <span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 菜单栏的透明度设置</span></span><br><span class="line">  <span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.85</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 搜索框（local-search）的透明度设置</span></span><br><span class="line">  <span class="selector-class">.popup</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.95</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 深色模式下的样式设置</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">prefers-color-scheme</span>: dark) &#123;</span><br><span class="line">  <span class="selector-class">.post-block</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: rgba(<span class="number">51</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">0.85</span>) none repeat scroll <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.85</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: rgba(<span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">0.85</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="返回顶部-按钮变大"><a class="header-anchor" href="#返回顶部-按钮变大">.</a>返回顶部 按钮变大</h3>
<p>在 <code>source/_data/styles.styl</code> 文件中插入如下代码：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 把返回顶部的按钮变大</span></span><br><span class="line"><span class="selector-class">.back-to-top</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>IT</category>
        <category>博客</category>
        <category>软件</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>配置</tag>
        <tag>Next</tag>
        <tag>主题</tag>
      </tags>
  </entry>
  <entry>
    <title>Unity-学习笔记</title>
    <url>/2022/04/Unity-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Unity-学习笔记"><a class="header-anchor" href="#Unity-学习笔记">.</a>Unity-学习笔记</h1>
<h2 id="Sence-“场景”视图"><a class="header-anchor" href="#Sence-“场景”视图">.</a>Sence - “场景”视图</h2>
<span id="more"></span>
<ul>
<li><strong>平移：<strong>在工具栏中选择</strong>“抓手</strong>”工具，然后在“场景”视图中单击并拖动以<strong>平面横向移动</strong>视图。</li>
<li>**缩放：**按住 <strong>Alt</strong> （Windows） 或 <strong>Option</strong> （macOS），在场景视图中右键单击并拖动以进行缩放。</li>
<li>**轴点：**按住 <strong>Alt</strong>（Windows）或 <strong>Option</strong> （macOS），左键点按并拖动以围绕当前轴点观察。（注： 此选项在 2D 模式下不可用。）</li>
<li>**焦点（帧选择）：**选择游戏对象后， 在“场景”视图中按 <strong>F</strong> 键，将视图聚焦在该游戏对象上。 <strong>注：</strong> 如果光标不在“场景”视图中，则“帧选择”将不起作用。</li>
</ul>
<h3 id="飞越模式"><a class="header-anchor" href="#飞越模式">.</a>飞越模式</h3>
<p>通过以第一人称飞来飞去，在场景视图中导航：</p>
<ul>
<li>在“场景”视图中，按住鼠标右键。</li>
<li>使用 <strong>WASD</strong> 向左/向右/向前/向后移动视图。</li>
<li>使用 <strong>Q</strong> 和 <strong>E</strong> 上下移动视图。</li>
<li>选择并按住 <strong>Shift</strong> 以加快移动速度。</li>
</ul>
<p><strong>注：</strong> 飞越模式在 2D 模式下不可用。相反，在移动光标的同时按住鼠标右键可在“场景”视图中平移。</p>
<h3 id="查看工具"><a class="header-anchor" href="#查看工具">.</a>查看工具</h3>
<p><img data-src="https://connect-cdn-public-prd.unitychina.cn/h1/20210831/learn/images/6111c17f-fed9-413c-a549-51eb325d4b25_B.2.1_img10.png.1800x0x1.png" alt="" /></p>
<p>**Q：**手动工具，用于平移视图</p>
<p>**W：**移动工具，以选择和更改位置</p>
<p>**E：**旋转工具，用于选择和旋转</p>
<p>**R：**缩放工具，用于选择和更改大小</p>
<p>**T：**矩形变换工具，以 2D 形式缩放</p>
<p>**Y：**变换工具，使用一个 Gizmo 进行移动、缩放和旋转</p>
<p>对于每个变换工具，都会显示一个 Gizmo，允许您沿每个特定轴操作游戏对象。当您操作这些控件时，转换组件中的值会相应地更改。</p>
<p><img data-src="https://connect-cdn-public-prd.unitychina.cn/h1/20210901/learn/images/dd5106e0-bda8-4473-b7ce-bdcde83f9461_3.1.11.png.1800x0x1.png" alt="" /></p>
<h2 id="Camera-摄像机"><a class="header-anchor" href="#Camera-摄像机">.</a>Camera - 摄像机</h2>
<p><strong>提示：</strong> 将摄像机与当前场景视图对齐，方法是在“层次结构”窗口中选择摄像机，然后按 Ctrl+Shift+F。</p>
<h2 id="组件"><a class="header-anchor" href="#组件">.</a>组件</h2>
<h3 id="RigidBody-刚体"><a class="header-anchor" href="#RigidBody-刚体">.</a>RigidBody - 刚体</h3>
<p>RigidBody ：控制游戏对象如何与重力和空气密度相互作用</p>
<h4 id="AddForce函数"><a class="header-anchor" href="#AddForce函数">.</a>AddForce函数</h4>
<p>给具有刚体的物体添加力</p>
<p>函数使用：void Rigidbody.AddForce()；</p>
<blockquote>
<p>AddForce()有四个重载：</p>
<ol>
<li>void Rigidbody.AddForce(vector3 Force);</li>
<li>void Rigidbody.AddForce(Vector3 Force,ForceMode mode);<br />
（其中第一个参数与第一个一样都是需要传入一个向量，第二个参数传入一个力的作用模式）</li>
<li>void Rigidbody.AddForce(float x,float y,float z);</li>
<li>void Rigidbody.AddForce(float x,float y,float z，ForceMode mode);<br />
（与前两个基本一样）。</li>
</ol>
</blockquote>
<blockquote>
<p>ForceMode有四种模式：</p>
<ol>
<li>ForceMode.Acceleration</li>
<li>ForceMode.Force</li>
<li>ForceMode.Impulse</li>
<li>ForceMode.VelocityChange</li>
</ol>
</blockquote>
<p>刚体运动速度的计算公式是：f•t=m•v</p>
<p>ForceMode.Force：给物体添加一个持续的力并使用其质量。</p>
<p>ForceMode.Acceleration:：给物体添加一个持续的加速度，但是忽略其质量。即无论设置的质量为多少，都采用默认质量1</p>
<p>ForceMode.Impulse;：给物体添加一个瞬间的力并使用其质量</p>
<p>ForceMode.VelocityChange;：给物体添加一个瞬间的加速度，但是忽略其质量</p>
<h3 id="Collider-碰撞器"><a class="header-anchor" href="#Collider-碰撞器">.</a>Collider - 碰撞器</h3>
<p>Collider ：控制与其他碰撞器的碰撞或重叠事件</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>软件</category>
        <category>Games</category>
        <category>程序</category>
        <category>游戏开发</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>游戏开发</tag>
        <tag>Unity</tag>
      </tags>
  </entry>
  <entry>
    <title>游戏开发-相关笔记</title>
    <url>/2022/04/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91-%E7%9B%B8%E5%85%B3%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="游戏开发-相关笔记"><a class="header-anchor" href="#游戏开发-相关笔记">.</a>游戏开发 - 相关笔记</h1>
<h2 id="工具"><a class="header-anchor" href="#工具">.</a>工具</h2>
<span id="more"></span>
<p>实时开发中使用的最常见的 DCC 工具类型包括：</p>
<ul>
<li><strong>3D DCC</strong>是用于创建3D模型，动画角色和环境的程序；例如：<a href="https://www.autodesk.com/products/maya/overview">Maya</a>，<a href="https://pixologic.com/">ZBrush</a>和<a href="https://www.blender.org/">Blender</a>。</li>
<li>**2D DCC：**用于创建 2D 图像、插图、纹理和界面的程序；示例：<a href="https://www.adobe.com/products/photoshop.html">Photoshop</a>、<a href="https://www.adobe.com/products/illustrator.html">Illustrator</a>、<a href="https://www.substance3d.com/products/substance-painter/">Substance Painter</a> 和 <a href="https://www.gimp.org/">Gimp</a>。</li>
<li>**音频 DCC：**用于录制、编辑和混合音效和音乐的程序；示例：<a href="https://www.adobe.com/products/audition.html">Audition</a>、<a href="https://www.apple.com/logic-pro/">Logic Pro</a>、<a href="https://www.reaper.fm/">Reaper</a> 和 <a href="https://www.audacityteam.org/">Audacity</a>。</li>
<li>**集成开发环境（IDE）：**用于编写各种语言代码的程序；示例：<a href="https://visualstudio.microsoft.com/">Visual Studio</a>和<a href="https://www.jetbrains.com/rider/">Rider</a></li>
<li><strong>实时引擎</strong>：用于实时开发、渲染和发布3D内容或应用程序的程序；示例：<a href="https://unity.com/">Unity</a>和<a href="https://www.unrealengine.com/">虚幻引擎</a></li>
</ul>
<h2 id="分类"><a class="header-anchor" href="#分类">.</a>分类</h2>
<p>分为两大类：</p>
<ol>
<li>
<p><strong>艺术与设计</strong>：通过建模、动画、灯光、音频和其他效果创建项目的外观、声音和感觉</p>
<p>以下是艺术与设计的典型职位列表以及这些职位的简要说明：</p>
<ul>
<li>**3D 设计师：**创建 3D 对象和背景；优化图形性能</li>
<li>**2D 设计师：**创建 2D 对象和背景；优化图形性能；创建情节提要和概念图像</li>
<li>**光效设计师：**开发优化的照明效果；创建后期处理效果，如绽放、环境光遮蔽、景深和色彩校正</li>
<li>**音频设计师：**创建和实现音效、画外音和音乐</li>
<li>**角色设计师：**雕刻和建模角色及其资产，如头发、配饰、盔甲和武器</li>
<li>**技术美术师：**与美术师和程序员合作，在最终产品中实现他们的工作</li>
<li>**特效设计师：**创建逼真的风格化视觉效果，如熔岩、烟雾和火焰；实现碰撞和坠落等物理属性</li>
<li>**动画师：**创建和优化所有移动角色和物体的高质量动画；确保照明和视觉效果在运动中运行良好</li>
<li>**游戏/关卡设计师：**构建和实现游戏玩法；进行游戏测试并实施反馈；与测试人员、关卡美术师和游戏程序员一起验证可玩性</li>
</ul>
<p>有关每个角色的更详细说明，请参阅文档[艺术与设计职业](https://connect-prd-cdn.unity.com/20201012/c6f8ec37-7bb8-4092-96fc-9857259dc02e/Careers in Art and Design.pdf)。</p>
</li>
<li>
<p><strong>编程</strong>：创建项目的功能，包括游戏玩法、网络和人工智能</p>
<p>以下是编程的典型职位列表以及这些职位的简要描述：</p>
<ul>
<li>**质量保证技术人员：**查找和报告错误；编写测试用例和计划</li>
<li>**程序员分析师：**根据有文档记录的设计编写代码；修改应用程序以维护功能</li>
<li>**C#开发人员：**开发新功能和应用程序；管理产品的发布</li>
<li>**Unity 工程师：**使用 Unity 开发新功能和应用程序</li>
<li>**研究工程师：**设计、实施、分析和优化最先进的算法</li>
<li>**软件开发人员：**设计、开发、测试和发布新功能和工具</li>
<li>**VR / AR开发人员：**原型并构建下一代VR / AR产品；部署和维护VR / AR应用程序；了解VR / AR的最新趋势</li>
<li>**移动开发人员：**开发新的移动功能和应用程序；保持最新的移动技术</li>
<li>**UI/界面程序员：**编写用户界面代码，以满足项目设计和流程的意图；将UI系统集成到功能中</li>
<li>**游戏程序员：**分析并理解游戏设计文档；开发游戏系统，如玩家的动作，角色的行为，游戏元素和游戏进度</li>
</ul>
<p>有关每个角色的更详细说明，请参阅文档[编程职业](https://connect-prd-cdn.unity.com/20201012/98be0570-6f5b-4983-967f-264fb3ad6930/Careers in Programming.pdf)。</p>
</li>
</ol>
<h2 id="用户为主"><a class="header-anchor" href="#用户为主">.</a>用户为主</h2>
<p>在为用户创建游戏体验时，您的总体目标是将用户的需求放在首位，即使其他优先级也会发挥作用，例如成本和技术性能。当您将用户放在首位时，您需要的一些关键技能包括：</p>
<ul>
<li>
<p>**研究和分析：**确定您为谁设计，研究用户需求和痛点</p>
</li>
<li>
<p>**协作：**提出多种艺术和设计理念，并接受反馈以确定最佳方法；倾听理解他人的观点；在团队中工作良好。</p>
</li>
<li>
<p>**沟通：**清晰地表达你的想法；向他人提供可操作和建设性的反馈</p>
</li>
<li>
<p>**批判性思维和解决问题：**寻找用户面临的问题以及为用户提供更多选择的机会;</p>
</li>
<li>
<p>**沟通：**清晰地表达你的想法；在代码审查中提供可操作和建设性的反馈</p>
</li>
<li>
<p>**协作：**倾听他人的想法；接受反馈；在团队中工作良好</p>
</li>
</ul>
]]></content>
      <categories>
        <category>IT</category>
        <category>软件</category>
        <category>Games</category>
        <category>程序</category>
        <category>游戏开发</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>游戏开发</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>File Manager - 简易轻巧的文件管理系统</title>
    <url>/2022/04/File-Manager-%E7%AE%80%E6%98%93%E8%BD%BB%E5%B7%A7%E7%9A%84%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="File-Manager-简易轻巧的文件管理系统"><a class="header-anchor" href="#File-Manager-简易轻巧的文件管理系统">.</a>File Manager - 简易轻巧的文件管理系统</h1>
<p>File Manager 基于GO的轻量级文件管理系统。指定的目录中提供文件管理界面，可用于上传，删除，预览，重命名和编辑文件。它允许创建多个用户，每个用户可以拥有自己的目录。</p>
<ul>
<li>用户登录</li>
<li>上传、预览、编辑、下载、分享（可加密）</li>
<li>可执行自定义命令</li>
<li>权限管理</li>
<li>界面简洁</li>
</ul>
<span id="more"></span>
<p>官网：<a href="https://filebrowser.org/">https://filebrowser.org/</a></p>
<p>开源地址：<a href="https://github.com/hacdias/filemanager">https://github.com/hacdias/filemanager</a></p>
<p>预览：</p>
<p><img data-src="https://3149836655-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2F-M8KDxOujDoPpJyJJ5_i%2Fuploads%2Fgit-blob-b6cab252432e211dec693fc77d036c15259a8087%2F1.PNG?alt=media" alt="" /></p>
<p><img data-src="https://3149836655-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2F-M8KDxOujDoPpJyJJ5_i%2Fuploads%2Fgit-blob-9390768b0cbb83b1e7da55c0ae13ecd2d8fcb114%2F2.PNG?alt=media" alt="" /></p>
<p><img data-src="https://3149836655-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2F-M8KDxOujDoPpJyJJ5_i%2Fuploads%2Fgit-blob-34a4697bbe32f8199174001c17f3b2095beefc97%2F4.PNG?alt=media" alt="" /></p>
<h2 id="Linux安装"><a class="header-anchor" href="#Linux安装">.</a>Linux安装</h2>
<p>其实不同系统之间差不了多少，如果你要在Windows上安装，有能力的话就按官网，然后以此类推吧。</p>
<ol>
<li>
<p>先指定安装目录</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /www/wwwroot/</span><br><span class="line"><span class="built_in">mkdir</span> filemanager</span><br><span class="line"><span class="built_in">cd</span> filemanager</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>提取安装包</p>
</li>
</ol>
<div class="tabs" id="installation"><ul class="nav-tabs"><li class="tab active"><a href="#installation-1">官方安装方式</a></li><li class="tab"><a href="#installation-2">我的安装方式</a></li></ul><div class="tab-content"><div class="tab-pane active" id="installation-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | bash</span><br><span class="line">filebrowser -c /www/wwwroot/filemanager/config.json</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="installation-2"><p>我也试了官方的安装方式，但可能受限于网络原因，一直下载不了那个压缩包，所以“曲线救国”，自己下了压缩包来安装。目前感觉到的与官方那种方式的差别就是没有全局命令，对于我来说随意了，而且没有或许会更好。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/filebrowser/filebrowser/releases/download/v2.21.1/linux-amd64-filebrowser.tar.gz</span><br><span class="line"></span><br><span class="line">tar -zxvf linux-amd64-filebrowser.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +X /www/wwwroot/filemanager/filebrowser</span><br><span class="line"><span class="built_in">chown</span> -R www:www /www/wwwroot/filemanager</span><br></pre></td></tr></table></figure></div></div></div>
<ol start="3">
<li>开始使用</li>
</ol>
<div class="tabs" id="use"><ul class="nav-tabs"><li class="tab active"><a href="#use-1">完整版使用</a></li><li class="tab"><a href="#use-2">简易版使用</a></li></ul><div class="tab-content"><div class="tab-pane active" id="use-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化配置</span></span><br><span class="line">./filebrowser config init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出配置文件</span></span><br><span class="line">./filebrowser config <span class="built_in">export</span> /www/wwwroot/filemanager/config.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果修改了配置，则要导入配置文件才能有效。</span></span><br><span class="line">./filebrowser config import /www/wwwroot/filemanager/config.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动文件管理系统</span></span><br><span class="line">./filebrowser -c /www/wwwroot/filemanager/config.json</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="use-2"><p>创建并编辑配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> config-easy.json</span><br><span class="line"></span><br><span class="line">vim config-easy.json</span><br></pre></td></tr></table></figure>
<p>将以下代码按<code>i</code>后粘贴，再按<code>esc</code>输入<code>:wq</code>保存</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span><span class="string">&quot;0.0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">8080</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;noAuth&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;baseURL&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;reCaptchaKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;reCaptchaSecret&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;log&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stdout&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;database&quot;</span><span class="punctuation">:</span><span class="string">&quot;/www/wwwroot/filemanager/filebrowser.db&quot;</span><span class="punctuation">,</span> </span><br><span class="line">  <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span><span class="string">&quot;.&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;allowCommands&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;allowEdit&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;allowNew&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;commands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;git&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;svn&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动文件管理系统</span></span><br><span class="line">./filebrowser -c /www/wwwroot/filemanager/config.json</span><br></pre></td></tr></table></figure></div></div></div>
<p>当命令行显示时，说明文件管理系统启动成功。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2022/04/22 10:25:42 Listening on [::]:8080</span><br></pre></td></tr></table></figure>
<p>在浏览器上输入<a href="http://locahost:8080">http://locahost:8080</a>即可访问</p>
<blockquote>
<p>默认账号：<code>admin</code>   默认密码：<code>admin</code></p>
</blockquote>
<h2 id="外网访问"><a class="header-anchor" href="#外网访问">.</a>外网访问</h2>
<p>输入<code>vim /www/wwwroot/filemanager/config.json</code>，编辑文件，对下面的配置项进行修改：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// 改成</span></span><br><span class="line"><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0.0&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果修改了配置，则要导入配置文件才能有效。</span></span><br><span class="line">./filebrowser config import /www/wwwroot/filemanager/config.json</span><br></pre></td></tr></table></figure>
<p>再将8080端口映射到公网IP上，进行外网访问了。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>FileManager</tag>
        <tag>文件管理</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建基于Gollum的Wiki网站</title>
    <url>/2022/04/%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8EGollum%E7%9A%84Wiki%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<h1 id="搭建基于Gollum的Wiki网站"><a class="header-anchor" href="#搭建基于Gollum的Wiki网站">.</a>搭建基于Gollum的Wiki网站</h1>
<p>Gollum是一个建立在Git之上的简单wiki系统。Gollum Wiki只是一个具有特定性质的git存储库：</p>
<ul>
<li>支持 Markdown 语法</li>
<li>可以包含其他内容，例如页面的图像，PDF和页眉/页脚。</li>
<li>咕噜页面：
<ul>
<li>可以写成各种<a href="https://github.com/gollum/gollum#markups">标记</a>。</li>
<li>可以使用您喜欢的系统编辑器或IDE进行编辑（提交后将显示更改）或使用内置的Web界面进行编辑。</li>
<li>可以在所有版本中显示，还原等。</li>
</ul>
</li>
<li>Gollum 与 GitHub wiki 基本兼容</li>
<li>Gollum 支持的高级功能：
<ul>
<li><a href="https://github.com/gollum/gollum/wiki#plantuml-diagrams">UML 图</a></li>
<li><a href="https://github.com/gollum/gollum/wiki/BibTeX-and-Citations">BibTeX 和引文支持</a></li>
<li>使用 <a href="https://github.com/gollum/gollum/wiki#criticmarkup-annotations">CriticMarkup</a> 注释</li>
<li><a href="https://github.com/gollum/gollum/wiki#mathematics">MathJax 上的数学</a></li>
<li><a href="https://github.com/gollum/gollum/wiki/Standard-Macros">宏</a></li>
<li><a href="https://github.com/gollum/gollum/wiki#redirects">重定向</a></li>
<li>最新更改的 <a href="https://github.com/gollum/gollum/wiki/5.0-release-notes#rss-feed">RSS 源</a></li>
<li>…以及<a href="https://github.com/gollum/gollum/wiki">更多</a></li>
</ul>
</li>
</ul>
<span id="more"></span>
<h2 id="安装说明"><a class="header-anchor" href="#安装说明">.</a>安装说明</h2>
<p>我为了安装这个Gollum真的是遇到了很多问题，可以说是刚好卡在了一个特殊的节点吧。</p>
<ol>
<li>CentOS 8 安装的ruby最高只能安装2.5.9版本，而Gollum最低要求要2.6.0😅。<br />
所以，被迫先迁移到CentOS Stream 8，但好像没用，repo库里还是只有2.5.9版本。</li>
<li>然后我尝试用RVM版本管理器去安装Ruby，又无法导入GPG密钥。<br />
后来用他们的Web服务器，总算是可以导入了。</li>
</ol>
<h2 id="安装-2"><a class="header-anchor" href="#安装-2">.</a>安装</h2>
<h3 id="安装-RVM"><a class="header-anchor" href="#安装-RVM">.</a>安装 RVM</h3>
<ol>
<li>
<p>安装 GPG 密钥，在终端运行以下代码：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB</span><br><span class="line">或</span><br><span class="line">gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB</span><br></pre></td></tr></table></figure>
<p>如果以上两条命令都没有用，提示<code>gpg: keyserver receive failed: Server indicated a failure</code>的话，再使用下面这个不太安全的 Web 服务器导入密钥：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://rvm.io/mpapis.asc | gpg --import -</span><br><span class="line">curl -sSL https://rvm.io/pkuczynski.asc | gpg --import -</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>安装 RVM：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">\curl -sSL https://get.rvm.io | bash -s stable</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>更新shell环境</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br><span class="line"><span class="built_in">source</span> /usr/local/rvm/scripts/rvm</span><br></pre></td></tr></table></figure>
<p>检查是否安装成功：</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rvm -v</span><br><span class="line">rvm list known</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>安装 ruby<br />
先修改 RVM 的 Ruby 安装源到 Ruby China 的 Ruby 镜像服务器，这样能提高安装速度</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ruby_url=https://cache.ruby-china.com/pub/ruby&quot;</span> &gt; /usr/local/rvm/user/db</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/</span><br><span class="line">gem sources -l</span><br></pre></td></tr></table></figure>
<p>开始安装：</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rvm install ruby-head</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="安装-Gollum"><a class="header-anchor" href="#安装-Gollum">.</a>安装 Gollum</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rvm install current &amp;&amp; rvm use current</span><br></pre></td></tr></table></figure>
<p>安装 gem 编译依赖项：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install icu</span><br></pre></td></tr></table></figure>
<p>安装 Gollum：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gem install gollum</span><br></pre></td></tr></table></figure>
<p>检查是否安装成功：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gollum --v</span><br></pre></td></tr></table></figure>
<h2 id="使用-3"><a class="header-anchor" href="#使用-3">.</a>使用</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /www/wwwroot</span><br><span class="line">mkdir gollumWiki</span><br><span class="line">cd gollumWiki</span><br><span class="line">git init</span><br><span class="line">gollum</span><br></pre></td></tr></table></figure>
<p>访问<a href="http://localhost:4567">http://localhost:4567</a>即可看到一个创建新Home页面的界面</p>
<h2 id="后记-2"><a class="header-anchor" href="#后记-2">.</a>后记</h2>
<p>折腾到现在，我对Gollum已经有些不耐烦了，太过于麻烦，太过于复杂，其实后面我还弄了一下unicorn，为了给Gollum配置一个更好的web服务，但没成功。回过头来看，弯路太多，与初衷渐行渐远，遂放弃。还是转投MediaWiki吧，虽然要学一个新的语法。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>软件</category>
        <category>搭建与配置</category>
        <category>程序</category>
      </categories>
      <tags>
        <tag>维基</tag>
        <tag>Gollum</tag>
        <tag>Wiki</tag>
      </tags>
  </entry>
  <entry>
    <title>Bolt - Unity可视化编程学习体验</title>
    <url>/2022/05/Bolt-Unity%E5%8F%AF%E8%A7%86%E5%8C%96%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<h1 id="Bolt-Unity可视化编程学习体验"><a class="header-anchor" href="#Bolt-Unity可视化编程学习体验">.</a>Bolt - Unity可视化编程学习体验</h1>
<span id="more"></span>
]]></content>
      <categories>
        <category>Games</category>
        <category>游戏开发</category>
      </categories>
      <tags>
        <tag>游戏开发</tag>
        <tag>Unity</tag>
        <tag>Bolt</tag>
        <tag>可视化编程</tag>
        <tag>学习体验</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 对象池应用</title>
    <url>/2022/05/C-%E5%AF%B9%E8%B1%A1%E6%B1%A0%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<h1 id="C-对象池应用"><a class="header-anchor" href="#C-对象池应用">.</a>C# 对象池应用</h1>
<p>对象池是游戏编程中非常常用的优化策略以及设计模式。</p>
<p>游戏中，我们常常会遇到频繁地<strong>创建</strong>和<strong>销毁</strong><u>大量相同对象</u>的场景。频繁的创建对象会造成GC<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>压力，可能导致卡顿，进而影响游戏体验。</p>
<p><strong>核心思想</strong>：</p>
<p>将需要重复创建的对象先缓存下来，需要时激活，不需要时停用，从而避免频繁创建对象。</p>
<p><strong>原理</strong>：</p>
<p>当创建对象时，对象池将对象放入池管理的某种内存连续的数据结构中（数组或者栈等）。当不需要对象时，对象池并不销毁对象，而是将对象回收到池中，下次需要的时候再次从池中拿出来。<br />
因为，对象储存在内存连续的数据结构中，所以解决了<strong>内存碎片</strong>的问题。<br />
因为，对象每次用完以后就放回池中循环利用而不是再次创建和销毁，这样就解决了<strong>频繁的内存分配和销毁</strong>的问题。</p>
<span id="more"></span>
<p>实例：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 对象池本体</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> List&lt;GameObject&gt; pooledObjects;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 对象池要管理的对象</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> GameObject objectToPool;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 对象池中需要初始化对象的个数</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> amountToPool;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    PoolStart();        <span class="comment">// 初始化对象池</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 初始化对象池，克隆对象并将它们添加到列表中</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PoolStart</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    pooledObjects = <span class="keyword">new</span> List&lt;GameObject&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; amountToPool; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        GameObject obj = (GameObject)Instantiate(objectToPool);</span><br><span class="line">        obj.SetActive(<span class="literal">false</span>);</span><br><span class="line">        pooledObjects.Add(obj);</span><br><span class="line">        obj.transform.SetParent(<span class="keyword">this</span>.transform); <span class="comment">// 设置其父对象是 脚本所附加对象</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">GameObject <span class="title">GetPooledObject</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// For as many objects as are in the pooledObjects list</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; pooledObjects.Count; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// if the pooled objects is NOT active, return that object </span></span><br><span class="line">        <span class="keyword">if</span> (!pooledObjects[i].activeInHierarchy)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> pooledObjects[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// otherwise, return null   </span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考资料"><a class="header-anchor" href="#参考资料">.</a>参考资料</h2>
<ol>
<li><a href="https://baike.baidu.com/item/%E5%AF%B9%E8%B1%A1%E6%B1%A0/4747589">对象池_百度百科 (baidu.com)</a></li>
<li>[<a href="https://zhuanlan.zhihu.com/p/62403282">游戏编程技巧]-对象池 - 知乎 (zhihu.com)</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/108538606">对象池(Object Pool) - 知乎 (zhihu.com)</a></li>
</ol>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>Garbage Collection，垃圾回收 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>C#</category>
      </categories>
      <tags>
        <tag>游戏开发</tag>
        <tag>Unity</tag>
        <tag>C#</tag>
        <tag>对象池</tag>
        <tag>Object Pool</tag>
      </tags>
  </entry>
</search>
