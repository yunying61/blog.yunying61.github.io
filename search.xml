<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>markdown语法</title>
    <url>/2019/11/markdown%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<blockquote>
<p>以下所有演示，后面紧接的都是它们的代码行。</p>
</blockquote>
<h1>一级标题</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br></pre></td></tr></table></figure>
<h2 id="二级标题"><a class="header-anchor" href="#二级标题"></a>二级标题</h2>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## 二级标题</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="三级标题"><a class="header-anchor" href="#三级标题"></a>三级标题</h3>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">### 三级标题</span></span><br></pre></td></tr></table></figure>
<h4 id="四级标题"><a class="header-anchor" href="#四级标题"></a>四级标题</h4>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#### 四级标题</span></span><br></pre></td></tr></table></figure>
<h5 id="五级标题"><a class="header-anchor" href="#五级标题"></a>五级标题</h5>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">##### 五级标题</span></span><br></pre></td></tr></table></figure>
<h6 id="六级标题"><a class="header-anchor" href="#六级标题"></a>六级标题</h6>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure>
<h2 id="段落格式"><a class="header-anchor" href="#段落格式"></a>段落格式</h2>
<h3 id="分割线（水平线）"><a class="header-anchor" href="#分割线（水平线）"></a>分割线（水平线）</h3>
<hr />
<hr />
<hr />
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">__<span class="emphasis">_</span></span></span><br><span class="line"><span class="emphasis"><span class="strong"></span></span></span><br><span class="line"><span class="emphasis"><span class="strong">---</span></span></span><br><span class="line"><span class="emphasis"><span class="strong"></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="strong">**<span class="emphasis">*</span></span></span></span></span><br></pre></td></tr></table></figure>
<h3 id="文本样式"><a class="header-anchor" href="#文本样式"></a>文本样式</h3>
<p><strong>This is bold text 加粗</strong></p>
<p><strong>This is bold text 加粗</strong></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**This is bold text 加粗**</span></span><br><span class="line"><span class="strong">__This is bold text 加粗__</span></span><br></pre></td></tr></table></figure>
<p><em>This is italic text 斜体</em></p>
<p><em>This is italic text 斜体</em></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*This is italic text 斜体*</span></span><br><span class="line"><span class="emphasis">_This is italic text 斜体_</span></span><br></pre></td></tr></table></figure>
<p><em><strong>粗斜体文本</strong></em></p>
<p><em><strong>粗斜体文本</strong></em></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*粗斜体文本<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="strong">__<span class="emphasis">_粗斜体文本<span class="strong">__<span class="emphasis">_</span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure>
<p><s>Strikethrough 删除线</s></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">~~Strikethrough 删除线~~ </span><br></pre></td></tr></table></figure>
<p><u>xiahuaxian 下划线</u></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>xiahuaxian 下划线<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span>  </span><br></pre></td></tr></table></figure>
<p>Markdown 扩展语法<br />
内联公式（例：$\LaTeX$​）</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\LaTeX</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p>下标（例：H<sub>2</sub>0）</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">H~2~0</span><br></pre></td></tr></table></figure>
<p>上标（例：X<sup>2</sup>）</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">X^2^</span><br></pre></td></tr></table></figure>
<p>高亮（例：==key==）</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">==key==</span><br></pre></td></tr></table></figure>
<h3 id="脚注"><a class="header-anchor" href="#脚注"></a>脚注</h3>
<p>创建脚注:<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">创建脚注:[^脚注]</span><br><span class="line">// RUNOOB是突显的内容</span><br><span class="line">// 而下面这个是脚注的内容</span><br><span class="line">[<span class="symbol">^脚注</span>]: <span class="link">在文章末尾对特定名词进行解释说明</span></span><br></pre></td></tr></table></figure>
<p>不同于HTML语法中的 <abbr title="全写">缩写</abbr></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">&quot;全写&quot;</span>&gt;</span>缩写<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="判断框"><a class="header-anchor" href="#判断框"></a>判断框</h3>
<ul>
<li>[x]</li>
<li>[ ]</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> [x] </span><br><span class="line"><span class="bullet">-</span> [ ] </span><br></pre></td></tr></table></figure>
<h2 id="方框"><a class="header-anchor" href="#方框"></a>方框</h2>
<pre>使用HTML的<b>pre标签</b>可以实现圆角方框的高亮提示。pre标签原本的使用是可以实现对空行和空格的控制，
如：
此例演示如何使用 pre 标签
	对空行
和    空格
		进行控制</pre>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span>使用HTML的<span class="tag">&lt;<span class="name">b</span>&gt;</span>pre标签<span class="tag">&lt;/<span class="name">b</span>&gt;</span>可以实现圆角方框的高亮提示。pre标签原本的使用是可以实现对空行和空格的控制，</span><br><span class="line">如：</span><br><span class="line">此例演示如何使用 pre 标签</span><br><span class="line">	对空行</span><br><span class="line">和    空格</span><br><span class="line">		进行控制<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="列表"><a class="header-anchor" href="#列表"></a>列表</h2>
<h3 id="无序列表"><a class="header-anchor" href="#无序列表"></a>无序列表</h3>
<p>​		无序列表使用星号(<strong>*</strong>)、加号(<strong>+</strong>)或是减号(<strong>-</strong>)作为列表标记，标记后跟一个<strong>空格</strong>，然后再填写内容。无序列表可以嵌套，通过 <strong>tab键</strong> 建立层次关系：</p>
<ul>
<li>第一层1
<ul>
<li>第二层1</li>
<li>第二层2
<ul>
<li>第三层1
<ul>
<li>第四层1</li>
</ul>
</li>
</ul>
</li>
<li>第二层3</li>
</ul>
</li>
<li>第一层2</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">+</span> 第一层1</span><br><span class="line"><span class="bullet">	+</span> 第二层1</span><br><span class="line"><span class="bullet">	+</span> 第二层2</span><br><span class="line"><span class="bullet">		+</span> 第三层1</span><br><span class="line"><span class="bullet">			+</span> 第四层1</span><br><span class="line"><span class="bullet">	+</span> 第二层3</span><br><span class="line"><span class="bullet">+</span> 第一层2</span><br></pre></td></tr></table></figure>
<h3 id="有序列表"><a class="header-anchor" href="#有序列表"></a>有序列表</h3>
<p>在每行代码的最前面输入序号如（1. ），注意 <code>.</code> 后面有空格，有序列表同样可以嵌套。<br />
注意：只要有了第一个序号的开始，后面的编号会依次开始排序，如（5. ，接下来的将会是6. ）</p>
<ol>
<li>
<p>Lorem ipsum dolor sit amet</p>
</li>
<li>
<p>Consectetur adipiscing elit</p>
<ol>
<li>here</li>
<li>there</li>
</ol>
</li>
<li>
<p>Integer molestie lorem at massa</p>
</li>
<li>
<p>You can use sequential numbers…</p>
</li>
<li>
<p>…or keep all the numbers as <code>1.</code></p>
</li>
</ol>
<p>按打头的编号开始排序:</p>
<ol start="57">
<li>从57开始</li>
<li>即使为 <code>1. </code> ，显示的序号也为58</li>
</ol>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> Lorem ipsum dolor sit amet</span><br><span class="line"><span class="bullet">2.</span> Consectetur adipiscing elit</span><br><span class="line"><span class="bullet">	1.</span> here</span><br><span class="line"><span class="bullet">	2.</span> there</span><br><span class="line"><span class="bullet">3.</span> Integer molestie lorem at massa</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> You can use sequential numbers...</span><br><span class="line"><span class="bullet">1.</span> ...or keep all the numbers as <span class="code">`1.`</span></span><br><span class="line"></span><br><span class="line">按打头的编号开始排序:</span><br><span class="line"></span><br><span class="line"><span class="bullet">57.</span> 从57开始</span><br><span class="line"><span class="bullet">1.</span> 即使为 <span class="code">`1. `</span> ，显示的序号也为58</span><br></pre></td></tr></table></figure>
<h2 id="区块"><a class="header-anchor" href="#区块"></a>区块</h2>
<p>在段落开头使用 <code>&gt; </code> 符号 ，然后跟一个空格：</p>
<blockquote>
<p>区块引用</p>
<p>区块衔接</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 区块引用</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; 区块衔接</span></span><br></pre></td></tr></table></figure>
<p>区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推退：</p>
<blockquote>
<p>最外层<br />
最外层</p>
<blockquote>
<p>第一层嵌套<br />
第一层嵌套</p>
<blockquote>
<p>第二层嵌套<br />
第二层嵌套</p>
</blockquote>
</blockquote>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 最外层  </span></span><br><span class="line"><span class="quote">&gt; &gt; 第一层嵌套  </span></span><br><span class="line"><span class="quote">&gt; &gt; &gt; 第二层嵌套  </span></span><br></pre></td></tr></table></figure>
<h3 id="区块中使用列表"><a class="header-anchor" href="#区块中使用列表"></a>区块中使用列表</h3>
<blockquote>
<p>注意空行！</p>
</blockquote>
<blockquote>
<p>区块中使用列表</p>
<ol>
<li>
<p>第一项</p>
</li>
<li>
<p>第二项</p>
</li>
</ol>
<ul>
<li>第一项</li>
<li>第二项</li>
</ul>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 区块中使用列表</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; 1. 第一项</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; 2. 第二项</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; + 第一项</span></span><br><span class="line"><span class="quote">&gt; + 第二项</span></span><br></pre></td></tr></table></figure>
<h3 id="列表中使用区块"><a class="header-anchor" href="#列表中使用区块"></a>列表中使用区块</h3>
<p><strong>如果要在列表项目内放进区块，那么就需要先<code>空一行</code>，然后在 &gt; 前添加四个空格的缩进。</strong></p>
<blockquote>
<p>注意空行！</p>
</blockquote>
<p>区块中使用列表实例如下：</p>
<ul>
<li>
<p>第一项</p>
<blockquote>
<p>区块引用</p>
<p>区块衔接</p>
</blockquote>
</li>
<li>
<p>第二项</p>
</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span> 第一项</span><br><span class="line"><span class="code">	</span></span><br><span class="line"><span class="code">	&gt; 区块引用</span></span><br><span class="line"><span class="code">	&gt;</span></span><br><span class="line"><span class="code">	&gt; 区块衔接</span></span><br><span class="line"><span class="code">* 第二项</span></span><br></pre></td></tr></table></figure>
<h2 id="代码"><a class="header-anchor" href="#代码"></a>代码</h2>
<h3 id="高亮代码"><a class="header-anchor" href="#高亮代码"></a>高亮代码</h3>
<p><code>code</code></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">`code`</span></span><br></pre></td></tr></table></figure>
<h3 id="代码块"><a class="header-anchor" href="#代码块"></a>代码块</h3>
<h4 id="空行式代码块"><a class="header-anchor" href="#空行式代码块"></a>空行式代码块</h4>
<blockquote>
<p>在Hexo-Next主题下，空行式代码块将不会显示代码行号，且没有复制按钮。类似于使用<code>&lt;pre&gt;</code>标签</p>
</blockquote>
<pre><code>line 1 of code
line 2 of code
line 3 of code
</code></pre>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">该种代码行的格式：  </span><br><span class="line"><span class="code">`该段空行`</span></span><br><span class="line"><span class="code">	前面空4格（一个tab的长度），该段开始为代码行</span></span><br><span class="line"><span class="code">`结尾再空行，该段为结束`</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">演示如下：</span><br><span class="line"></span><br><span class="line"><span class="code">	line 1 of code</span></span><br><span class="line"><span class="code">	line 2 of code</span></span><br><span class="line"><span class="code">	line 3 of code</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure>
<h4 id="反引号式代码块"><a class="header-anchor" href="#反引号式代码块"></a>反引号式代码块</h4>
<blockquote>
<p>如果你在代码块里使用了3个反引号（```），则代码块本身要用4个反引号！</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">line 1 of code</span><br><span class="line">line 2 of code</span><br><span class="line">line 3 of code</span><br></pre></td></tr></table></figure>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">该种代码行的格式：</span><br><span class="line"><span class="code">`3个反引号`</span></span><br><span class="line">该段开始为代码行</span><br><span class="line"><span class="code">`3个反引号`</span></span><br><span class="line">演示如下：</span><br><span class="line"></span><br><span class="line"><span class="code">```</span></span><br><span class="line"><span class="code">line 1 of code</span></span><br><span class="line"><span class="code">line 2 of code</span></span><br><span class="line"><span class="code">line 3 of code</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure>
<h5 id="代码语法高亮"><a class="header-anchor" href="#代码语法高亮"></a>代码语法高亮</h5>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">该种代码行的格式：</span><br><span class="line"><span class="string">`3个反引号`</span> <span class="string">`所使用的编程语言`</span></span><br><span class="line">该段开始为代码行</span><br><span class="line"><span class="string">`3个反引号`</span></span><br><span class="line"></span><br><span class="line">演示如下：</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> foo = <span class="keyword">function</span> (<span class="params">bar</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> bar++;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">foo</span>(<span class="number">5</span>));</span><br></pre></td></tr></table></figure>
<h2 id="链接"><a class="header-anchor" href="#链接"></a>链接</h2>
<p>这是一个链接 <a href="https://www.runoob.com">菜鸟教程</a></p>
<p>或者 <a href="https://www.runoob.com">https://www.runoob.com</a></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一个链接 [<span class="string">菜鸟教程</span>](<span class="link">https://www.runoob.com</span>)</span><br><span class="line"></span><br><span class="line"><span class="language-xml">&lt;https://www.runoob.com&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="高级链接"><a class="header-anchor" href="#高级链接"></a>高级链接</h3>
<p>链接也可以用变量来代替，文档末尾附带变量地址：<br />
这个链接用 1 作为网址变量 <a href="http://www.google.com/">Google</a><br />
这个链接用 runoob 作为网址变量 <a href="http://www.runoob.com/">Runoob</a><br />
然后在文档的结尾为变量赋值（网址）</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">Google</span>][<span class="symbol">1</span>]</span><br><span class="line">[<span class="string">Runoob</span>][<span class="symbol">2</span>]  </span><br><span class="line">[<span class="symbol">1</span>]: <span class="link">http://www.google.com/  </span></span><br><span class="line">[<span class="symbol">2</span>]: <span class="link">http://www.runoob.com/</span></span><br></pre></td></tr></table></figure>
<h2 id="图片"><a class="header-anchor" href="#图片"></a>图片</h2>
<p>语法格式如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">图片名称</span>](<span class="link">图片地址</span>)</span><br><span class="line">![<span class="string">RUNOOB 图标</span>](<span class="link">http://static.runoob.com/images/runoob-logo.png</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">图片名称</span>](<span class="link">图片地址 &quot;可选标题&quot;</span>)  </span><br><span class="line">![<span class="string">RUNOOB 图标</span>](<span class="link">http://static.runoob.com/images/runoob-logo.png &quot;RUNOOB&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://static.runoob.com/images/runoob-logo.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>使用实例：<br />
<img data-src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标" /></p>
<p><img data-src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标" title="RUNOOB" /><br />
当然，你也可以像网址那样对图片网址使用<strong>变量</strong></p>
<p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用<strong>HTML</strong>的 <img> 标签。<br />
<img data-src="http://static.runoob.com/images/runoob-logo.png" width="50%"></p>
<h2 id="表格"><a class="header-anchor" href="#表格"></a>表格</h2>
<p>使用 <code>|</code> 来分隔不同的单元格，使用 <code>-</code> 来分隔表头和其他行。</p>
<table>
<thead>
<tr>
<th>表头</th>
<th>表头</th>
</tr>
</thead>
<tbody>
<tr>
<td>单元格</td>
<td>单元格</td>
</tr>
<tr>
<td>单元格</td>
<td>单元格</td>
</tr>
</tbody>
</table>
<p>语法格式如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure>
<h4 id="对齐方式"><a class="header-anchor" href="#对齐方式"></a>对齐方式</h4>
<p>我们可以设置表格的对齐方式：<br />
–: 	设置内容和标题栏居右对齐。<br />
:-- 	设置内容和标题栏居左对齐。<br />
:–: 	设置内容和标题栏居中对齐。<br />
实例如下：</p>
<table>
<thead>
<tr>
<th style="text-align:left">左对齐</th>
<th style="text-align:right">右对齐</th>
<th style="text-align:center">居中对齐</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">单元格</td>
<td style="text-align:right">单元格</td>
<td style="text-align:center">单元格</td>
</tr>
<tr>
<td style="text-align:left">单元格</td>
<td style="text-align:right">单元格</td>
<td style="text-align:center">单元格</td>
</tr>
</tbody>
</table>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 左对齐 | 居中对齐 | 右对齐 |</span><br><span class="line">| :----- | :----: | ----:  |</span><br><span class="line">| 单元格 | 单元格 | 单元格   |</span><br><span class="line">| 单元格 | 单元格 | 单元格   |</span><br></pre></td></tr></table></figure>
<h2 id="支持的-HTML-元素"><a class="header-anchor" href="#支持的-HTML-元素"></a>支持的 HTML 元素</h2>
<p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p>
<p>目前支持的 HTML 元素有：&lt;kbd&gt;\ &lt;b&gt;\ &lt;i&gt;\ &lt;em&gt;\ &lt;sup&gt;\ &lt;sub&gt;\ &lt;br&gt;\等 ，如：</p>
<p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">使用 <span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Ctrl<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span>+<span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Alt<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span>+<span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Del<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> 重启电脑</span><br></pre></td></tr></table></figure>
<h2 id="转义"><a class="header-anchor" href="#转义"></a>转义</h2>
<p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符（\），Markdown 使用反斜杠转义特殊字符：<br />
<strong>文本加粗</strong><br />
** 正常显示星号 **</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**文本加粗**</span> </span><br><span class="line">\<span class="emphasis">*\*</span> 正常显示星号 \<span class="emphasis">*\*</span></span><br></pre></td></tr></table></figure>
<p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>
<p>\   反斜线<br />
`   反引号<br />
*   星号<br />
_   下划线<br />
{}  花括号<br />
[]  方括号<br />
()  小括号<br />
#井字号<br />
+   加号<br />
-   减号<br />
.   英文句点<br />
!   感叹号</p>
<h2 id="公式"><a class="header-anchor" href="#公式"></a>公式</h2>
<p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：<br />
$$<br />
\int \frac{1}{\sqrt{x^{2} \pm a^{2}}} d x=\ln |x+\sqrt{x^{2} \pm a^{2}}|+C<br />
$$</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>在文章末尾对特定名词进行解释说明 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>笔记</tag>
        <tag>语法</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言的笔记</title>
    <url>/2019/12/C-note/</url>
    <content><![CDATA[<h1>C语言 （Windows）环境配置</h1>
<h2 id="代码编辑器"><a class="header-anchor" href="#代码编辑器"></a>代码编辑器</h2>
<ul>
<li>
<p>首推<abbr title="Visual Studio Code"><b>VS Code</b></abbr>,这是一款由微软开发的免费开源的现代化轻量级代码编辑器，支持几乎所有主流的编程语言的开发、语法高亮、智能代码补全、自定义热键、括号匹配、代码片段、代码对比 Diff、GIT 等特性，支持插件扩展，并针对网页开发和云端应用开发做了优化。软件跨平台支持 Win、Mac 以及 Linux，运行流畅，软件小巧精致。</p>
<blockquote>
<p>安装地址：<a href="https://code.visualstudio.com/Download">VS Code官网下载</a><br />
百度云（版本：win64位-1.40.2）链接: <a href="https://pan.baidu.com/s/1lkAnve07Zk0pDGXMtJ8HSw">https://pan.baidu.com/s/1lkAnve07Zk0pDGXMtJ8HSw</a> 提取码: rh99</p>
</blockquote>
</li>
<li>
<p>其次就是学生党们可能还在用的<strong>Visual C++ 6.0</strong></p>
<blockquote>
<p>百度云 链接: <a href="https://pan.baidu.com/s/10-YF4j3q5-1ElOBiKOM-tg">https://pan.baidu.com/s/10-YF4j3q5-1ElOBiKOM-tg</a> 提取码: rdqq</p>
</blockquote>
</li>
<li>
<p>GCC的话。。。有点麻烦不推荐，为了在 Windows 上安装 GCC，您需要安装 MinGW。为了安装 MinGW，请访问 MinGW 的主页 <a href="https://www.mingw.org">https://www.mingw.org</a>，进入 MinGW 下载页面，下载最新版本的 MinGW 安装程序。如果想弄的话下面这个链接</p>
<blockquote><p>windows下安装MinGW及C++的环境配置</p>
<footer><strong>啊sir_,</strong><cite><a href="https://blog.csdn.net/u013171283/article/details/80898442">地址</a></cite></footer></blockquote>
</li>
</ul>
<h1>C 程序结构</h1>
<p>其实刚学C语言的时候，不要觉得这串代码很奇怪，那串代码也很奇怪。每当遇到一个陌生代码的时候，我会先假设它有一个特殊用途，然后忽略掉它的陌生感带来的恐惧。随着学习的深入，你迟早会学到这个曾经陌生的代码的用处。</p>
<ol>
<li>首先先了解以下C程序的结构</li>
</ol>
<ul>
<li>C 程序主要包括以下部分：</li>
<li>预处理器指令</li>
<li>函数</li>
<li>变量</li>
<li>语句 &amp; 表达式</li>
<li>注释（这个看你需不需要注释）</li>
</ul>
<ol start="2">
<li>再看一下一个简单的C程序长什么样</li>
</ol>
  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>它的作用很简单，就是在屏幕上输出Hello, World!</p>
<p>由于过于简单吗，我就不贴图片了（贴图片都更复杂）。</p>
<ol start="3">
<li>接下来我讲解一下上面这段程序：
<ul>
<li>程序的第一行 #include &lt;stdio.h&gt; 是预处理器指令，告诉 C 编译器在实际编译之前要包含 stdio.h 文件。</li>
<li>void main() 是主函数，程序从这里开始执行。</li>
<li>printf(“…”) 是 C 中另一个可用的函数（它被包含在stdio.h 文件），会在屏幕上显示消息 “Hello, World!”。</li>
</ul>
</li>
</ol>
<h1>C 基本语法</h1>
<h2 id="C-的令牌（Tokens）"><a class="header-anchor" href="#C-的令牌（Tokens）"></a>C 的令牌（Tokens）</h2>
<p>C 程序由各种令牌组成，令牌可以是关键字、标识符、常量、字符串值，或者是一个符号。例如，下面的 C 语句包括五个令牌：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello, World! \n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>这五个令牌分别是：</p>
<pre><code>printf
(
&quot;Hello, World! \n&quot;
)
;
</code></pre>
<h2 id="分号-😉"><a class="header-anchor" href="#分号-😉"></a>分号(😉</h2>
<p>在 C 程序中，分号是语句结束符。也就是说，每个语句必须以分号结束。它表明一个逻辑实体的结束。(在某些函数运用中要特别注意，如:if函数、for循环函数…)</p>
<h2 id="注释"><a class="header-anchor" href="#注释"></a>注释</h2>
<p>注释在某些方面看来，还是很重要的。当你共享代码时，方便别人阅读您的代码。<br />
C 语言有两种注释方式：<br />
1.单行注释</p>
<pre><code>// 单行注释，双左斜杠 后全部为注释。
</code></pre>
<p>以 // 开始的单行注释，这种注释可以单独占一行。</p>
<p>2.多功能注释</p>
<pre><code>/* 单行注释 */
/* 
多行注释
多行注释
多行注释
*/
</code></pre>
<p>/* */ 这种格式的注释可以单行或多行。<br />
您<strong>不能在注释内嵌套注释</strong>，注释也不能出现在字符串或字符值中。<br />
如：</p>
<pre><code>printf(&quot;//how do you do!\n&quot;);
</code></pre>
<p>或</p>
<pre><code>printf(&quot;/*how do you do!*/\n);
</code></pre>
<p>输出分别是：//how do you do！和 /*how do you do!*/</p>
<h2 id="标识符"><a class="header-anchor" href="#标识符"></a>标识符</h2>
<p><strong>标识符</strong>：在编程语言中，标识符是用户编程时使用的名字，变量、常量、函数、语句块都有名字。是用来标识某个实体的一个符号，是对变量名、函数名、标号和其他各种用户定义的对象命名。</p>
<blockquote>
<p>C语言中标识符的命名规范：</p>
</blockquote>
<ol>
<li>标识符由字母、数字、下划线组成，并且首字母不能是数字。</li>
<li>不能把C的关键字作为用户的标识符，例如：if、for、while等。（注：标识符不能和C语言的关键字相同，也不能和用户自定义的函数或C语言库函数同名）</li>
<li>标识符长度是由机器上的编译系统决定的，一般的限制为8字符，(注：8字符长度限制是C89标准，C99标准已经扩充长度，其实大部分工业标准都更长)。</li>
<li>标识符对大小写敏感，即严格区分大小写。一般对变量名用小写，符号常量命名用大写。（注：C语言中字母是区分大小写的，因此score、Score、SCORE分别代表三个不同的标识符）</li>
<li>标识符命名应做到&quot;见名知意&quot;，例如，长度（外语：length），求和、总计（外语：sum），圆周率（外语：pi）</li>
</ol>
<p>C 标识符是用来标识变量、函数，或任何其他用户自定义项目的名称。一个标识符以字母 A-Z 或 a-z 或<code>下划线 _ </code>开始，后跟零个或多个字母、下划线和数字（0-9）。<br />
C 标识符内不允许出现标点字符，比如 @、$ 和 %。C 是区分大小写的编程语言。因此，在 C 中，Manpower 和 manpower 是两个不同的标识符。下面列出几个有效的标识符：</p>
<table>
<thead>
<tr>
<th style="text-align:center">1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">mohd</td>
<td>zara</td>
<td>abc</td>
<td>move_name</td>
<td>a_123</td>
</tr>
<tr>
<td style="text-align:center">myname50</td>
<td>_temp</td>
<td>j</td>
<td>a23b9</td>
<td>retVal</td>
</tr>
</tbody>
</table>
<h2 id="关键字"><a class="header-anchor" href="#关键字"></a>关键字</h2>
<p>下表列出了 C 中的保留字。这些保留字不能作为常量名、变量名或其他标识符名称。</p>
<pre>
<b>关键字</b>	 	说明
auto		声明自动变量
break		跳出当前循环
case		开关语句分支
char		声明字符型变量或函数返回值类型
const		声明只读变量
continue	结束当前循环，开始下一轮循环
default		开关语句中的"其它"分支
do			循环语句的循环体
double		声明双精度浮点型变量或函数返回值类型
else		条件语句否定分支（与 if 连用）
enum		声明枚举类型
extern		声明变量或函数是在其它文件或本文件的其他位置定义
float		声明浮点型变量或函数返回值类型
for			一种循环语句
goto		无条件跳转语句
if			条件语句
int			声明整型变量或函数
long		声明长整型变量或函数返回值类型
register	声明寄存器变量
return		子程序返回语句（可以带参数，也可不带参数）
short		声明短整型变量或函数
signed		声明有符号类型变量或函数
sizeof		计算数据类型或变量长度（即所占字节数）
static		声明静态变量
struct		声明结构体类型
switch		用于开关语句
typedef		用以给数据类型取别名
unsigned	声明无符号类型变量或函数
union		声明共用体类型
void		声明函数无返回值或无参数，声明无类型指针
volatile	说明变量在程序执行中可被隐含地改变
while		循环语句的循环条件
**C99 		新增关键字**
_Bool	
_Complex	
_Imaginary	
inline	
restrict
**C11 新增关键字**
_Alignas	
_Alignof	
_Atomic	
_Generic	
_Noreturn
_Static_assert	_Thread_local    
</pre>
<h2 id="C-中的空格"><a class="header-anchor" href="#C-中的空格"></a>C 中的空格</h2>
<p>只包含空格的行，被称为空白行，可能带有注释，C 编译器会完全忽略它。<br />
在 C 中，空格用于描述空白符、制表符、换行符和注释。空格分隔语句的各个部分，让编译器能识别语句中的某个元素（比如 int）在哪里结束，下一个元素在哪里开始。因此，在下面的语句中：</p>
<pre><code>int age;
</code></pre>
<p>在这里，int 和 age 之间必须至少有一个空格字符（通常是一个空白符），这样编译器才能够区分它们。另一方面，在下面的语句中：</p>
<pre><code>fruit = apples + oranges;   // 获取水果的总数
</code></pre>
<p>fruit 和 =，或者 = 和 apples 之间的空格字符不是必需的，但是为了增强可读性，您可以根据需要适当增加一些空格。</p>
<h1>C 函数</h1>
<p>准确的说，函数这个名称不太准确，容易误导人。C/C++里的函数应该被叫做__“子程序”__，是一个独立的程序段，可以被重复调用用来完成类似的功能</p>
<p>这样的“子程序”很多情况下是用来__提供一个值__的，这就是通常的函数，这个值的类型必须明确，就是返回值的类型。</p>
<p>但有的子程序不是用来提供一个值，可以仅仅是执行某些__特定的操作__，那么，定义为空类型是__安全的__，表示“不允许该子程序返回值”。这种子程序只能通过独立的语句调用，不能用在表达式里。</p>
<p>之所以需要空类型，是因为，函数的默认返回值类型是int，如果在函数定义时未带返回类型说明，则默认为int；即使函数中没有return语句，编译器按照函数返回值的原理，会返回一个__不确定的值__。如果将这样的函数错用在表达式里，语法上没错，但会带来很难察觉的逻辑错误。<br />
而将空类型函数用在表达式里是一个编译错误。</p>
<h1>为什么C语言程序运行闪一下就没有了(解决方法)</h1>
<ol>
<li>system(“pause”)</li>
<li>getchar()</li>
<li>getch()</li>
</ol>
<h2 id="C语言中system-“pause”"><a class="header-anchor" href="#C语言中system-“pause”"></a>C语言中system(“pause”)</h2>
<p>如果想要使用system(“pause”)，就要先包含该函数的头文件stdlib.h(#include &lt;stdlib.h&gt;)<br />
system就是调用从程序中调用系统命令(和shell命令)。<br />
system(“pause”)就是从程序里调用“pause”命令;<br />
而“pause”这个系统命令的功能很简单，意思是停下这个程序，然后等待按下一个按键后退出程序。会在命令行上输出一行类似于“Press any key to exit”的字，等待用户按一个键，然后返回。</p>
<h2 id="getchar"><a class="header-anchor" href="#getchar"></a>getchar()</h2>
<p>getchar()函数的作用是从计算机终端(一般为键盘)输入一个字符。getchar()函数只能接收一个字符，其函数值就是从输入设备得到的字符。</p>
<h2 id="getch-函数"><a class="header-anchor" href="#getch-函数"></a>getch()函数</h2>
<p>如果想要使用getch(); ，就要先包含该函数的头文件conio.h(#include &lt;conio.h&gt;)</p>
<p>getch()是编程中所用的函数，这个函数是一个不回显函数，当用户按下某个字符时，函数自动读取，无需按回车，有的C语言命令行程序会用到此函数做游戏，但是这个函数并非标准函数，要注意移植性！</p>
<h2 id="getchar-与getch-的区别："><a class="header-anchor" href="#getchar-与getch-的区别："></a>getchar()与getch()的区别：</h2>
<p>用getchar()时，在键盘上按一个字符后，要按回车才能读取进去；</p>
<p>用getch()时，要包含头文件&lt;conio.h&gt;，在键盘上按一个字符马上就被读取进去，不用按回车，因此可以作为“按任意键继续”的执行语句。</p>
<p>getch返回值是用户输入的ASCII码,出错返回-1，输入的字符不会回显在屏幕上。</p>
<p>getch函数常用于程序调试中，在调试时，在关键位置显示有关的结果以待查看，然后用getch函数暂停程序运行，当按任意键后程序继续运行。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>C</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>FTP服务器搭建</title>
    <url>/2019/12/FTP%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="什么是FTP服务器"><a class="header-anchor" href="#什么是FTP服务器"></a>什么是FTP服务器</h2>
<p>FTP服务器(File Transfer Protocol Server)是在互联网上提供文件存储和访问服务的计算机，它们依照FTP协议提供服务。 FTP是File Transfer Protocol(文件传输协议)。顾名思义，就是专门用来传输文件的协议。简单地说，支持FTP协议的服务器就是FTP服务器。</p>
<h3 id="软件种类"><a class="header-anchor" href="#软件种类"></a>软件种类</h3>
<ol>
<li>Server-U</li>
<li>FileZilla</li>
<li>VsFTP</li>
<li>IIS FTP</li>
</ol>
<h3 id="工作模式"><a class="header-anchor" href="#工作模式"></a>工作模式</h3>
<p>FTP是仅基于TCP的服务，不支持UDP。与众不同的是FTP使用2个端口，一个数据端口和一个命令端口(也可叫做控制端口)。通常来说这两个端口是21(命令端口)和20(数据端口)。但FTP 工作方式的不同，数据端口并不总是20。这就是主动与被动FTP的最大不同之处。主要有两种工作模式:</p>
<ol>
<li>
<p>主动模式(<strong>PORT</strong>)<br />
主动模式下，客户端随机打开一个大于1024 的端口向服务器的命令端口 P，即 21 端口，发起连接，同时开放N +1 端口监听，并向服务器发出 “port N+1” 命令，由服务器从它自己的数据端口 (20) 主动连接到客户端指定的数据端口 (N+1)。<br />
FTP 的客户端只是告诉服务器自己的端口号，让服务器来连接客户端指定的端口。对于客户端的防火墙来说，这是从外部到内部的连接，可能会被阻塞。</p>
</li>
<li>
<p>被动模式(<strong>PASV</strong>)<br />
为了解决服务器发起到客户的连接问题，有了另一种 FTP 连接方式，即被动方式。命令连接和数据连接都由客户端发起，这样就解决了从服务器到客户端的数据端口的连接被防火墙过滤的问题。<br />
被动模式下，当开启一个 FTP 连接时，客户端打开两个任意的本地端口 (N &gt; 1024 和 N+1) 。</p>
</li>
</ol>
<h3 id="总结"><a class="header-anchor" href="#总结"></a>总结</h3>
<p>在主动模式下:FTP服务器的控制端口是21，数据端口是20，所以在做静态映射的时候只需要开放21端口即可，他会用20端口和客户端主动的发起连接。</p>
<p>在被动模式下:FTP服务器的控制端口是21，数据端口是随机的，且是客户端去连接对应的数据端口，所以在做静态的映射话只开放21端口是不可以的。此时需要做DMZ。</p>
<h2 id="本地FTP服务器搭建（简易版）"><a class="header-anchor" href="#本地FTP服务器搭建（简易版）"></a>本地FTP服务器搭建（简易版）</h2>
<p>参考资料：<a href="https://www.cnblogs.com/popfisher/p/7992036.html">https://www.cnblogs.com/popfisher/p/7992036.html</a></p>
<h3 id="第一步：配置IIS-Web服务器"><a class="header-anchor" href="#第一步：配置IIS-Web服务器"></a>第一步：配置IIS Web服务器</h3>
<ul>
<li>
<p>1.1 控制面板中找到“程序”并打开</p>
</li>
<li>
<p>1.2 “程序”界面找到“启用或关闭Windows功能”并打开</p>
<blockquote>
<p>上面两步也可以简化为一步：按【Win + R】快捷键打开运行对话框，输入“optionalfeatures”后，按回车键</p>
</blockquote>
</li>
<li>
<p>1.3 从“启用或关闭Windows功能”弹窗中找到Internet Information Services(或者中文版Internet信息服务)并打开</p>
</li>
<li>
<p>1.4 配置IIS并点击确定<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/win-IIS.png?x-oss-process=style/yunying61" alt="win功能中配置IIS" /></p>
</li>
</ul>
<h3 id="第二步：配置IIS-Web站点"><a class="header-anchor" href="#第二步：配置IIS-Web站点"></a>第二步：配置IIS Web站点</h3>
<ul>
<li>
<p>2.1 开始菜单搜索“IIS”并点击进入IIS管理器(Internet Information Services (IIS)管理器)</p>
<blockquote>
<p>简化操作：按【Win + R】快捷键打开运行对话框，输入“inetMgr.exe”后，按回车键</p>
</blockquote>
</li>
<li>
<p>2.2 新建FTP站点</p>
<ul>
<li>2.2.1 新建FTP服务器 根目录文件夹</li>
</ul>
<blockquote>
<p>这步就是你随便找个位置新建一个文件夹，这个文件夹可以随意放置，没有特定需要，当然，尽量不要放在系统盘。</p>
</blockquote>
<ul>
<li>2.2.2 查看本机ip地址，后续访问Ftp地址需要用到（打开cmd输入ipconfig）</li>
</ul>
<blockquote>
<p>本机ip地址是IPv4 地址，当然，可能有些人的电脑连接了很多地址，那就要看你当前用的是无线局域网适配器还是以太网，以及更加细致的分类。</p>
</blockquote>
<ul>
<li>
<p>2.2.3 IIS网站管理器界面左边导航栏找到“网站”，右键弹出菜单，在弹出菜单中点击“添加FTP站点”</p>
</li>
<li>
<p>2.2.4 配置网站（网站名称：FtpSite 物理路径：E:\ftpserver）</p>
</li>
</ul>
<blockquote>
<p>这里，名称随意，物理路径就是刚才你的新建文件夹的路径。</p>
</blockquote>
<ul>
<li>2.2.5 IP 端口号 SSL设置</li>
</ul>
<blockquote>
<p>本机IP地址(从下拉菜单选择)：<s>此处是你的IP地址</s><br />
端口号是21，要不要自动启动（开机就启动）看你自己<br />
SSL设置为无SSL，除非你有SSL，并且知道怎么用了。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/IP%20%E7%AB%AF%E5%8F%A3%20SSL%E8%AE%BE%E7%BD%AE.png" alt="IP 端口 SSL设置" /></p>
</blockquote>
<ul>
<li>2.2.6 身份验证和授权信息设置</li>
</ul>
<blockquote>
<p>为了方便测试，此处身份验证先设置为匿名（以后可以更改），授权 允许所有用户，权限 读写都打勾。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83%E4%BF%A1%E6%81%AF%E8%AE%BE%E7%BD%AE.png?x-oss-process=style/yunying61" alt="身份验证和授权信息设置" /></p>
</blockquote>
</li>
</ul>
<h3 id="第三步：测试FTP站点（先在-根目录文件夹，随便放一个文件）"><a class="header-anchor" href="#第三步：测试FTP站点（先在-根目录文件夹，随便放一个文件）"></a>第三步：测试FTP站点（先在 根目录文件夹，随便放一个文件）</h3>
<ul>
<li>
<p>3.1 浏览器或者<strong>文件管理器</strong>地址栏输入ftp地址（ftp://192.168.0.105） ，别傻傻地复制粘贴，输入你自己的IP，注意前缀<u>ftp://</u></p>
</li>
<li>
<p>3.2 IIS管理器中的FTP身份验证里面配置身份认证<br />
在FTP的管理栏中，打开FTP身份验证</p>
</li>
</ul>
<blockquote>
<p>此处根据你自己的需要进行设置，<strong>基本身份验证</strong>是根据你电脑中的用户访问的，<strong>匿名身份验证</strong>是指任何人都可以访问。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/FTP%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81.png" alt="FTP身份验证" /></p>
</blockquote>
<ul>
<li>
<p>3.3 IIS管理器中的FTP授权规则</p>
<blockquote>
<p>在FTP的管理栏中，打开FTP授权规则<br />
在右边操作栏里，<strong>添加允许规则</strong> 和 <strong>添加拒绝规则</strong>，根据自己需要，设置相应规则。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/FTP%E6%8E%88%E6%9D%83%E8%A7%84%E5%88%99%E4%B8%BE%E4%BE%8B.png?x-oss-process=style/yunying61" alt="FTP授权规则举例" /></p>
</blockquote>
</li>
<li>
<p>3.4 配置FTP站点用户名和密码</p>
<ul>
<li>3.4.1 此电脑（桌面计算机图标右键）—&gt;管理-&gt;本地用户和组-&gt;用户-&gt;新建一个用户，并设置密码<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/%E7%AE%A1%E7%90%86.png" alt="计算机管理" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/%E6%96%B0%E7%94%A8%E6%88%B7.png" alt="新用户" /></li>
</ul>
<blockquote>
<p>细心的你可能已经发现这里的账户就是我们计算机的账户，所以说访问你的FTP服务器的账号实际上是你的电脑用户账号。</p>
<p>我们使用自己登录电脑的用户名和密码来登录FTP站点，不用新建这个test用户都可以。</p>
</blockquote>
</li>
</ul>
<h3 id="结语"><a class="header-anchor" href="#结语"></a>结语</h3>
<p>到此一个简单的FTP服务器搭建成功，同一个<strong>局域网</strong>内其他人可以访问到你的电脑了，可以相互传输文件。当然这只是局限于局域网，如果想要在任何一台联网的电脑上访问到这个FTP文件服务器，那紧接着下面的教程吧！</p>
<h2 id="FTP服务器发布至外网（Serv-u版）"><a class="header-anchor" href="#FTP服务器发布至外网（Serv-u版）"></a>FTP服务器发布至外网（Serv-u版）</h2>
<p>参考资料：</p>
<p><a href="https://blog.csdn.net/suliang5158/article/details/79273099">https://blog.csdn.net/suliang5158/article/details/79273099</a><br />
<a href="https://jingyan.baidu.com/article/e75aca85634b68142edac6f2.html">https://jingyan.baidu.com/article/e75aca85634b68142edac6f2.html</a><br />
<a href="https://blog.csdn.net/wz947324/article/details/80063061">https://blog.csdn.net/wz947324/article/details/80063061</a><br />
<a href="https://blog.csdn.net/superdog007/article/details/48787049">https://blog.csdn.net/superdog007/article/details/48787049</a></p>
<h3 id="工具及环境："><a class="header-anchor" href="#工具及环境："></a>工具及环境：</h3>
<ol>
<li>
<p>系统：Windows Server2012R2</p>
</li>
<li>
<p>软件：Serv-u(MFT Server 15.1.2)</p>
<blockquote>
<p>百度云 链接: <a href="https://pan.baidu.com/s/1QrqlfzFIcP-y1YD6981CbQ">https://pan.baidu.com/s/1QrqlfzFIcP-y1YD6981CbQ</a> 提取码: kja7</p>
</blockquote>
</li>
<li>
<p>环境配置：</p>
</li>
</ol>
<ul>
<li>
<p>如果是购买阿里云的服务器的话，必须还得在阿里云后台开放指定端口！</p>
<ol>
<li>
<p>登录阿里云，知道服务器控制台页面，左侧菜单栏有个 安全组 的子菜单</p>
</li>
<li>
<p>安全组中添加两个规则：</p>
<blockquote>
<p>开放20-21端口</p>
<p>开放13001-13003端口</p>
</blockquote>
</li>
</ol>
</li>
<li>
<p>目前（2019/12/14），我在腾讯云上没遇到这个问题，是可以直接使用的。</p>
</li>
</ul>
<h3 id="Serv-U的安装与配置"><a class="header-anchor" href="#Serv-U的安装与配置"></a>Serv-U的安装与配置</h3>
<ol>
<li>
<p>打开SU-FTP-Server-Windows-v15.1.2执行安装,选择中文（简体）<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/1.jpg" alt="安装1" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/2.jpg" alt="安装2" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/3.jpg" alt="安装3" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/4.jpg" alt="安装4" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/5.jpg" alt="安装5" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/6.jpg" alt="安装6" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/7.jpg" alt="安装7" /></p>
</li>
<li>
<p>启动Serv-U管理控制台，进行域配置<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/11.jpg?x-oss-process=style/yunying61" alt="域配置1" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/22.jpg" alt="域配置2" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/33.jpg" alt="域配置3" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/44.jpg" alt="域配置4" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/55.jpg" alt="域配置5" /></p>
</li>
</ol>
<blockquote>
<p>注意这里的IPv4地址填写你自己FTP服务器所在的内网IP</p>
</blockquote>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/66.jpg?x-oss-process=style/yunying61" alt="域配置6" /></p>
<ol start="3">
<li>
<p>使用向导创建匿名用户<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/111.jpg" alt="使用向导0" /><br />
这里点击<code>是</code>后，会跳转到使用向导创建，然后同意使用向导创建，进入下图的界面。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/1111.jpg?x-oss-process=style/yunying61" alt="使用向导1" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/2222.jpg?x-oss-process=style/yunying61" alt="使用向导2" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/3333.jpg?x-oss-process=style/yunying61" alt="使用向导3" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/4444.jpg?x-oss-process=style/yunying61" alt="使用向导4" /></p>
</li>
<li>
<p>新建域用户，添加域管理员<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/222.jpg" alt="域管理员1" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/333.jpg" alt="域管理员2" /><br />
选择域管理员用户，双击编辑该用户，进入’目录访问’标签，添加如图(域管理员3)两个路径。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/444.jpg?x-oss-process=style/yunying61" alt="域管理员3" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/a.jpg" alt="域管理员4" /><br />
同理，也可以设置匿名用户的目录访问权限</p>
</li>
<li>
<p>解决FTP服务器在浏览时出现中文乱码的问题</p>
</li>
</ol>
<blockquote>
<ol>
<li>在<strong>域</strong>下面选择“限制和设置”——“FTP设置”——“用户默认设置”中找到OPTS UTF8命令，右击禁用此命令。</li>
<li>点击下面的“全局属性”——高级选项”里，把“对所有已收发的路径和文件名使用UFT-8编码”前面的钩去掉。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/g.jpg" alt="解决中文乱码1" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/h.jpg" alt="解决中文乱码2" /><br />
这样，在上传或浏览FTP服务器时就不会出现中文乱码了。</li>
</ol>
</blockquote>
<h3 id="发布至外网（云服务器）"><a class="header-anchor" href="#发布至外网（云服务器）"></a>发布至外网（云服务器）</h3>
<ol>
<li>配置监听器，指向公网IP<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/fb1.png?x-oss-process=style/yunying61" alt="监听器" /></li>
<li>对ftp服务器下的监听器进行修改<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/fb2.png?x-oss-process=style/yunying61" alt="监听器修改" /></li>
<li>设置PASV端口范围（就是服务器向外发送数据用端口）<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/FTP/fb3.png?x-oss-process=style/yunying61" alt="配置端口" /></li>
</ol>
<blockquote>
<p>到这里，应该是可以让你在其他电脑上访问你搭建的FTP服务器了，访问路径是ftp://<s>此处填写你的公网IP</s></p>
</blockquote>
<h3 id="FTP绑定域名"><a class="header-anchor" href="#FTP绑定域名"></a>FTP绑定域名</h3>
<p><strong>添加域名解析</strong><br />
进入你购买域名的服务商控制台，在域名管理中添加一个域名解析。选择A记录，填写二级域名前缀，记录值为你的公网ip。<br />
然后在ftp服务器空间后台绑定这个域名，这样的话等域名解析生效了，那么就可以用域名访问ftp服务器以及里面的内容了。<br />
访问地址为：ftp://<s>此处填写你的域名</s></p>
<p>有可能出现访问不到的情况，可能是你的云服务器还没备案，先去备案吧。</p>
<h2 id="总结-2"><a class="header-anchor" href="#总结-2"></a>总结</h2>
<ol>
<li>
<p>PASV端口范围<br />
被动模式（PASV）下，有数据要传输时，服务器会打开一个数据端口（并处于监听状态），然后告知客户端，客户端连接这个数据端口发送数据。但是数据端口是随机的，那么服务器该如何将这些随机数据端口映射到公网的路由器上呢？总不能让内部网的一台机器完全暴露到公网上吧，虽然确实有这样的方案（称之为DMZ主机），但这绝对是最愚蠢的选择。<br />
虽然数据端口是随机的，但Serv-U可以指定随机的范围。打开Serv-U管理控制台 &gt; 管理服务器 &gt; 服务器限制和设置 &gt; 服务器设置 。在“设置”选项卡里找到“PASV端口范围”，就是上面的配置端口那张图。只需要把这些指定的端口映射出去就可以了。</p>
</li>
<li>
<p>PASV IP地址<br />
<u>这是全文中想要发布至外网的关键所在。</u>打开Serv-U管理控制台 &gt; 你自定义的域名 &gt; 域详细信息 &gt; 监听器 &gt; 编辑 ，在PASV IP地址或域名中设置公网IP即可。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>IT</category>
        <category>网络</category>
        <category>技术</category>
        <category>软件</category>
        <category>服务器</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>FTP</tag>
        <tag>服务器</tag>
        <tag>文件服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo语法</title>
    <url>/2019/12/hexo%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h2 id="写作"><a class="header-anchor" href="#写作"></a>写作</h2>
<h3 id="新建一篇文章"><a class="header-anchor" href="#新建一篇文章"></a>新建一篇文章</h3>
<blockquote>
<p>你可以执行下列命令来创建一篇新文章或者新的页面：</p>
<p><code>hexo new [layout] [title]</code></p>
<p>您可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布&gt;局。</p>
</blockquote>
<span id="more"></span>
<h3 id="文件名称"><a class="header-anchor" href="#文件名称"></a>文件名称</h3>
<blockquote>
<p>Hexo 默认以标题做为文件名称，但您也可以在_config.yml中编辑 new_post_name 参数来改变默认的文件名称，举例来说，设为 :year-:month-:day-:title.md 可让您更方便的通过日期来管理文章。</p>
</blockquote>
<h3 id="模版（Scaffold）"><a class="header-anchor" href="#模版（Scaffold）"></a>模版（Scaffold）</h3>
<blockquote>
<p>在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件，例如：</p>
<p><code>hexo new yun &quot;My first article&quot;</code></p>
<p>在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 yun.md 文件，并根据其内容建立文章</p>
</blockquote>
<hr />
<h2 id="Front-matter-前页"><a class="header-anchor" href="#Front-matter-前页"></a>Front-matter(前页)</h2>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/Front-matter.png?x-oss-process=style/yunying61" alt="Front-matter 摘自hexo" title="Front-matter(前页)" /><br />
此处有个注意事项：github库 图片引用中，把地址中的blob改成raw,否则可能不能使用。</p>
<h3 id="分类和标签"><a class="header-anchor" href="#分类和标签"></a>分类和标签</h3>
<blockquote>
<p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 Foo, Bar 不等于 Bar, Foo；而标签没有顺序和层次。例如：</p>
<blockquote>
<p>categories:<br />
- Diary<br />
tags:<br />
- PS3<br />
- Games</p>
</blockquote>
</blockquote>
<blockquote>
<p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p>
<blockquote>
<p>categories:<br />
- [Diary, PlayStation]<br />
- [Diary, Games]<br />
- [Life]<br />
此时这篇文章同时包括三个分类： PlayStation 和 Games 分别都是父分类 Diary 的子分类，同时 Life 是一个没有子分类的分类。</p>
</blockquote>
</blockquote>
<blockquote>
<p><b>JSON Front-matter</b></p>
<blockquote>
<p>除了 YAML 外，你也可以使用 JSON 来编写 Front-matter，只要将 <code>---</code> 代换成 <code>;;;</code> 即可。</p>
<p>;;;</p>
<p>“title”: “Hello World”,<br />
“date”: “2013/7/13 20:46:25”<br />
;;;</p>
</blockquote>
</blockquote>
<hr />
<h2 id="标签插件（Tag-Plugins）"><a class="header-anchor" href="#标签插件（Tag-Plugins）"></a>标签插件（Tag Plugins）</h2>
<p>标签插件和 Front-matter 中的标签不同，它们是用于在文章中快速插入特定内容的插件。</p>
<h3 id="引用块"><a class="header-anchor" href="#引用块"></a>引用块</h3>
<p>在文章中插入引言，可包含作者、来源和标题。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote author, - source [link] [source_link_title] %&#125;</span><br><span class="line">content  </span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<blockquote><p>content</p>
<footer><strong>author</strong><cite>- source link source_link_title</cite></footer></blockquote>  
<h4 id="样例"><a class="header-anchor" href="#样例"></a>样例</h4>
<p><b>没有提供参数，则只输出普通的 blockquote</b></p>
<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>
</blockquote>  
<p><b>引用书上的句子</b></p>
<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>
<footer><strong>David Levithan</strong><cite>- Wide Awake</cite></footer></blockquote>  
<p><b>引用 Twitter</b></p>
<blockquote><p>NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</p>
<footer><strong>@DevDocs, -</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>
<p><b>引用网络上的文章</b></p>
<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin, -</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html">Welcome to Island Marketing</a></cite></footer></blockquote>
<h3 id="代码块-2"><a class="header-anchor" href="#代码块-2"></a>代码块</h3>
<p>在文章中插入代码。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;  </span><br><span class="line">code snippet  </span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code snippet</span><br></pre></td></tr></table></figure>
<h4 id="样例-2"><a class="header-anchor" href="#样例-2"></a>样例</h4>
<p><b>普通的代码块</b></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alert(&#x27;Hello World!&#x27;);</span><br></pre></td></tr></table></figure> 
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock %&#125;</span><br><span class="line">alert(&#x27;Hello World!&#x27;);</span><br><span class="line">&#123;% endcodeblock %&#125;  </span><br></pre></td></tr></table></figure>
<p><b>指定语言</b></p>
<figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">[rectangle setX: <span class="number">10</span> y: <span class="number">10</span> width: <span class="number">20</span> height: <span class="number">20</span>];</span><br></pre></td></tr></table></figure> 
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock lang:objc %&#125;</span><br><span class="line">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class="line">&#123;% endcodeblock %&#125; </span><br></pre></td></tr></table></figure>
<p><b>附加说明</b></p>
<figure class="highlight plaintext"><figcaption><span>Array.map</span></figcaption><table><tr><td class="code"><pre><span class="line">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock Array.map %&#125;</span><br><span class="line">array.map(callback[, thisArg])</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>
<p><b>附加说明和网址</b></p>
<figure class="highlight plaintext"><figcaption><span>_.compact</span><a href="http://underscorejs.org/#compact">Underscore.js</a></figcaption><table><tr><td class="code"><pre><span class="line">_.compact([0, 1, false, 2, &#x27;&#x27;, 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock _.compact http://underscorejs.org/#compact  Underscore.js %&#125;</span><br><span class="line">_.compact([0, 1, false, 2, &#x27;&#x27;, 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://hexo.io/zh-cn/docs/tag-plugins#%E4%BB%A3%E7%A0%81%E5%9D%97">hexo官方文档</a>的展示：<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/%E4%BB%A3%E7%A0%81%E6%A0%B7%E4%BE%8B.png" alt="代码样例" /></p>
<h3 id="Pull-Quote"><a class="header-anchor" href="#Pull-Quote"></a>Pull Quote</h3>
<p>在文章中插入 Pull quote。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% pullquote [class] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="jsFiddle"><a class="header-anchor" href="#jsFiddle"></a>jsFiddle</h3>
<p>在文章中嵌入 jsFiddle。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Gist"><a class="header-anchor" href="#Gist"></a>Gist</h3>
<p>在文章中嵌入 Gist。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="iframe"><a class="header-anchor" href="#iframe"></a>iframe</h3>
<p>在文章中插入 iframe。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Image"><a class="header-anchor" href="#Image"></a>Image</h3>
<p>在文章中插入指定大小的图片。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% img [class names] /path/to/image [width] [height] &#x27;&quot;title text&quot; &quot;alt text&quot;&#x27; %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Link"><a class="header-anchor" href="#Link"></a>Link</h3>
<p>在文章中插入链接，并自动给外部链接添加 target=“_blank” 属性。（这个链接是在本网页进行跳转）</p>
<a href="https://www.runoob.com/" title="学的不仅是技术，更是梦想！" target="">菜鸟教程</a> 
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% link 菜鸟教程 https://www.runoob.com/ 学的不仅是技术，更是梦想！ %&#125; </span><br></pre></td></tr></table></figure>
<h3 id="插入视频"><a class="header-anchor" href="#插入视频"></a>插入视频</h3>
<p><img data-src="https://img-61.oss-cn-shanghai.aliyuncs.com/img/hexo/%E6%8F%92%E5%85%A5%E8%A7%86%E9%A2%91.png" alt="插入视频 摘自hexo" title="视频插入" /></p>
<h3 id="插入代码文件"><a class="header-anchor" href="#插入代码文件"></a>插入代码文件</h3>
<p>插入 <code>source/downloads/code</code> 文件夹内的代码文件。<code>source/downloads/code</code> 不是固定的，取决于你在配置文件中 <code>code_dir</code> 的配置。</p>
<pre><code>&#123;% include_code [title] [lang:language] [from:line] [to:line] path/to/file %&#125;
</code></pre>
<figure class="highlight python"><figcaption><span>Hello.py</span><a href="/downloads/code/hello.py">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% include_code Hello.py lang:python hello.py %&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/Include%20Code.png" alt="插入(代码文件)中的代码 摘自hexo" title="代码插入" /></p>
<h3 id="引用资源-和-Raw"><a class="header-anchor" href="#引用资源-和-Raw"></a>引用资源 和 Raw</h3>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/%E5%BC%95%E7%94%A8%E8%B5%84%E6%BA%90%20%E5%92%8C%20Raw.png" alt="引用资源 和 Raw 摘自hexo" title="引用资源" /></p>
<h3 id="引用博客文章"><a class="header-anchor" href="#引用博客文章"></a>引用博客文章</h3>
<p>这里的引用文章，是指引用你博客下的文章，把链接指向你的另一篇文章。<br />
基本使用方法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% post_link 这里填写你的另一篇文章名称 %&#125;</span><br><span class="line">&#123;% post_link 这里填写你的另一篇文章名称 &#x27;这里是自定义链接的名称&#x27; %&#125;</span><br></pre></td></tr></table></figure>
<a href="/2019/11/markdown%E8%AF%AD%E6%B3%95/" title="markdwon笔记">markdwon笔记</a>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% post_link markdown语法 markdwon笔记 %&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/%E5%BC%95%E7%94%A8%E6%96%87%E7%AB%A0.png" alt="引用文章 摘自hexo" title="引用文章" /></p>
<h3 id="文章摘要和截断"><a class="header-anchor" href="#文章摘要和截断"></a>文章摘要和截断</h3>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81%E5%92%8C%E6%88%AA%E6%96%AD.png" alt="文章摘要和截断 摘自hexo" title="文章摘要和截断" /></p>
<hr />
<h2 id="资源文件夹"><a class="header-anchor" href="#资源文件夹"></a>资源文件夹</h2>
<blockquote>
<p>资源（Asset）代表 source 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 source/images 文件夹中。然后通过类似于 ![](/images/image.jpg) 的方法访问它们。</p>
</blockquote>
<h3 id="直接引用"><a class="header-anchor" href="#直接引用"></a>直接引用</h3>
<p>如果 Hexo 项目中只有少量图片，那最简单的方法就是将它们放在 source/images 文件夹中，然后通过以下方法引用：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">NP15</span>](<span class="link">/images/NP15.jpg</span>)</span><br></pre></td></tr></table></figure>
<h3 id="文章资源文件夹"><a class="header-anchor" href="#文章资源文件夹"></a>文章资源文件夹</h3>
<blockquote>
<p>对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 config.yml 文件中的 post_asset_folder 选项设为 true 来打开。<br />
当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new layout title </code>命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p>
</blockquote>
<h4 id="引用的代码"><a class="header-anchor" href="#引用的代码"></a>引用的代码</h4>
<p>在不使用插件的情况下进行引用(开启了“post_asset_folder”文章资源文件夹)</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">patch 3</span>](<span class="link">./NP15.jpg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% asset<span class="emphasis">_img &quot;patch 2.jpg&quot; %&#125;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里要注意，(./NP15.jpg)这种格式不能使用空格，空格会导致无法识别，图片无法加载。例如：(./patch 2.jpg)这是错误的。</p>
</blockquote>
<p>在使用hexo-asset-image<a href="https://blog.csdn.net/xjm850552586/article/details/84101345">参考链接1</a><a href="https://blog.csdn.net/Strong997/article/details/97767929">参考链接2</a>插件的情况下进行引用(开启了“post_asset_folder”文章资源文件夹)</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">NP15</span>](<span class="link">2020-02-16-试验组-1/NP15.jpg</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里同样要注意，(2020-02-16-试验组-1/NP15.jpg)这种格式也不能使用空格，空格会导致无法识别，图片无法加载。例如：(2020-02-16-试验组-1/patch 2.jpg)这是错误的。</p>
</blockquote>
<p>总结：既然加了插件也就增加了一种引用的方法，那还不如少加个插件，只用剩下的两种。当然，还可以使用外链，那就另算了。</p>
<h4 id="使用相对路径进行引用"><a class="header-anchor" href="#使用相对路径进行引用"></a>使用相对路径进行引用</h4>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%BC%95%E7%94%A8%E7%9A%84%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6.png" alt="相对路径引用的标签插件 摘自hexo" title="相对路径引用" /></p>
<h2 id="数据文件夹"><a class="header-anchor" href="#数据文件夹"></a>数据文件夹</h2>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6.png" alt="数据文件夹 摘自hexo" title="数据文件夹" /></p>
<h2 id="hexo-server"><a class="header-anchor" href="#hexo-server"></a>hexo server</h2>
<h3 id="使用服务器"><a class="header-anchor" href="#使用服务器"></a>使用服务器</h3>
<ul>
<li>
<p>Hexo 3.0 把服务器独立成了个别模块，您必须先安装 hexo-server 才能使用。在命令提示符（cmd）中输入：</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-server --save</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>安装完成后，输入以下命令以启动服务器，您的网站会在 http://localhost:4000 下启动。<strong>在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。</strong></p>
<p><code>hexo server</code></p>
<p>简写：</p>
<p><code>hexo s</code></p>
</li>
<li>
<p>如果您想要更改端口，或是在执行时遇到了 EADDRINUSE 错误，可以在执行时使用 -p 选项指定其他端口，如下：</p>
<p><code>hexo server -p 5000</code></p>
</li>
</ul>
<h3 id="静态模式"><a class="header-anchor" href="#静态模式"></a>静态模式</h3>
<blockquote>
<p>在静态模式下，服务器只处理 public 文件夹内的文件，而不会处理文件变动，在执行时，您应该先自行执行 hexo generate，此模式通常用于生产环境（production mode）下。</p>
</blockquote>
<h3 id="自定义-IP"><a class="header-anchor" href="#自定义-IP"></a>自定义 IP</h3>
<ul>
<li>服务器默认运行在 0.0.0.0，您可以覆盖默认的 IP 设置，如下：<br />
<code>hexo server -i 192.168.1.1</code></li>
<li>指定这个参数后，您就只能通过该IP才能访问站点。例如，对于一台使用无线网络的笔记本电脑，除了指向本机的127.0.0.1外，通常还有一个192.168.*.*的局域网IP，如果像上面那样使用-i参数，就不能用127.0.0.1来访问站点了。对于有公网IP的主机，如果您指定一个局域网IP作为-i参数的值，那么就无法通过公网来访问站点。</li>
</ul>
<h3 id="Pow"><a class="header-anchor" href="#Pow"></a>Pow</h3>
<p>Pow 是一个<strong>Mac</strong>系统上的零配置 Rack 服务器，它也可以作为一个简单易用的静态文件服务器来使用。</p>
<h4 id="安装"><a class="header-anchor" href="#安装"></a>安装</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl get.pow.cx | sh</span><br></pre></td></tr></table></figure>
<h4 id="设置"><a class="header-anchor" href="#设置"></a>设置</h4>
<ul>
<li>
<p>在 ~/.pow 文件夹建立链接（symlink）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/.pow</span><br><span class="line">ln -s /path/to/myapp</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>您的网站将会在 http://myapp.dev 下运行，网址根据链接名称而定。</p>
</li>
</ul>
<h2 id="hexo-generate"><a class="header-anchor" href="#hexo-generate"></a>hexo generate</h2>
<p>使用 Hexo 生成静态文件快速而且简单。</p>
<p><code>hexo generate</code></p>
<h3 id="监视文件变动"><a class="header-anchor" href="#监视文件变动"></a>监视文件变动</h3>
<p>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。</p>
<p><code>hexo generate --watch</code></p>
<h3 id="完成后部署"><a class="header-anchor" href="#完成后部署"></a>完成后部署</h3>
<p>您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo generate --deploy</span><br><span class="line">hexo deploy --generate</span><br></pre></td></tr></table></figure>
<h3 id="简写"><a class="header-anchor" href="#简写"></a>简写</h3>
<p>上面两个命令可以简写为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g -d</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>
<h2 id="hexo-功能扩展（插件）"><a class="header-anchor" href="#hexo-功能扩展（插件）"></a>hexo 功能扩展（插件）</h2>
<h3 id="文章标题锚点"><a class="header-anchor" href="#文章标题锚点"></a>文章标题锚点</h3>
<p>隶属于<code>hexo-renderer-markdown-it</code>插件下的anchors配置栏</p>
<p><a href="https://github.com/hexojs/hexo-renderer-markdown-it">Github</a> <a href="https://blog.bugimg.com/works/hexo-renderer-markdown-it_and_plugins_config.html">hexo-renderer-markdown-it 的配置</a> <a href="https://blog.bugimg.com/works/markdown_anchor.html">深究 Markdown 的锚点与使用方法</a></p>
<p>效果：在标题的左边或右边出现链接至该标题的永久链接</p>
<p>使用：</p>
<ul>
<li>
<p>直接点击即可复制链接</p>
</li>
<li>
<p>通过<code>[名称](#标题名)</code> 跳转到该标题处</p>
</li>
</ul>
]]></content>
      <categories>
        <category>IT</category>
        <category>博客</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>语法</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>有关域名的一些事</title>
    <url>/2020/01/%E6%9C%89%E5%85%B3%E5%9F%9F%E5%90%8D%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BA%8B/</url>
    <content><![CDATA[<h1>什么是域名</h1>
<p>域名(Domain Name)，是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位(有时也指地理位置，地理上的域名，指代有行政自主权的一个地方区域)。域名使一个<code>IP地址</code>有<code>&quot;面具&quot;</code> 。一个域名的目的是成为便于记忆和沟通的一组服务器的地址(网站，电子邮件，FTP等)，例如：&lt;www.baidu.com&gt; 链接的IP地址是 183.232.231.174 ；&lt;www.baidu.com&gt; 链接的其他域名是 &lt;www.a.shifen.com&gt; (这个网址也是我ping百度时发现的)。<br />
简而言之，域名就是为了方便记忆一串IP或其他网址。<br />
通俗的说，域名就相当于一个QQ的昵称，别人通过这个昵称可以更容易的找到你。</p>
<h2 id="域名类型"><a class="header-anchor" href="#域名类型"></a>域名类型</h2>
<ol>
<li>
<p>国际域名（international top-level domain-names，简称iTDs），也叫国际顶级域名。这也是使用最早也最广泛的域名。例如表示工商企业的 .com，表示网络提供商的.net，表示非盈利组织的.org等。</p>
</li>
<li>
<p>国内域名，又称为国内顶级域名（national top-level domainnames，简称nTLDs），即按照国家的不同分配不同后缀，这些域名即为该国的国内顶级域名。200多个国家和地区都按照ISO3166国家代码分配了顶级域名，例如中国是cn，美国是us，日本是jp等。详细见下文。<br />
在实际使用和功能上，国际域名与国内域名没有任何区别，都是互联网上的具有唯一性的标识。只是在最终管理机构上，国际域名由美国商业部授权的互联网名称与数字地址分配机构（The Internet Corporation for Assigned Names and Numbers）即ICANN负责注册和管理；而国内域名则由中国互联网络管理中心（China Internet Network Information Center) 即CNNIC负责注册和管理。</p>
</li>
<li>
<p>二级域名，是指顶级域名之下的域名，在国际顶级域名下，它是指域名注册人的网上名称，例如 ibm，yahoo，microsoft等；在国家顶级域名下，它是表示注册企业类别的符号，例如com，edu，gov，net等。<br />
中国在国际互联网络信息中心（Inter NIC） 正式注册并运行的顶级域名是CN，这也是中国的一级域名。在顶级域名之下，中国的二级域名又分为类别域名和行政区域名两类。类别域名共6个， 包括用于科研机构的ac；用于工商金融企业的com；用于教育机构的edu；用于政府部门的 gov；用于互联网络信息中心和运行中心的net；用于非盈利组织的org。而行政区域名有34个，分别对应于中国各省、自治区和直辖市。</p>
</li>
<li>
<p>三级域名，用字母（ A～Z，a～z，大小写等）、数字（0～9）和连接符（－）组成， 各级域名之间用实点（.）连接，三级域名的长度不能超过20个字符。如无特殊原因，建议采用申请人的英文名（或者缩写）或者汉语拼音名 （或者缩写）或者具有特殊含义的一连串字母（包含大小写）作为三级域名，以保持域名的清晰性和简洁性。</p>
</li>
<li>
<p>国际顶级中文域名，2014年8月6日，国际顶级中文域名“.网址”正式全球开放注册。国际顶级中文域名“.网址”于2011年被列入ICANN首批中文域名申请名录。“.网址”具有易记、易传播、易输入的特点，</p>
</li>
</ol>
<h2 id="域名WHOIS"><a class="header-anchor" href="#域名WHOIS"></a>域名WHOIS</h2>
<p>一个域名的所有者可以通过查询WHOIS数据库而被找到；对于大多数根域名服务器， 基本的WHOIS由ICANN维护，而WHOIS的细节则由控制那个域的域注册机构维护。对于240多个国家代码顶级域名（ccTLDs)，通常由该域名权威注册机构负责维护WHOIS。<br />
Whois是用来查看域名的当前信息状态，包括域名是否已被注册、注册日期、过期日期、域名状态、DNS解析服务器等。、</p>
<h2 id="域名命名规则"><a class="header-anchor" href="#域名命名规则"></a>域名命名规则</h2>
<p>由于Internet上的各级域名是分别由不同机构管理的，所以，各个机构管理域名的方式和域名命名的规则也有所不同。但域名的命名也有一些共同的规则，主要有以下几点：<br />
只能包含的字符<br />
域名中只能包含以下字符：</p>
<ol>
<li>26个英文字母</li>
<li>“0，1，2，3，4，5，6，7，8，9”十个数字</li>
<li>“-”（英文中的连词号）</li>
</ol>
<p>字符组合规则</p>
<ol>
<li>在域名中，不区分英文字母的大小写</li>
<li>对于一个域名的长度是有一定限制的</li>
</ol>
<p>英文域名格式如下：域名由各国文字的特定字符集、英文字母、数字及“ - ” ( 即连字符或减号 ) 任意组合而成，但开头及结尾均不能含有“ - ”。域名中字母不分大小写。域名最长可达 67 个字节 ( 包括后缀 .com 、 .net 、 .org 等 )。</p>
<p>中文域名格式如下：各级域名长度限制在26个合法字符（汉字，英文a-z ，A-Z ，数字0-9 和 - 等均算一个字符）；不能是纯英文或数字域名，应至少有一个汉字。“-”不能连续出现。</p>
<h2 id="域名解析"><a class="header-anchor" href="#域名解析"></a>域名解析</h2>
<p>域名解析 英文名：DNS (domain name resolution)<br />
注册了域名之后如何才能看到自己的网站内容，用一个专业术语就叫“域名解析”。<br />
在相关术语解释中已经介绍，域名和网址并不是一回事，域名注册好之后，<code>只说明你对这个域名拥有了使用权</code>，如果不进行域名解析，那么这个域名就不能发挥它的作用，经过解析的域名可以用来作为<code>电子邮箱的后缀</code>，也可以用来<code>作为网址访问自己的网站</code>，因此域名投入使用的必备环节是<code>“域名解析”</code>。</p>
<p>我们知道域名是为了方便记忆而专门建立的一套地址转换系统，要访问一台互联网上的服务器，<code>最终还必须通过IP地址来实现</code>，<u>域名解析就是将域名重新转换为IP地址的过程</u>。一个域名只能对应一个IP地址，而一个IP地址可以同时解析到多个域名。域名解析需要由专门的域名解析服务器（DNS)来完成。</p>
<hr />
<p>解析过程：比如，一个域名为实现HTTP服务，如果想看到这个网站，要进行解析，首先在域名注册商那里通过专门的DNS服务器解析到一个WEB服务器的一个固定IP上： 211.214.1.***  ， 然后，通过WEB服务器来接收这个域名，把 这个域名映射到这台服务器上。那么，输入这个域名就可以实现访问网站内容了。即实现了域名解析的全过程；</p>
<hr />
<p>人们习惯记忆域名，但机器间互相只认IP地址，域名与IP地址之间是一一对应的，它们之间的转换工作称为域名解析，域名解析需要由专门的域名解析服务器来完成，整个过程是自动进行的。</p>
<p><strong>域名解析器</strong><br />
域名解析器，是把域名转换成主机所在IP地址的中介。通常上网的时候，敲入一个域名地址，电脑会首先向DNS服务器搜索相对应的IP地址，服务器找到对应值之后，会把IP地址返回给你的浏览器，这时浏览器根据这个IP地址发出浏览请求，这样才完成了域名寻址的过程。操作系统会把你常用的域名IP地址对应值保存起来，当你浏览经常光顾的网站时，就可以直接从系统的DNS缓存里提取对应的IP地址，加快连线网站的速度。</p>
<h1>域名备案</h1>
<p>域名备案的目的就是为了互联网规范化、合理化建设，打击不良互联网信息的传播，如果网站不备案的话，很有可能被查处以后关停。根据中华人民共和国信息产业部第十二次部务会议审议通过的《非经营性互联网信息服务备案管理办法》条例，在中华人民共和国境内提供非经营性互联网信息服务，应当办理备案。未经备案，不得在中华人民共和国境内从事非经营性互联网信息服务。而对于没有备案的网站将予以罚款或关闭。<br />
以上是比较官方的解释，我的理解是，为了网络安全，网上的东西要接受监管。<br />
现在，备案还算简单，就是可能被各种卡脖子，而且各大域名厂商大都提供域名备案服务，备案也方便。<br />
对于备案，我是非常支持的，毕竟我又不做乱七八糟的事情，而且我也非常希望网络秩序正常，网络安全有保障。所以大家能备案的就去备案吧（别像我一样，被警察叔叔劝回了😅）。</p>
<h1>我的域名使用经历</h1>
<p>我的第一个域名是在贝锐科技（花生壳）里注册的，当时还不熟悉各大域名商，所以就找了贝锐这个看起来有点专业的厂商（在这里注册，在“某些方面”上有些方便的地方）。<br />
因为我一开始是不知道域名到底该怎么用的，我是抱着先买域名，再研究域名怎么用的想法。所以我买完域名，进入域名管理台，先要实名认证（要审核大概一两天），然后就是域名解析了。</p>
<hr />
<p>域名解析中，有几个标签，子域名、记录类型、线路类型、记录值、TTL。</p>
<ul>
<li>
<p><strong>子域名</strong>，如 www、@、* ；</p>
<p>www：解析后的域名为 www.yunying61.top<br />
@：直接解析主域名 yunying61.top<br />
*：泛解析，匹配其他所有域名 *.yunying61.top</p>
<p>当然，如果要将域名 yunying61.top 解析为 ftp.yunying61.top ，请在子域名处填写ftp就可以了。</p>
</li>
<li>
<p><strong>记录类型</strong></p>
<p>A记录：将域名指向空间服务商提供的IPv4地址，使网站可用域名访问</p>
<p>AAAA记录：将域名指向一个IPv6地址</p>
<p>CNAME：将域名指向另一个域名实现用A域名访问到B域名</p>
<p>NS记录：将子域名指定其他DNS服务器解析</p>
<p>CAA：将域名授权指定CA机构为其域名签发证书，CA机构签发证书时强制性检查CAA记录</p>
<p>MX记录：用于搭建邮箱，将域名指向邮件服务器地址，使该邮箱可以成功接收邮件</p>
<p>SRV记录：用于将域名搭建dns服务器</p>
<p>TXT记录：文本长度限制512，常用于SPF（反垃圾邮件），实现更好地收发邮件，稳定点，少出现发送到别人的垃圾邮箱里的情况</p>
<p>URL跳转：访问域名可跳转到一个网址上，实现不加端口号即可访问服务器（<code>显性URL</code>，会改变地址栏中的网址，<code>隐性URL</code>则反之）</p>
<p>**注：**域名根/泛域名不支持设置 URL跳转，CNAME记录。</p>
<ul>
<li>搭建网站，要将域名指向主机服务商提供的IP地址，请选择「A记录」</li>
<li>要将域名指向主机服务商提供的另一个域名，请选择「CNAME」。</li>
<li>建立邮箱，根据邮箱服务商提供的MX记录填写，请选择「MX记录」。</li>
</ul>
</li>
<li>
<p><strong>记录值</strong></p>
<p>记录值就要根据你的记录类型来填写：<br />
A记录的记录值为IPv4形式（如10.10.10.10）<br />
AAAA记录的记录值为IPv6形式（如ff03:0:0:0:0:0:0:c1）<br />
CNAME记录的记录值为域名形式（如abc.example.com）<br />
NS记录的记录值为域名形式（如ns1.example.com）<br />
MX记录的记录值为域名形式（如abc.example.com）<br />
SRV记录格式为： 优先级 权重 端口 目标地址 ，每项中间需以空格分隔。例如 “0 5 5060 sipserver.example.com”<br />
URL转发记录的值为域名或URL地址</p>
</li>
<li>
<p><strong>TTL</strong></p>
<p>TTL英文为Time To Live（生存时间），即域名解析的生存时间，也就是指域名的DNS解析记录在DNS服务器上的生存时间。</p>
<p>当用户访问该网站，并不是每次都会向DNS服务器上获取域名解析。比如用户第一次访问一个网站的域名，会到<strong>DNS服务器</strong>上进行解析获取到该域名所对应的IP地址，用户从DNS服务器上获取的信息会缓存到当地的递归DNS服务器上。当第二个用户访问该网站时，递归服务器会直接返回解析结果，而不会再向DNS服务器请求解析。</p>
<p>那是不是TTL值设置的越小，生效越快，就越好呢？<br />
实际上，修改DNS的频率很小，没有特殊情况，谁会没事修改DNS解析呢？而一旦我们将域名解析的TTL值设置的很小，就会导致几乎每次用户的解析，递归服务器都需要向DNS服务器进行解析请求，相对于用户直接从递归服务器上获取缓存解析，时间上要消耗得更多，所以TTL值太小会影响用户的访问体验。</p>
<p>一般情况下：<strong>建议设置600秒</strong>即可，因为阿里云默认的域名解析TTL值为10分钟，腾讯云默认的TTL值为也是10分钟，既然大厂都是这么认为的，所以TTL值设为600秒算是比较合理的。</p>
<p>也可以参考下表进行设置，<a href="https://www.xinshouzhanzhang.com/dnsttl.html">来源</a></p>
<table>
<thead>
<tr>
<th style="text-align:center">IP是否经常变动</th>
<th style="text-align:center">是否动态IP</th>
<th style="text-align:center">宕机检测</th>
<th style="text-align:center">服务架构</th>
<th style="text-align:center">建议TTL值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">否</td>
<td style="text-align:center">否</td>
<td style="text-align:center">否</td>
<td style="text-align:center">热备、灾备、固定IP</td>
<td style="text-align:center">3600</td>
</tr>
<tr>
<td style="text-align:center">否</td>
<td style="text-align:center">否</td>
<td style="text-align:center">是</td>
<td style="text-align:center">大型网站</td>
<td style="text-align:center">60</td>
</tr>
<tr>
<td style="text-align:center">否</td>
<td style="text-align:center">否</td>
<td style="text-align:center">不使用</td>
<td style="text-align:center">单服务器</td>
<td style="text-align:center">600</td>
</tr>
<tr>
<td style="text-align:center">否</td>
<td style="text-align:center">否</td>
<td style="text-align:center">使用</td>
<td style="text-align:center">多服务器</td>
<td style="text-align:center">180</td>
</tr>
<tr>
<td style="text-align:center">是</td>
<td style="text-align:center">否</td>
<td style="text-align:center">不使用</td>
<td style="text-align:center">单服务器</td>
<td style="text-align:center">300</td>
</tr>
<tr>
<td style="text-align:center">是</td>
<td style="text-align:center">是</td>
<td style="text-align:center">不限</td>
<td style="text-align:center">不限</td>
<td style="text-align:center">120</td>
</tr>
</tbody>
</table>
</li>
</ul>
<p>然后就是根据自己需要，进行域名解析啦。</p>
<hr />
<p>之后，买了阿里云的云服务器后也顺带再买了个域名（毕竟买域名也算是投资）。然后，我就遇到了域名备案这个东西，后来在学习和使用各种技术的时候，我被这个域名备案各种限制。于是，我决定去域名备案。但发现…(⚪v⚪)自己太年轻了，域名备案要被打电话询问各种情况，为什么要备案？（我的内心活动是？？？）网站的前端用的是什么技术？后端又是什么技术？哎，总之，没准备的话，会比较艰难（这些是阿里的客服问的，说是后面会有正规的人员问这些问题）。到这里，我还没打消备案的心，直到公安局的电话打来。。。<br />
警察叔叔告诉我，你还是个大学生，现在就搞网站就是抱着尝试（玩一下）的心态，之后不去管理网站就会被黑客黑掉，拿去发布赌博、色情内容，然后被查到以后，你这个网站负责人就GG了，是要负法律责任的！！！<br />
到此，我也仔细想了一下，感觉有道理，警察说的很直白了当，于是就放弃备案了。</p>
<hr />
<p>我后来查了一下，发现域名不备案就不能直接解析到IP地址，但是这点可以<s>曲线救国</s>，通过香港或境外的域名解析服务，先解析IP，然后再把国内的域名通过CNAME记录解析到境外域名。但是，国内大部分网站的域名绑定服务是需要有备案的域名才能用的，这点我现在还没想到解决办法。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>网络</category>
        <category>服务器</category>
        <category>个人</category>
        <category>日记</category>
      </categories>
      <tags>
        <tag>域名</tag>
        <tag>备案</tag>
      </tags>
  </entry>
  <entry>
    <title>Minecraft服务器搭建</title>
    <url>/2020/01/Minecraft%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="如何搭建一个Minecraft服务器"><a class="header-anchor" href="#如何搭建一个Minecraft服务器"></a>如何搭建一个Minecraft服务器</h2>
<p>这是本人的开服经历，希望能帮到大家，让大家少踩坑。</p>
<ol>
<li>需要配置Java的环境。</li>
<li>下载Minecraft服务端，通过官方的服务端开服，所以搭建好的服务器是纯净版的，而且是需要正版验证的（这个可以在设置里改成不需要正版验证）。</li>
<li>配置服务器文件，将服务器的配置修改成自己需要的。</li>
<li>安装forge，将纯净服变成Mod服。</li>
<li>使用CatServer服务器核心，便捷的搭建mod服务器。</li>
<li>将服务器发布到外网，使其他人能在不同网络上连接到服务器。</li>
</ol>
<h3 id="配置Java的环境"><a class="header-anchor" href="#配置Java的环境"></a>配置Java的环境</h3>
<p>这里，参考我的另一篇文章———— <a href="/2020/01/%E9%85%8D%E7%BD%AEJava%E7%8E%AF%E5%A2%83/" title="配置Java环境">配置Java环境</a></p>
<h3 id="配置Minecraft服务端"><a class="header-anchor" href="#配置Minecraft服务端"></a>配置Minecraft服务端</h3>
<ol>
<li>
<p><strong>下载</strong><br />
可以再Mojang官网下载最新的服务端<a href="https://www.minecraft.net/en-us/download/server/">官网链接</a></p>
</li>
<li>
<p><strong>新建bat文件(方便再次运行)</strong><br />
下载完成后将其复制到一个新目录，并再新目录下新建一个bat文件，将以下命令行写入并保存</p>
</li>
</ol>
<blockquote>
<p><code>java -Xmx1024M -Xms1024M -jar server.jar nogui</code><br />
-Xmx -Xms用于指定使用内存的最大最小值(MB)，可根据实际使用情况调整，<code>server.jar</code>是你下载的服务端文件名<code>(此处稍微注意一下，文件名一致)</code>，nogui的意思是部显示java程序的GUI界面，这个可以根据自己的习惯添上。</p>
</blockquote>
<ol start="3">
<li>
<p><strong>首次启动服务端</strong><br />
双击运行bat文件，首次运行需要签署用户协议。<br />
等它代码加载停止后，先关闭服务端并前往其所在目录，我们会发现目录下已经自动生成了多个文件。</p>
</li>
<li>
<p><strong>签署协议</strong><br />
寻找一个名为&quot;eula.txt&quot;的文件，打开，在结尾把<code>eula=false</code>改成<code>eula=true</code>并保存，即成功签署用户协议。</p>
</li>
</ol>
<p>接下来不急着启动服务端，在这些文件中，我们还会看到服务器配置文件<code>server.properties</code>(这个文件，如果没有其他代码编辑器，可以用记事本打开)，可根据使用情况编辑</p>
<h4 id="配置服务器文件"><a class="header-anchor" href="#配置服务器文件"></a>配置服务器文件</h4>
<p>这里由于篇幅略长，请转至我的另一篇文章———— <a href="/2020/01/%E9%85%8D%E7%BD%AEMinecraft%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%96%87%E4%BB%B6/" title="配置Minecraft服务端文件">配置Minecraft服务端文件</a></p>
<h3 id="安装forge"><a class="header-anchor" href="#安装forge"></a>安装forge</h3>
<p>这里，安装的forge要对应其Minecraft Server的版本，例如，这里我上传的是<u>forge-1.12.2</u>,则它对应的是<u>server 1.12.2.jar</u>。<br />
步骤</p>
<ol>
<li>
<p>下载forge<br />
<a href="https://files.minecraftforge.net/">forge官网</a></p>
</li>
<li>
<p>安装forge</p>
<ul>
<li>
<p>先讲一下安装器版的操作(就是forge-xxx.exe的文件)<br />
按照上面<a href="#%E9%85%8D%E7%BD%AEMinecraft%E6%9C%8D%E5%8A%A1%E7%AB%AF">配置服务端</a>的操作配置好，然后打开<abbr title="就刚刚下载的那个文件，exe后缀名的那个">forgeapi程序</abbr>，选择install server（译为以服务端的形式安装），这里记得先把服务端关闭(一般来说就是那个cmd命令的那个黑框框，或者Minecraft server的服务端窗口)，接下来，点一下那那三个点(…)选择你安装服务端（有<code>server.jar</code>文件）的那个<strong>文件夹</strong>，点一下OK，就可以等它完成了，时间可能有点长，看配置和网速。</p>
<p>最后，把你那个<strong>bat文件</strong>里的<code>server.jar</code>改成<code>forge-xxx-xxx-universal.jar</code>那个文件的名称，等于以后启动的服务端就是有forge的mod服了，mod就放在服务端目录下的mods文件夹里(第一次启动了forge.jar就会自动生成)</p>
</li>
<li>
<p>接下来讲jar文件版的操作(就是forge-xxx.jar的文件)<br />
将下载好的forge放在一个目录下，新建一个txt文档，将其后缀名改为bat，右键编辑，将下面的代码输进去，保存，关闭</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@echo</span><br><span class="line">java -Xms1024M -Xmx1024M -jar 下载的jar文件名.jar</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<p>双击bat文件，运行，弹处下图<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/Minecraft/forge.jpg?x-oss-process=style/yunying61" alt="forge安装" /><br />
（<s>你会发现从这开始，和上面讲安装器版很像了，好吧我就是复制粘贴上面的</s>）<br />
选择install server（译为以服务端的形式安装），这里记得先把服务端关闭(一般来说就是那个cmd命令的那个黑框框，或者Minecraft server的服务端窗口)，接下来，点一下那那三个点(…)选择你安装服务端（有<code>server.jar</code>文件)的那个<strong>文件夹</strong>，点一下OK，就可以等它完成了，时间可能有点长，看配置和网速。</p>
<p>最后，把你那个bat文件里的<code>server.jar</code>改成<code>forge-xxx-xxx-universal.jar</code>那个文件的名称，等于以后启动的服务端就是有forge的mod服了，mod就放在服务端目录下的mods文件夹里(第一次启动了forge.jar就会自动生成)<br />
<em>安装过程中会下载一些依赖库，由于某些原因可能会下载失败，多安装几次就行</em></p>
</li>
</ul>
</li>
<li>
<p>关于mod<br />
有时候mod添加上去却发现服务端报错，那是因为有些mod是不支持服务器的，所以要加在服务器上的mod，是需要mod支持服务器的。（请自行查看mod说明文件中，是否支持服务器）</p>
</li>
</ol>
<h2 id="CatServer服务器核心"><a class="header-anchor" href="#CatServer服务器核心"></a>CatServer服务器核心</h2>
<h3 id="CatServer简介"><a class="header-anchor" href="#CatServer简介"></a>CatServer简介</h3>
<p>catserver是一个向MC高版本MOD服提供bukkit/spigot/paper插件支持的全新核心。完善程度非常之高,已经可以投入烈度生产环境进行生产。<br />
由于sponge等新一代api，门槛过高等原因困扰了很多想要进军高版本mod的腐竹，<br />
而catserver则解决了上述问题具有简单可靠，性能强劲，方便配置等特点。<br />
同时致力于为广大服主们提供简单易上手且性能可靠的服务端核心。</p>
<h3 id="使用"><a class="header-anchor" href="#使用"></a>使用</h3>
<blockquote>
<p>简述：将核心.jar放入服务器根目录，随后参照使用普通核心的方法用启动参数启动即可。<br />
下载地址：<a href="https://github.com/Luohuayu/CatServer/releases">https://github.com/Luohuayu/CatServer/releases</a></p>
</blockquote>
<blockquote>
<p>详述：将下载好的<code>CatServer服务器核心</code>和放在一个目录下，新建一个txt文档，将其后缀名改为bat，右键编辑，将下面的代码输进去，保存，关闭</p>
</blockquote>
<pre><code>@echo
java -Xms1024M -Xmx1024M -jar 下载的CatServerjar文件名.jar
pause
</code></pre>
<h2 id="将服务器发布到外网"><a class="header-anchor" href="#将服务器发布到外网"></a>将服务器发布到外网</h2>
<ol>
<li>有公网IP，请使用端口映射。（希望你的上传和下载带宽足够大🙏）</li>
<li>无，请考虑内网穿透（具体怎么穿，请看他们的介绍）：
<ol>
<li><a href="https://console.hsk.oray.com/forward">花生壳</a> （1M带宽，1G流量/月）</li>
<li><a href="https://www.natfrp.com/">Sakura Frp</a> （10M带宽，签到领流量）</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>IT</category>
        <category>网络</category>
        <category>Games</category>
        <category>软件</category>
        <category>服务器</category>
        <category>Minecraft</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>服务器</tag>
        <tag>Minecraft</tag>
        <tag>我的世界</tag>
      </tags>
  </entry>
  <entry>
    <title>配置Minecraft服务端文件</title>
    <url>/2020/01/%E9%85%8D%E7%BD%AEMinecraft%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1>配置Minecraft服务端文件</h1>
<blockquote>
<p>注：这是java版的服务端参数，参数介绍翻译自Mojang官方文档，地址:<a href="https://minecraft.gamepedia.com/Server.properties">https://minecraft.gamepedia.com/Server.properties</a></p>
</blockquote>
<details class="note primary"><summary><p>spawn-protection=16</p>
</summary>
<p>通过将该值进行(x*2)+1的运算来决定出生点的保护半径。设置为0将不会禁用出生点保护。</p>
<p>设置为0将会保护位于出生点的1x1方块区域，</p>
<p>设置为1将会保护以出生点为中心的3x3方块区域，以此类推。</p>
<p>这个选项只会在第一个玩家进行服务器时生成。如果服务器没有设置OP，这个选项将会自动禁用。</p>

</details>
<details class="note primary"><summary><p>max-tick-time=60000</p>
</summary>
<p>设置每个tick花费的最大毫秒数，超过该最大毫秒数看门狗将停止服务器程序并附带上一些信息。</p>

</details>
<details class="note primary"><summary><p>query.port=25565</p>
</summary>
<p>设置监听服务器的端口号</p>

</details>
<details class="note primary"><summary><p>generator-settings=</p>
</summary>
<p>本属性质用于自定义超平坦世界的生成。详见<a href="https://minecraft-zh.gamepedia.com/%E8%B6%85%E5%B9%B3%E5%9D%A6%E4%B8%96%E7%95%8C">超平坦世界</a>和<a href="https://minecraft-zh.gamepedia.com/%E8%87%AA%E5%AE%9A%E4%B9%89">自定义</a>了解正确的设定及例子。</p>

</details>
<details class="note primary"><summary><p>force-gamemode=false</p>
</summary>
<p>是否强制玩家以默认游戏模式游玩</p>

</details>
<details class="note primary"><summary><p>allow-nether=true</p>
</summary>
<p>是否允许玩家前往下界</p>

</details>
<details class="note primary"><summary><p>enforce-whitelist=false</p>
</summary>
<p>在服务器上强制执行白名单。当启用后，不在白名单中的用户将在服务器重新加载白名单文件后从服务器踢出。</p>

</details>
<details class="note primary"><summary><p>gamemode=survival</p>
</summary>
<p>游戏模式，包括：</p>
<p>survival(0)生存模式、creative(1)创造模式、</p>
<p>adventure(2)冒险模式（仅在12w22a之后，或正式版1.3之后可用）、</p>
<p>spectator(3)旁观模式（仅在14w05a之后，或正式版1.8之后可用）</p>

</details>
<details class="note primary"><summary><p>broadcast-console-to-ops=true</p>
</summary>

</details>
<details class="note primary"><summary><p>broadcast-rcon-to-ops=true</p>
</summary>

</details>
<details class="note primary"><summary><p>enable-query=false</p>
</summary>
<p>是否允许使用GameSpy4协议的服务器监听器。它被用于收集服务器信息</p>

</details>
<details class="note primary"><summary><p>player-idle-timeout=0</p>
</summary>
<p>玩家n分钟无任何操作将被自动踢出，0为关闭自动踢出</p>

</details>
<details class="note primary"><summary><p>difficulty=easy</p>
</summary>
<p>定义服务器的游戏难度（例如生物对玩家造成的伤害，饥饿与中毒对玩家的影响方式等），包括：</p>
<p>和平(peaceful)(0)、简单(easy)(1)、普通(normal)(2)、困难(hard)(3)</p>
<p>如果设置了旧的数字ID，则会自动转化为英文的难度名称</p>

</details>
<details class="note primary"><summary><p><a id=opl>op-permission-level</a>=4</p>
</summary>
<p>设定OP的权限等级<br />
1 - OP可以无视重生点保护。<br />
2 - OP可以使用单人游戏作弊命令（除了/publish，因为不能在服务器上使用，/debug也是）并使用命令方块。命令方块和领域服服主/管理员有此等级权限。<br />
3 - OP可以使用几乎所有多人游戏限定的命令（除第4级专用命令）<br />
4 - OP可以使用所有命令，包括/stop、/save-all、/save-on和/save-off。</p>

</details>
<details class="note primary"><summary><p>pvp=true</p>
</summary>
<p>是否允许玩家互相伤害</p>

</details>
<details class="note primary"><summary><p>snooper-enabled=false</p>
</summary>
<p>自1.3正式版之后，一旦启用，将允许服务端定期发送统计数据到<a href="http://snoop.minecraft.net">http://snoop.minecraft.net</a>。</p>

</details>
<details class="note primary"><summary><p>level-type=default</p>
</summary>
<p>地图生成类型，包括：<br />
DEFAULT - 标准的世界带有丘陵，河谷，海洋等<br />
FLAT - 一个没有特色的平坦世界，适合用于建设<br />
LARGEBIOMES - 如同预设世界，但所有生态系都更大（仅快照12w19a，或正式版1.3之后可用）<br />
AMPLIFIED - 如同预设世界，但世界生成高度提高（仅快照13w36a，或正式版1.7.2之后可用）<br />
CUSTOMIZED - 自快照14w21b以来，服务器也支持自定义地形。使用方法是在generator-settings贴上代码。</p>

</details>
<details class="note primary"><summary><p>hardcore=</p>
</summary>
<p>极限模式(一旦启用，玩家在死后会自动被服务器封禁，进入spectator模式)，会覆写设定的游戏难度</p>

</details>
<details class="note primary"><summary><p>enable-command-block=false</p>
</summary>
<p>是否启用命令方块</p>

</details>
<details class="note primary"><summary><p>max-players=20</p>
</summary>
<p>服务器同时能容纳的最大玩家数量，可输入0~2147483647，服务器的OP具有在人满的情况下强行进入服务器的权力，找到在服务器根目录下叫ops.json的文件并打开，设置你要突破人数限制的OP下的bypassesPlayerLimit选项为true即可（默认值为false），这意味着OP将不需要在服务器人满时等待玩家离开再加入，过大的数值会使客户端显示的玩家列表崩坏。</p>

</details>
<details class="note primary"><summary><p>network-compression-threshold=256</p>
</summary>
<p>默认会允许n-1字节的数据包正常发送, 如果数据包为 n 字节或更大时会进行压缩。</p>

</details>
<details class="note primary"><summary><p>resource-pack-sha1=</p>
</summary>
<p>资源包的SHA-1值，必须为小写十六进制，建议填写它，这还没有用于验证资源包的完整性，但是它提高了资源包缓存的有效性和可靠性。</p>

</details>
<details class="note primary"><summary><p>max-world-size=29999984</p>
</summary>
<p>最大世界范围(半径)，比如，1000即为2000x2000方形地图</p>

</details>
<details class="note primary"><summary><p>function-permission-level=2</p>
</summary>
<p>设置命令的权限等级(1-4)，权限等级2可以使用/reload和/forceload，可以参考<a href="#opl">op-permission-level</a></p>

</details>
<details class="note primary"><summary><p>rcon.port=25575</p>
</summary>
<p>设置远程访问的端口号</p>

</details>
<details class="note primary"><summary><p>server-port=25565</p>
</summary>
<p>服务器端口</p>

</details>
<details class="note primary"><summary><p>server-ip=</p>
</summary>
<p>服务器地址，默认留空即可</p>

</details>
<details class="note primary"><summary><p>allow-flight=false</p>
</summary>
<p>false - 不允许飞行。悬空超过5秒的玩家会被踢出服务器。也会包括使用三叉戟的激流附魔、时间很长的自由落体或是网络卡顿导致的误判。<br />
true - 允许飞行。玩家得以使用飞行MOD飞行。</p>

</details>
<details class="note primary"><summary><p>level-name=world</p>
</summary>
<p>世界的名字(同时也是存放世界文件夹的名字)，更改名字会让服务器尝试加载不同文件夹中的地图</p>

</details>
<details class="note primary"><summary><p>view-distance=8</p>
</summary>
<p>它决定了服务端的<code>可视距离</code>，设置服务端传送给客户端的数据量，也就是设置玩家各个方向上的区块数量 (是以玩家为中心的半径，不是直径)。</p>

</details>
<details class="note primary"><summary><p>resource-pack=</p>
</summary>
<p>可输入指向一个资源包的URI。玩家可选择是否使用该资源包。注：下载到的服务器资源包将保存在.minecraft\server-resource-packs下。</p>

</details>
<details class="note primary"><summary><p>spawn-animals=true</p>
</summary>
<p>是否生成动物</p>

</details>
<details class="note primary"><summary><p>spawn-monsters=true</p>
</summary>
<p>决定攻击型生物（怪兽）是否可以生成</p>

</details>
<details class="note primary"><summary><p>spawn-npcs=true</p>
</summary>
<p>是否生成npc</p>

</details>
<details class="note primary"><summary><p>white-list=false</p>
</summary>
<p>服务器的白名单,当启用时，只有白名单上的用户才能连接服务器。白名单主要用于私人服务器，例如相识的朋友等。<br />
注 - OP会自动被视为在白名单上。所以无需再将OP加入白名单。<br />
false - 不使用白名单。<br />
true - 从 whitelist.json 文件加载白名单。</p>

</details>
<details class="note primary"><summary><p>rcon.password=</p>
</summary>
<p>设置远程访问的密码</p>

</details>
<details class="note primary"><summary><p>generate-structures=true</p>
</summary>
<p>是否生成建筑(包括村庄等)，注：即使设为 false，地牢和下界要塞仍然会生成</p>

</details>
<details class="note primary"><summary><p>max-build-height=256</p>
</summary>
<p>玩家能够建造的最大高度。地形生成算法并不会受这个值的影响。</p>

</details>
<details class="note primary"><summary><p>online-mode=true</p>
</summary>
<p>服务器是否开启在线验证(<code>仅允许正版玩家连接</code>)，谨慎切换，可能导致玩家数据丢失</p>

</details>
<details class="note primary"><summary><p>level-seed=</p>
</summary>
<p>自定义世界种子</p>

</details>
<details class="note primary"><summary><p>use-native-transport=true</p>
</summary>
<p>是否使用针对Linux平台的数据包收发优化</p>

</details>
<details class="note primary"><summary><p>prevent-proxy-connections=false</p>
</summary>
<p>如果服务器发送的和Mojang的验证服务器的ISP/AS不一样,玩家将会被踢出<br />
true - 服务器将会禁止玩家使用虚拟专用网络或代理<br />
false - 服务器将不会禁止玩家使用虚拟专用网络或代理</p>

</details>
<details class="note primary"><summary><p>enable-rcon=false</p>
</summary>
<p>是否允许远程访问服务器控制台</p>

</details>
<details class="note primary"><summary><p>motd=A Minecraft Server</p>
</summary>
<p>玩家在多人游戏服务器列表中看到的服务器信息，显示于名称下方，那些<s>花里胡哨</s>的东西请参考官方的<a href="https://minecraft-zh.gamepedia.com/%E6%A0%B7%E5%BC%8F%E4%BB%A3%E7%A0%81">样式代码</a></p>

</details>
<details class="note primary"><summary><p>announce-player-achievements=false</p>
</summary>
<p>玩家获得成就时是否在服务器中进行显示。在1.12之后的版本中，announce-player-achievements属性被移除。如果已经在服务器配置文件中设置了此条属性，则游戏规则announceAdvancements将自动更新，随后从文件中删除此条属性。</p>

</details>
<h1>基岩版服务端配置文件</h1>
<p>基岩版的服务器我没开过，等什么时候我开了基岩服再说吧。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>Games</category>
        <category>软件</category>
        <category>Minecraft</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>服务器</tag>
        <tag>Minecraft</tag>
        <tag>我的世界</tag>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下mklink使用</title>
    <url>/2020/01/Windows%E4%B8%8Bmklink%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1>mklink命令</h1>
<p>mklink是windows系统下创建符号链接和硬链接的命令工具，它是一个很好的解决文件系统问题的工具。使用它需要<strong>管理员权限</strong>。</p>
<p>首先，先来介绍下mklink这个命令：</p>
<pre><code>mklink [[/D] | [/H] | [/J]] Link Target
/D      创建目录符号链接。默认为文件符号链接。
/H      创建硬链接而非符号链接。
/J      创建目录联接。
Link    指定新的符号链接名称。
Target  指定新链接引用的路径(相对或绝对)。
</code></pre>
<blockquote>
<p>注意：因为powershell不支持mklink命令，所以要在前面加cmd /c表示用cmd来运行该命令，路径注意引号，可以是相对路径也可以是绝对路径。</p>
</blockquote>
<h2 id="符号链接（Symbolic-link）"><a class="header-anchor" href="#符号链接（Symbolic-link）"></a>符号链接（Symbolic link）</h2>
<p>对文件创建符号链接</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mklink &quot;link&quot; &quot;target&quot;</span><br></pre></td></tr></table></figure>
<p>对文件夹创建符号链接</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mklink /D &quot;link&quot; &quot;target&quot;</span><br></pre></td></tr></table></figure>
<p>符号链接连接远程的路径</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mklink /D &quot;D:\link&quot; &quot;\\<span class="number">123</span>.<span class="number">123</span>.<span class="number">0</span>.<span class="number">1</span>\D$\target&quot;</span><br></pre></td></tr></table></figure>
<p><strong>特点</strong></p>
<ul>
<li>创建链接后的图标和快捷方式很像, 都有一个箭头的标志</li>
<li>在系统中不占用空间</li>
<li>在文件系统中不是一个单独的文件</li>
<li>如果源文件被删除了，链接就没用了</li>
<li>移除源文件不会影响符号链接</li>
<li>移除链接文件也不会影响源文件</li>
<li>win10_x64_build10565上测试不可以右键修改图标和设置管理员运行</li>
<li>文件大小为0字节和不占用空间</li>
<li>文件属性的创建时间和修改时间都是软链接创建和修改时的时间</li>
<li>文件类型是.SYMLINK</li>
<li>可以在cmd下运行软链接(假如链接的是程序, 且运行命令是XXX即可)(win10_x64_build10565上测试通过)</li>
</ul>
<p>符号链接是在文件系统上实现的链接，对操作系统上大多数软件来说是透明的，也就是说，当软件访问符号链接时，其实际上是在访问该符号链接所指向的文件夹。<br />
创建的符号链接显示的类型是文件夹，实际上相当于是指向<code>其他盘</code>真实的文件夹路径的<code>快捷方式</code>，符号链接本身不占空间。路径映射的过程对程序来说是透明的，程序对这个符号链接的操作实际上是<code>对文件夹的操作</code>，因此程序可以正常运行，所以这和普通的创建快捷方式是不一样的操作。此外，符号链接和目录联接是有快捷方式的那个箭头的。</p>
<blockquote>
<p>注意：软链接的创建需要<code>管理员权限</code>，确保cmd是管理员模式。对于文件夹的软链接创建，一定要加上&quot;/D&quot;。通过<code>相对路径</code>创建的软链接在移动后无法使用，<code>绝对路径</code>创建的移动后不影响使用。符号链接可以直接右键删除，或通过<strong>rmdir</strong>命令删除，不会影响原文件，但<strong>del</strong>命令则<strong>会把目标文件删除</strong>。</p>
</blockquote>
<h2 id="硬链接（Hard-link）"><a class="header-anchor" href="#硬链接（Hard-link）"></a>硬链接（Hard link）</h2>
<p>对文件创建硬链接</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mklink /H &quot;link&quot; &quot;target&quot;</span><br></pre></td></tr></table></figure>
<ul>
<li>硬链接只能用于文件，不能对文件夹创建硬链接，不然会提示“拒绝访问”</li>
<li>在系统中占用的空间与源文件相同，但在系统中引用的是相同的对象（不是拷贝）</li>
<li>图标和创建快捷方式的图标不同(没有快捷方式的小箭头)</li>
<li>移除源文件不会影响硬链接</li>
<li>移除硬链接不会影响源文件</li>
<li>如果源文件被删除，它的内容依然通过硬链接存在</li>
<li>硬链接文件的任何更改都会影响到源文件</li>
<li>文件大小, 占用空间, 创建和修改时间跟原原文件一样</li>
<li>可以在cmd下运行硬连接(假如链接的是程序)</li>
</ul>
<p>通过上述命令就可以创建从“link”路径到“target”路径的硬链接，例如：在D盘根目录下新建文本“A.txt”，然后输入命令如下即可创建到&quot;A.txt&quot;的硬链接&quot;B.txt&quot;<br />
在文件资源管理器上看，“B.txt”与“A.txt”占用同样大小的空间，其实这个数据并不用去理会，硬链接相当于给文件的数据多创建了一个“入口”，“A.txt”,“B.txt”指向的是硬盘中的同一块区域，因此这两个文件的内容是完全一样的，编辑任何一个文件都会影响到另一文件，当删除其中一个文件，只是删除这个文件其中一个“入口”，要两个文件都删除，文件系统才会标志这块硬盘区域上的文件被删除。</p>
<h2 id="目录联接-创建软链接首选"><a class="header-anchor" href="#目录联接-创建软链接首选"></a>目录联接(创建软链接首选)</h2>
<p>对文件夹创建目录联接</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mklink /J &quot;link&quot; &quot;target&quot;</span><br></pre></td></tr></table></figure>
<p>“目录联接”只能应用于文件夹，不可用于文件。根据网上能找到的资料显示，对文件夹创建的“目录联接”与“符号链接”并没有区别，一样可以实现软件数据的迁移。不过貌似这两者对剪切操作有不一样的表现。<br />
例如，我现在在D盘创建“文件夹A”,在“文件夹A”里新建A.txt，然后在D盘根目录创建一个“目录联接B”指向这个“文件夹A”，通过这个“目录联接B”，我可以访问到A.txt，接着我对“目录联接B”进行剪切操作，剪切到C盘，发现“文件夹A”和“目录联接B”还是在D盘，但是打开却发现A.txt不见了，被剪切到了C盘的“文件夹B”中，也就是说对“目录联接”的剪切操作会<code>影响原来的文件</code>。<br />
对于这其中的机制，很神奇。。。感觉“目录联接”跟“符号链接”有点像，给文件夹里的内容提供一个“入口”即所谓的“联接点”，剪切操作时会通过这个“联接点”把内容剪切出来，原来的目录和“联接点”虽然没有变化，但里面的内容被剪切出来了。<br />
而“符号链接”的剪切操作<code>仅仅是对这个“符号链接”的剪切</code>，并不会透过这个“符号链接”把其<code>内容剪切掉</code>。</p>
<h2 id="mklink-硬链接和符号链接的区别"><a class="header-anchor" href="#mklink-硬链接和符号链接的区别"></a>mklink 硬链接和符号链接的区别</h2>
<p>硬链接只能用于文件，不能用于文件夹，而且硬链接和目标文件必须在同一个分区或者卷中。硬链接的目的是<code>为了给文件创建多个目录路径(多个入口)</code>，而不像符号链接是为了指向某个已有的文件。</p>
<p>假设要给Target. txt文件创建一个硬链接，系统下载可以执行以下命令：</p>
<p>mklink/H Link.txt Target.txt</p>
<p>和符号链接一样，<code>硬链接中所做的任何修改，都会自动应用到目标文件上</code>。但是硬链接具有以下一些不同的地方。</p>
<p>(1)硬链接必须引用同一个分区或者卷中的文件，而符号链接可以指向不同分区或者共享文件夹上的文件或者文件夹。</p>
<p>(2) 硬链接只能引用文件，而符号链接可以引用文件或者文件夹。</p>
<p>(3)Windows会自动维护硬链接，即使把硬链接复制到其他文件夹，硬链接和目标都可以继续访问。</p>
<p>(4)删除目标文件，硬链接可以继续保留。只有把目标文件和所有的硬链接都删除，才能把该文件彻底删除。</p>
<p>(5)如果win7把符号链接的目标文件删除，然后用一个同名文件替换，则符号链接会指向新的目标文件；而把硬链接的目标文件删除’再用同名文件替换，则硬链接还是会继续引用原始文件。</p>
<p>(6)也就是说，硬链接和目标文件的地位相等。事实上，原始的目标文件本身也相当于硬链接，新建硬链接，只是相当于增加一个目录路後而已。</p>
<p>(7)硬链接看上去和真的文件一模一样(实际上就是真实的文件)，不像符号链接那样有一个快捷方式的小箭头，但是硬链接并不会增加磁盘空间的占用。</p>
<p>(8)对硬链接进行NTFS权限的修改，会同时影响到目标文件(因为两者等价)，而符号链接和目标文件可以设置不同的NTFS权限。</p>
<blockquote>
<p>综上，我们可以将硬链接理解成C语言中的指针、空间中的传送门，文件随着硬链接的创建，等于它有一个“固定”地址，但它对外沟通的通道有多个，只要通道还存在，该文件就不会消失。</p>
</blockquote>
<h2 id="mklink-D和-J的区别"><a class="header-anchor" href="#mklink-D和-J的区别"></a>mklink /D和/J的区别</h2>
<p><strong>目录符号链接</strong>和<strong>目录联接</strong>的区别在于：</p>
<p>目录联接在创建时会自动引用目标目录的绝对路径，而符号链接允许相对路径的引用。</p>
<p>如分别用 mklink /D dira tdir 和 mklink /J dirb tdir 创建 dira、dirb 对相对目录的 tdir 的符号链接和目录联接，之后将 dira、dirb 移动到其它目录下，则访问 dira 时会提示“位置不可用”，访问 dirb 时仍然正常指向 tdir；</p>
<p>且win10_x64_build10565的cmd下dir命令查看会发现, dira符号链接链接到的是相对路径下的tdir文件(不管是否存在tdir文件), 且文件类型是symlink, dirb目录联接则链接到绝对(全)路径下的tdir文件, 且文件类型是junction(可能是系统自动把相对路径转换为全路径)</p>
<p>而分别用 mklink /D dira c:\demo\tdir 和 mklink /J dirb c:\demo\tdir 创建 c:\demo\tdir 的符号链接和目录联接，再将这两个目录链接移动到其它目录下，则 dira 和 dirb 均可正常指向 c:\demo\tdir；</p>
<p>由此可见当创建目录链接时对目标目录使用绝对路径，D 和 J 两个参数实现的目录链接效果是一样的；</p>
<p>英文原文：</p>
<p>MKLINK /D | /H | /J Link Target</p>
<p>/D Creates a directory symbolic link. Default is a file symbolic link. /H Creates a hard link instead of a symbolic link. /J Creates a Directory Junction.</p>
<p>/D creates a symbolic link, or a soft link.This essentially acts like a shortcut to a folder in prior versions of Windows, except you don’t have to use an actual shortcut.</p>
<p>/H creates a hard link, which points directly to the file.This option can’t be used for folders directly for some reason, you’ll have to use the next option.</p>
<p>/J creates a “Directory Junction”A Directory Junction is actually just a hard link to a directory. This is a feature that existed prior to Vista as well. If you are trying to symlink to a directory using a hard link, then you should use this option.</p>
<p>Understanding Hard vs Soft Links ==== Hard Link</p>
<p>A hard link directly points to the file, and acts to the operating system as if it is the file itself. You’ll want to use this option the majority of the time if you are trying to fake an application’s directory.</p>
<p>Soft Link</p>
<p>A soft link is essentially a shortcut to a file or folder – if you are using Windows explorer, you’ll be redirected to the directory if you double-click on a shortcut, it won’t pretend its part of the filesystem. You can still directly reference or open a file with the symlinked path, and it mostly works.</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>软件</category>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>cmd</tag>
        <tag>mklink</tag>
        <tag>windows</tag>
        <tag>文件链接</tag>
      </tags>
  </entry>
  <entry>
    <title>配置Java环境</title>
    <url>/2020/01/%E9%85%8D%E7%BD%AEJava%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h1>配置Java环境</h1>
<h2 id="安装java和JDK"><a class="header-anchor" href="#安装java和JDK"></a>安装java和JDK</h2>
<p>首先我们需要下载java和java的开发工具包JDK，官方下载地址：<a href="https://www.java.com/zh_CN/">java</a>和<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">jdk</a>。</p>
<blockquote>
<p>这里需要注意的一点的是，虽然我们是尽量下载最新版本，但有时候会出现某些命令不能用的情况，请使用 Java 8/JDK 8。如果你已经下载了新版 JDK，你也可以使用 <code>OpenJDK</code> <a href="https://adoptopenjdk.net/">https://adoptopenjdk.net/</a>来解决这个问题。</p>
</blockquote>
<h2 id="配置环境变量"><a class="header-anchor" href="#配置环境变量"></a>配置环境变量</h2>
<p>右键&quot;此电脑&quot;(Win10)、“我的电脑”(Win7)，选择&quot;属性&quot;，在弹出的窗口中找到&quot;高级系统设置-环境变量&quot;。<br />
这里告诉你们一个快捷的方法，<code>win + R</code>打开“运行”，输入<code>SystemPropertiesAdvanced.exe</code>再按回车，直接到达<em>系统属性</em>。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.jpg?x-oss-process=style/yunying61" alt="系统属性" /><br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/JAVA_HOME.jpg?x-oss-process=style/yunying61" alt="环境变量界面" /></p>
<p>在环境变量中的 <strong>系统变量</strong> 中设置 3 项变量，<code>JAVA_HOME</code>、<code>PATH</code>、<code>CLASSPATH</code>(大小写无所谓),若已存在则点击&quot;编辑&quot;，不存在则点击&quot;新建&quot;。</p>
<blockquote>
<p>注意：如果使用 1.5 以上版本的 JDK，不用设置 CLASSPATH 环境变量，也可以正常编译和运行 Java 程序，但尽量设置吧。</p>
</blockquote>
<p>变量 参数如下：</p>
<ul>
<li>
<p>变量名：JAVA_HOME</p>
<ul>
<li>变量值：<code>C:\Program Files (x86)\Java\jdk1.8.0_91</code><br />
请根据自己的jdk实际路径配置</li>
</ul>
</li>
<li>
<p>变量名：CLASSPATH</p>
<ul>
<li>变量值：<code>.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</code><br />
记得前面有个<code>.</code></li>
</ul>
</li>
<li>
<p>变量名：Path</p>
<ul>
<li>变量值：<code>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</code></li>
</ul>
</li>
</ul>
<blockquote>
<pre>注意：在 Windows10 中，Path 变量里是分条显示的，
我们需要将
%JAVA_HOME%\bin;
%JAVA_HOME%\jre\bin; 
分开添加，否则无法识别。</pre>
<p>如图</p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/Path_JAVA_HOME.jpg?x-oss-process=style/yunying61" alt="path" /></p>
<p>当然，你可以点击右边标签中的 <code>编辑文本</code> ，并将 <code>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</code> 添加到最前面。</p>
</blockquote>
<h2 id="测试是否配置成功"><a class="header-anchor" href="#测试是否配置成功"></a>测试是否配置成功</h2>
<ol>
<li><code>Win + R</code>，键入&quot;cmd&quot;；</li>
<li>键入命令: <code>java -version</code> 、 <code>java</code> 、 <code>javac</code> 几个命令，没有报错并出现了其他命令，说明环境变量配置成功；</li>
</ol>
<h2 id="其他信息"><a class="header-anchor" href="#其他信息"></a>其他信息</h2>
<h3 id="环境变量的参数信息"><a class="header-anchor" href="#环境变量的参数信息"></a>环境变量的参数信息</h3>
<p><strong>配置JAVA_HOME:</strong></p>
<p>​		一是为了方便引用，比如，JDK安装在C:\jdk1.6.0目录里，则设置JAVA_HOME为该目录路径, 那么以后要使用这个路径的时候, 只需输入%JAVA_HOME%即可, 避免每次引用都输入很长的路径串;</p>
<p>​		二则是归一原则, 当JDK路径改变的时候, 仅需更改JAVA_HOME的变量值即可, 否则,就要更改任何用绝对路径引用JDK目录的文档, 要是万一没有改全, 某个程序找不到JDK, 后果是可想而知的----系统崩溃!</p>
<p>​		三则是第三方软件会引用约定好的 JAVA_HOME 变量, 不然, 你不能正常使用该软件。</p>
<p><strong>配置 path 变量</strong><br />
path 变量使得我们能够在系统中的任何地方运行java应用程序，比如 javac、java、javah 等等,这就要找到我们安装 JDK 的目录，</p>
<p>​		假设我们的JDK安装在 C:\jdk1.6.0 目录下,那么在 C:\jdk1.6.0\bin 目录下就是我们常用的 java 应用程序,我们就需要把 C:\jdk1.6.0\bin 这个目录加到 path 环境变量里面。</p>
<p><strong>配置 classpath 变量</strong><br />
classpath 环境变量，是当我们在开发java程序时需要引用别人写好的类时，要让 java 解释器知道到哪里去找这个类。通常，sun 为我们提供了一些额外的丰富的类包，一个是 dt.jar，一个是 tools.jar，这两个 jar 包都位于 C:\jdk1.6.0\lib 目录下，所以通常我们都会把这两个 jar 包加到我们的 classpath 环境变量中，设置 classpath=<code>.;C:\jdk1.6.0\lib\tools.jar;C:\jdk1.6.0\lib\dt.jar;</code>。</p>
<p>注意在完成配置环境变量后测试JDK是否安装成功时键入命令：<code>java -version</code></p>
<h3 id="JDK-和-JRE-的区别"><a class="header-anchor" href="#JDK-和-JRE-的区别"></a>JDK 和 JRE 的区别</h3>
<p>JRE(Java Runtime Enviroment) 是 Java 的运行环境。面向 Java 程序的使用者，而不是开发者。如果你仅下载并安装了JRE，那么你的系统只能运行 Java 程序。JRE 是运行 Java 程序所必须环境的集合，包含JVM标准实现及 Java 核心类库。它包括 Java 虚拟机、Java 平台核心类和支持文件。它不包含开发工具(编译器、调试器等)。</p>
<p>JDK(Java Development Kit) 又称 J2SDK(Java2 Software Development Kit)，是 Java 开发工具包，它提供了 Java 的开发环境(提供了编译器 javac 等工具，用于将 java 文件编译为 class 文件)和运行环境(提 供了 JVM 和 Runtime 辅助包，用于解析 class 文件使其得到运行)。如果你下载并安装了 JDK，那么你不仅可以开发 Java 程序，也同时拥有了运行 Java 程序的平台。JDK 是整个 Java 的核心，包括了Java 运行环境(JRE)，一堆 Java 工具 tools.jar 和 Java 标准类库 (rt.jar)。</p>
<h3 id="更新JDK版本的问题"><a class="header-anchor" href="#更新JDK版本的问题"></a>更新JDK版本的问题</h3>
<p>先安装JDK1.8版本后，想要更改JDk版本，直接去修改系统变量JAVA_HOME的话会发现不起作用：原因是安装JDK1.8版本时，会在C:\ProgramData\Oracle\Java目录中生成一些配置文件，并同时将此目录写到环境变量中的Path中，所以我们应该去把系统变量Path中的C:\ProgramData\Oracle\Java\javapath删除了，这样问题就解决了！</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>Games</category>
        <category>软件</category>
        <category>Minecraft</category>
        <category>环境</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>Minecraft</tag>
        <tag>配置</tag>
        <tag>java</tag>
        <tag>环境</tag>
      </tags>
  </entry>
  <entry>
    <title>Minecraft服务器 问题汇总</title>
    <url>/2020/01/Minecraft%E6%9C%8D%E5%8A%A1%E5%99%A8-%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<p><strong>当你看到这句话的时候，其实就可以跳过这篇文章了。</strong></p>
<p>没有内容的原因：要么是我忘了要补这篇文章，要么是我还没准备写，要么是还没想好内容。</p>
<p>还请阅读其他文章吧！</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>Games</category>
        <category>问题解决</category>
        <category>Minecraft</category>
      </categories>
      <tags>
        <tag>服务器</tag>
        <tag>Minecraft</tag>
        <tag>我的世界</tag>
        <tag>问题解决</tag>
      </tags>
  </entry>
  <entry>
    <title>Minecraft Mod安装教程</title>
    <url>/2020/01/Minecraft-Mod%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1>Mod(模组)</h1>
<h2 id="Mod-API"><a class="header-anchor" href="#Mod-API"></a>Mod API</h2>
<p>我的世界的API均为爱好者产品，Mojang不对任何API提供任何技术支持。<br />
Mojang并未针对Java版开发Mod API，故不存在“官方API”。</p>
<h3 id="什么是API"><a class="header-anchor" href="#什么是API"></a>什么是API</h3>
<p>API是英文Application Programming Interface的缩写，英文即“应用程序编程接口”，作为程序之间的桥梁，起衔接与协调作用。本文内所述的Mod API，如Modloader、Forge等<code>本身其实也是mod</code>，这几个Mod可以与其它功能性Mod配合，使大家与Minecraft协同工作且避免冲突。</p>
<p>举个例子吧：A Mod 改了游戏核心程序里的某个图像文件，B Mod也改了，他们俩都改了，那么覆盖后其中一个Mod会出问题——因此游戏会因为部分Mod找不到文件而黑屏或是崩溃。API的引入解决了这一切。具体工作原理这里不做具体介绍，总之API可以让众多MOD协同工作。</p>
<p>API的还有一个最大作用是作为Mod开发者与Minecraft之间的桥梁。如果我要添加一个新的合成配方，如果没有API的协助，我可能就需要苦苦研究Minecraft的源代码，找到哪部分是关于合成的，还要找到恰当的方法把合成配方弄进去，排成什么样子应该怎么写代码全部要搞得一清二楚，等Mod写出来，人已经累死了。有了API就没这么麻烦了：API可以给你提供一个方便的增添合成配方的途径——就像“翻译官”一样，用一个简单的语句就可以定义一个合成配方。至于合成配方怎么让Minecraft看懂，那就是API的分内工作了。</p>
<p>现在有不少流行的API：Minecraft Forge、Player API等等等等，各有特色。MOD制作者也选择了不同的API。<u>所以你在自己动手安装Mod时必须注意你想要装的Mod的安装说明，预先下载安装好“对应的”Mod API</u>。</p>
<p>Mojang，即Minecraft开发商，没有为Java版开发Mod API的计划。</p>
<h3 id="各API的原发布地址链接"><a class="header-anchor" href="#各API的原发布地址链接"></a>各API的原发布地址链接</h3>
<p>Forge<br />
<a href="http://www.minecraftforge.net/forum/">http://www.minecraftforge.net/forum/</a></p>
<p>Player API(创始人:Divisor)<br />
<a href="http://www.minecraftforum.net/topic/738498-/">http://www.minecraftforum.net/topic/738498-/</a></p>
<p>LiteLoader（创始人Mumfrey）<br />
<a href="http://www.minecraftforum.net/topic/1868280-/">http://www.minecraftforum.net/topic/1868280-/</a><br />
作者注明可自由分发未修改的LiteLoader。</p>
<p>Render Player API(创始人:Divisor)<br />
<a href="http://www.minecraftforum.net/topic/1261354-/">http://www.minecraftforum.net/topic/1261354-/</a></p>
<p>Fabric（创始人asiekierka）<br />
<a href="https://fabricmc.net/">https://fabricmc.net/</a></p>
<h3 id="为什么有些版本没有API，也没有什么Mod？"><a class="header-anchor" href="#为什么有些版本没有API，也没有什么Mod？"></a>为什么有些版本没有API，也没有什么Mod？</h3>
<p>哪个版本有没有Mod API取决于该版本有没有对应的Minecraft Coder Pack。Minecraft Coder Pack为非官方的Minecraft反编译/反混淆代码工具包——尽管实质上Minecraft Coder Pack（下文简称MCP）违反了著作权法，但因为Mod的制作是基于对于源代码的解析的，在官方API难产的前提下，Mojang对MCP的存在是默许的——没有这群反编译的人，哪有接下来这么丰富的Mod。因此，以Minecraft 1.8.X为例，2015年一直到年末之前，MCP只有针对1.8的版本，而1.8.1-1.8.8都没有。所以尽管当时的最新正式版为1.8.8，但几乎所有Mod还停留在1.8。</p>
<h3 id="API安装"><a class="header-anchor" href="#API安装"></a>API安装</h3>
<h4 id="说明"><a class="header-anchor" href="#说明"></a>说明</h4>
<ul>
<li>对于<strong>较早期版本的Minecraft</strong>（一般为Minecraft Java版 1.6之前版本），如果要安装API，如未特别注明，请使用下文“Mod安装方法”一节的方法一。</li>
<li>对于<strong>较新版本的Minecraft</strong>（一般为Minecraft Java版 1.6之后版本），流行API已经基本上只剩下了三大家族：Forge、Player API兄弟，以及LiteLoader。</li>
<li><strong>Forge</strong>本身有成熟的安装器，请使用安装器安装；<br />
注意：Forge安装后第一次使用会联网下载一些必要的lib文件存在.minecraft/lib或.minecraft/libraries下。如果你的网络连接不畅，或是部分中国大陆境内的部分无良Internet服务提供商私自屏蔽了forge官方网站，你只能从其他连接顺畅的玩家处复制这些文件。</li>
<li><strong>LiteLoader</strong>较为特立独行，可以不依赖Forge。请使用其安装器安装，但注意如果你想让Forge和LiteLoader同时生效，就必须先安装Forge之后在LiteLoader安装器界面的Extended from后的下拉菜单中选择Forge安装器建立的版本，一般格式为  版本号-forge-XXXXX</li>
<li><strong>Player API</strong>以及<strong>Render Player API</strong>基本已经成为Forge的附庸。请使用下文《Mod图文安装教程》的“方法二（mods文件夹法）”</li>
</ul>
<h4 id="forge的安装"><a class="header-anchor" href="#forge的安装"></a>forge的安装</h4>
<p>使用Forge自动安装器安装客户端Forge之前，必须满足下列两个条件之一，否则会提示no launcher profile错误：</p>
<ol>
<li>正版启动器以及使用非官方启动器进行正版登入的用户：运行过至少一次正版启动器（无需登录）。</li>
<li>其它启动器用户(盗版用户)：将正版启动器的profile文件<a href="https://img-61.oss-cn-shanghai.aliyuncs.com/file/Minecraft/launcher_profiles.json">下载地址</a>放置在.minecraft文件夹下。</li>
</ol>
<hr />
<ul>
<li>
<p>先讲一下安装器版的操作(就是forge-xxx.exe的文件)<br />
选择install client(译为安装至客户端)，接下来，点一下那那三个点(…)，选择你要加mod的我的世界游戏文件夹中的<code>.minecraft</code>文件夹，点一下OK（确定），就可以等它完成了。</p>
</li>
<li>
<p>接下来讲jar文件版的操作(就是forge-xxx.jar的文件)<br />
将下载好的forge放在一个目录下，新建一个txt文档，将其后缀名改为bat，右键编辑，将下面的代码输进去，保存，关闭</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@echo</span><br><span class="line">java -Xms1024M -Xmx1024M -jar 下载的jar文件名.jar</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<p>双击bat文件，运行，弹处下图<br />
<img data-src="https://img-61.oss-cn-shanghai.aliyuncs.com/img/Minacraft/forge.jpg" alt="forge安装" /><br />
选择install client(译为安装至客户端端)，接下来，点一下那那三个点(…)选择你要加mod的我的世界游戏文件夹中的.minecraft文件夹，点一下OK（确定），就可以等它完成了。<br />
<em>安装过程中会下载一些依赖库，由于某些原因可能会下载失败，多安装几次就行</em></p>
<p>安装成功后，.minecraft/versions文件夹下会出现名为“Forge&lt;版本号&gt;”的文件夹，如果你使用正版启动器的话还会自动配置独立的，名为Forge的Profile；非官方启动器用户请自己配置启动器指向该文件夹（具体方法请询问启动器作者）。无法读取json的非官方启动器请您果断放弃。</p>
</li>
</ul>
<h4 id="LiteLoader的安装"><a class="header-anchor" href="#LiteLoader的安装"></a>LiteLoader的安装</h4>
<p>注意：使用LiteLoader可以不依赖Forge，但目前绝大多数mod都需要forge，一般都是先考虑forge再考虑LiteLoader。</p>
<p>请使用其安装器安装，但注意如果你想让Forge和LiteLoader同时生效，就必须<code>先安装Forge之后</code>在LiteLoader安装器界面的Extended from后的下拉菜单中选择Forge安装器建立的版本，一般格式为  版本号-forge-XXXXX</p>
<h4 id="Player-API与Render-Player-API的安装"><a class="header-anchor" href="#Player-API与Render-Player-API的安装"></a>Player API与Render Player API的安装</h4>
<p>（仅适用于Minecraft 1.6之后）：<br />
将zip文件里的jar文件解压出来（别解压jar本身，仅仅是将jar从zip文件里面弄出来），然后参考下文 Mod的安装 的“方法二（mods文件夹法）”。<code>Player API依赖Forge，Forge未安装时Player API无法生效！</code></p>
<h2 id="Mod的安装"><a class="header-anchor" href="#Mod的安装"></a>Mod的安装</h2>
<p>(适用于Windows):这里只是做个通用的概略说明。一些Mod的安装方法依Mod不同而异，请时刻注意Mod原发布的安装说明！</p>
<ol>
<li>
<p>安装Mod的第一步，是找到Minecraft客户端文件（称为.minecraft文件夹）所在位置，分以下两种情况：</p>
<ul>
<li>
<p>情况1：如果你是较常见的非官方启动器用户，请打开启动器程序所在的文件夹（游戏目录），一般.minecraft文件夹就在里面。</p>
</li>
<li>
<p>情况2：如果你是Minecraft官方启动器用户，请按下Windows徽标键+R，在弹出的“运行”窗口打上&quot;%appdata%“，并按下确定，你就能在打开的窗口里看到”.minecraft&quot;文件夹。</p>
</li>
</ul>
</li>
<li>
<p>Mod安装的第二步：依据你想安装的Mod的特性决定具体方法。</p>
<ol>
<li>
<p><strong>方法一（核心jar覆盖法）</strong><br />
针对早期（早于Minecraft 1.6）版本的API，以及并未对流行API作出优化的Mod的安装教程。请注意：自Minecraft 1.6起，推荐使用本方法安装的Mod已<code>较为罕见</code>：<br />
适用于：Minecraft 1.5.2和以前的版本或是1.6之后有注明安装方式为拖入核心jar的Mod<br />
由于更新换代，加之mod也在随着游戏版本而推出了对应版本的mod，所以这种方法几乎已经销声匿迹了，这里我就不讲详细的方法了，有兴趣可以去看一下MC论坛的有关文章<a href="https://www.mcbbs.net/thread-63718-1-1.html">https://www.mcbbs.net/thread-63718-1-1.html</a></p>
</li>
<li>
<p><strong>方法二（mods文件夹法）</strong><br />
针对可以依附于主流Mod API运行的Mod或较次要的API。本方法目前为大部分Mod的安装方法：<br />
适用于：Minecraft 1.6及以后的版本或是1.5以前有注明安装方法为拖入mods文件夹<br />
1、请确保你已经安装了该Mod所必需的对应API。大多数API的安装方法（除非特别注明）为方法一。<br />
2、进入文件夹&quot;.minecraft&quot;后，打开文件夹&quot;mods&quot;(如果没有则自己新建一个)<br />
3、把下载下来的Mod文档(zip格式或jar格式)放进文件夹&quot;mods&quot;里，无需经过解压</p>
</li>
</ol>
<p>【Minecraft 1.6及之后版本玩家须知】<br />
Modloader在你把Minecraft放在默认目录的前提下（即%appdata%下），mods文件夹可以放在.minecraft\versions&lt;修改过的版本号&gt;\下面，即与该版本的核心jar在同一目录下。若更改Minecraft存放目录的话，mods文件夹依然与从前一样。</p>
<blockquote>
<p>至于可以由Forge加载的Mod，你可以将对应版本的mod放在.minecraft\mods\ (Minecraft版本号)下。例如，1.7.10的mod就放在“.minecraft\mods\1.7.10”文件夹下即可。</p>
</blockquote>
<ol start="3">
<li><strong>方法三（自动安装器）</strong><br />
现在许多Mod或Mod API提供了自动安装器程序，可以看做是软件安装程序，一般一直点“Next”就可以自己安装完毕，免除手动安装的烦恼。这种安装器本文无需说明太多。</li>
</ol>
</li>
</ol>
<h3 id="Mod安装后"><a class="header-anchor" href="#Mod安装后"></a>Mod安装后</h3>
<p>根据我的经验，不是说你想玩什么mod就可以随便往mods文件夹里乱加mod，每个mod之间或多或少都是有一定冲突的，而上面讲的API可以将其之间的冲突最大化的减小，而一些不可避免的冲突有时就会造成游戏崩溃。<br />
所以，在添加一个新mod的时候，最好先把游戏目录备份一下，然后再添加mod，并登入游戏查看是否mod之间会“打架”。<br />
同理，配置一个客户端的时候，也是这样的道理。</p>
]]></content>
      <categories>
        <category>Games</category>
        <category>Minecraft</category>
      </categories>
      <tags>
        <tag>Minecraft</tag>
        <tag>我的世界</tag>
        <tag>Mod</tag>
        <tag>模组</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB数据库 安装与配置</title>
    <url>/2020/02/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="下载准备"><a class="header-anchor" href="#下载准备"></a>下载准备</h2>
<p><a href="https://www.mongodb.com/">MongoDB官方</a>的<a href="https://www.mongodb.com/download-center/community">下载地址</a></p>
<h2 id="安装与配置-Windows版"><a class="header-anchor" href="#安装与配置-Windows版"></a>安装与配置(Windows版)</h2>
<ol>
<li>
<p>运行mongodb-windows-x86_64-4.4.2-signed.msi进行安装（本文默认解压到了 C:\MongoDB\Server\4.2）。</p>
<p>安装比较容易，但有一个关键是，不要安装<code>MongoDB Compass</code>，这是MongoDB的官方图形用户界面，很大，下载速度很慢，而且有其他更好的替代品。</p>
<p>难点在配置文件，启动Mongodb的服务以及将MongoDB设置成Windows服务，加载配置文件在windows的“服务”中找到。</p>
<p>关于网上教程中普遍推荐新建一个data文件夹等等一些操作，我的看法是可有可无，因为到了我这个版本，mongodb会自己创建这些东西。当然，如果为了方便寻找数据库和日志，自己建一个也可以。</p>
<blockquote>
<p>这里我就简单描述一下：<br />
（这里我默认在 C:\MongoDB\ 创建了文件夹）<br />
C:\MongoDB\data\log目录，用来存放日志文件；<br />
C:\MongoDB\Server\4.2\log\mongodb.log 里的 mongodb.log ，用来存放日志信息；<br />
C:\MongoDB\Server\4.2\data\db目录，用来存放数据库数据。</p>
</blockquote>
</li>
<li>
<p>在C:\MongoDB\Server\4.2\data目录下创建<code>db</code>文件夹(因为默认安装中没有这个文件夹，但后面要用)<br />
在C:\MongoDB\Server\4.2目录下创建mongo.config，在文件内部复制如下文本：</p>
 <figure class="highlight plaintext"><figcaption><span>mongo.config</span><a href="/downloads/code/mongo.config">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line">#端口号 默认为27017</span><br><span class="line">port=27017 </span><br><span class="line"></span><br><span class="line">##数据文件  此处=后对应到数据所存放的目录</span><br><span class="line">dbpath=C:\MongoDB\Server\4.2\data\db</span><br><span class="line"></span><br><span class="line">##日志文件  此处=后对应到日志文件所在路径</span><br><span class="line">logpath=C:\MongoDB\Server\4.2\log\mongodb.log</span><br><span class="line"></span><br><span class="line">#启用日志文件，默认启用，每次写入会记录一条操作日志（通过journal可以重新构造出写入的数据）。</span><br><span class="line">journal=true </span><br><span class="line"></span><br><span class="line">##错误日志采用追加模式，配置这个选项后mongodb的日志会追加到现有的日志文件，而不是从新创建一个新文件</span><br><span class="line">logappend=true </span><br><span class="line"></span><br><span class="line">#这个选项可以过滤掉一些无用的日志信息，若需要调试使用请设置为false</span><br><span class="line">quiet=true </span><br><span class="line"></span><br><span class="line">#这样就可外部访问了，例如从win10中去连虚拟机中的MongoDB</span><br><span class="line">bind_ip = 0.0.0.0</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>安装服务<br />
用<code>管理员权限</code>打开cmd命令行，输入如下命令安装mongodb服务：</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sc create MongoDB binPath= &quot;C:\MongoDB\Server\4.2\bin\mongod.exe --service --config=C:\MongoDB\Server\4.2\mongo.config&quot; </span><br></pre></td></tr></table></figure>
<p>如果一直显示<code>[SC] CreateService 失败 1072:指定的服务已标记为删除。</code>，那请先退出<code>服务</code>那个窗口，因为那个占用“频道”了。<br />
再 <code>cd</code> 进入C:\MongoDB\Server\4.2\bin文件夹，使用如下命令：</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd C:\MongoDB\Server\4.2\bin</span><br><span class="line"></span><br><span class="line">mongod --config C:\MongoDB\Server\4.2\mongo.config --install --serviceName &quot;MongoDB&quot;</span><br></pre></td></tr></table></figure>
<p>继续使用如下命令：</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongod --logpath &quot;C:\MongoDB\Server\4.2\log\mongodb.log&quot; --logappend --dbpath &quot;C:\MongoDB\Server\4.2\data\db&quot; --serviceName &quot;MongoDB&quot; --install</span><br></pre></td></tr></table></figure>
</li>
</ol>
<hr />
<p>​	然后在cmd里输入<code>services.msc</code>打开服务管理器，找到MongoDB服务，设置成自动启动，并启动。</p>
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/leanote/mongodb.png?x-oss-process=style/yunying61">
<p>​	如果启动不成功，先删除服务，使用如下命令：</p>
<p>​	<code>sc delete MongoDB</code></p>
<p>​	然后再从第2步开始，重新排查各种配置项及操作</p>
<hr />
<ol start="4">
<li>
<p>测试是否安装成功<br />
进入C:\MongoDB\Server\4.2\bin文件夹下，点击mongod.exe，如果闪一下退出，说明安装正常。<br />
然后在浏览器里访问这个地址<a href="http://localhost:27017/">http://localhost:27017/</a><br />
如果显示了</p>
<blockquote>
<p>It looks like you are trying to access MongoDB over HTTP on the native driver port.</p>
</blockquote>
<p>说明服务和端口正常。</p>
</li>
</ol>
<hr />
<h2 id="配置环境变量（可省略）"><a class="header-anchor" href="#配置环境变量（可省略）"></a>配置环境变量（可省略）</h2>
<ul>
<li>如果不配置环境变量，在使用mongo命令时要先 <code>cd</code> 进入C:\MongoDB\Server\4.2\bin 目录才能使用命令</li>
<li>通过配置环境变量的方式，让mongo命令在所有文件夹内都可以访问<br />
在系统变量中找到path，双击打开后在变量值中的末尾增加输入<code>C:\MongoDB\Server\4.2\bin;</code>即可<br />
(Win10则双击打开后点击“<code>编辑文本</code>”同样在变量值中的末尾增加输入)！</li>
</ul>
<h2 id="远程连接MongoDB数据库（Windows版）"><a class="header-anchor" href="#远程连接MongoDB数据库（Windows版）"></a>远程连接MongoDB数据库（Windows版）</h2>
<p>打开bin目录中的mongod.cfg文件进行编辑，其中bindIp:127.0.0.1改为0.0.0.0 不然别的地方访问不了，<br />
取消security的<code>#</code>注释符，并添加authorization:enabled</p>
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/leanote/mongod-cfg.jpg?x-oss-process=style/yunying61">
<p>然后以管理员身份在bin目录下执行如下命令，使配置生效</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongod --config &quot;C:\MongoDB\Server\4.2\bin\mongod.cfg&quot; --install</span><br></pre></td></tr></table></figure>
<p>然后重启MongoDB服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net stop mongodb		// 先关闭mongodb</span><br><span class="line">net start mongodb		// 后开启mongodb</span><br></pre></td></tr></table></figure>
<p>这里设置了0.0.0.0允许远程访问，所以最好加一层验证，添加一个mongo用户进行管理。<br />
在bin目录打开cmd输入<code>mongo</code>执行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd C:\MongoDB\Server\4.2\bin</span><br><span class="line"></span><br><span class="line">mongo</span><br><span class="line"></span><br><span class="line">use admin</span><br></pre></td></tr></table></figure>
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  db.createUser(&#123;</span><br><span class="line">  &quot;user&quot;:&quot;admin&quot;,&quot;pwd&quot;:&quot;password&quot;,</span><br><span class="line">    &quot;roles&quot;:[</span><br><span class="line">      &#123;role:&quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot;&#125;, </span><br><span class="line">&#123;role:&quot;readWriteAnyDatabase&quot;, db: &quot;admin&quot;&#125; </span><br><span class="line">  ]&#125;);</span><br></pre></td></tr></table></figure>
</blockquote>
<p>这里就添加了一个admin的用户，密码为password</p>
<div class="note warning"><p>另外远程访问的话，记得开启安全组和防火墙端口，可能会因为这个导致全盘皆输</p>
</div>
<h2 id="关于-MongoDB用户-的命令"><a class="header-anchor" href="#关于-MongoDB用户-的命令"></a>关于 MongoDB用户 的命令</h2>
<figure class="highlight txt"><figcaption><span>MongoDB用户命令.txt</span><a href="/downloads/code/MongoDB用户命令.txt">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line">show dbs        查看数据库</span><br><span class="line">use dbname      进入数据库</span><br><span class="line">show users      查看当前数据库用户权限</span><br><span class="line">创建用户</span><br><span class="line">db.createUser({user:&quot;usertest&quot;,pwd:&quot;passtest&quot;,roles:[  {role:&quot;clusterAdmin&quot;, db:&quot;admin&quot; }, {role:&quot;readAnyDatabase&quot;,db:&quot;admin&quot; }, {role:&quot;readWrite&quot;,db:&quot;testDB&quot; } ]})</span><br><span class="line">权限详解</span><br><span class="line">内建角色：</span><br><span class="line">数据库用户角色：    read、readWrite；</span><br><span class="line">数据库管理角色：    dbAdmin、dbOwner、userAdmin；</span><br><span class="line">集群管理角色：      clusterAdmin、clusterManager、clusterMonitor、hostManager；</span><br><span class="line">备份恢复角色：      backup、restore；</span><br><span class="line">所有数据库角色：    readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase</span><br><span class="line">超级用户角色：      root；  这里还有几个角色间接或直接提供了系统超级用户的访问（dbOwner 、userAdmin、userAdminAnyDatabase）</span><br><span class="line">内部角色：          __system；</span><br><span class="line">------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">角色说明：</span><br><span class="line">Read：                      允许用户读取指定数据库</span><br><span class="line">readWrite：                 允许用户读写指定数据库</span><br><span class="line">dbAdmin：                   允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile</span><br><span class="line">userAdmin：                 允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户</span><br><span class="line">dbOwner：                   允许在当前DB中执行任意操作</span><br><span class="line">readAnyDatabase：           赋予用户所有数据库的读权限，只在admin数据库中可用</span><br><span class="line">readWriteAnyDatabase：      赋予用户所有数据库的读写权限，只在admin数据库中可用</span><br><span class="line">userAdminAnyDatabase：      赋予用户所有数据库管理User的权限，只在admin数据库中可用</span><br><span class="line">dbAdminAnyDatabase：        赋予管理所有数据库的权限，只在admin数据库中可用</span><br><span class="line">root：                      超级账号，超级权限，只在admin数据库中可用。</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">集群管理角色：</span><br><span class="line">clusterAdmin：                 赋予管理集群的最高权限，只在admin数据库中可用</span><br><span class="line">clusterManager：               赋予管理和监控集群的权限</span><br><span class="line">clusterMonitor：               赋予监控集群的权限，对监控工具具有readonly的权限</span><br><span class="line">hostManager：                  赋予管理Server</span><br><span class="line"></span><br><span class="line">修改密码</span><br><span class="line">方法1：db.changeUserPassword(&quot;usertest&quot;,&quot;changepass&quot;);</span><br><span class="line">方法2：db.updateUser(&quot;usertest&quot;,{pwd:&quot;changepass1&quot;})；</span><br><span class="line"></span><br><span class="line">修改权限</span><br><span class="line">db.updateUser(&quot;usertest&quot;,{roles:[ {role:&quot;read&quot;,db:&quot;testDB&quot;} ]})</span><br><span class="line"></span><br><span class="line">注：updateuser它是完全替换之前的值，如果要新增或添加roles而不是代替它 </span><br><span class="line">则使用方法： db.grantRolesToUser() 和 db.revokeRolesFromUser(）</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">修改权限</span><br><span class="line">db.grantRolesToUser(&quot;usertest&quot;, [{role:&quot;readWrite&quot;, db:&quot;testDB&quot;},{role:&quot;read&quot;, db:&quot;testDB&quot;}])</span><br><span class="line">删除权限</span><br><span class="line">db.revokeRolesFromUser(&quot;usertest&quot;,[{role:&quot;read&quot;, db:&quot;testDB&quot;}])</span><br></pre></td></tr></table></figure>
<h2 id="MongoDB命令"><a class="header-anchor" href="#MongoDB命令"></a>MongoDB命令</h2>
<figure class="highlight txt"><figcaption><span>mongodb.txt</span><a href="/downloads/code/mongodb.txt">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line">这是mongodb的一些命令： </span><br><span class="line"></span><br><span class="line">mongo   </span><br><span class="line">	运行mongo</span><br><span class="line"></span><br><span class="line">以下命令要运行mongo以后才能用</span><br><span class="line"></span><br><span class="line">db	</span><br><span class="line">	显示当前的数据库名称</span><br><span class="line"></span><br><span class="line">show dbs	</span><br><span class="line">	显示当前服务器下数据库（非空的数据库）列表</span><br><span class="line"></span><br><span class="line">use test	</span><br><span class="line">	如果test数据库不存在，则创建test数据库</span><br><span class="line">	如果test已存在，则切换到test数据库</span><br><span class="line"></span><br><span class="line">show collections	</span><br><span class="line">	显示当前数据库下所包含的集合（表）列表</span><br><span class="line"></span><br><span class="line">db.users.insert({name:&#x27;zhangsha&#x27;})	</span><br><span class="line">	向users集合中插入数据</span><br><span class="line">	如果users集合存在，则直接插入数据，如果不存在，则创建users集合再插入数据</span><br><span class="line"></span><br><span class="line">db.createCollection(&#x27;products&#x27;)</span><br><span class="line">	创建一个空集合products</span><br><span class="line"></span><br><span class="line">db.products.insert([{name:&#x27;lishi&#x27;},{name:&#x27;wangwu&#x27;}])		</span><br><span class="line">	一次插入多个数据</span><br><span class="line"></span><br><span class="line">db.products.find()</span><br><span class="line">	查询products集合中所有的数据</span><br><span class="line"></span><br><span class="line">db.products.find({name:&#x27;苹果手机&#x27;})</span><br><span class="line">	查询stu集合中name=&#x27;苹果手机&#x27;的数据</span><br><span class="line"></span><br><span class="line">db.products.find({name:{$eq:&#x27;苹果手机&#x27;}})</span><br><span class="line">	同上，$eq=&gt;等号，建议使用上面的方式，易记，易输入</span><br><span class="line">	eq = equal</span><br><span class="line"></span><br><span class="line">db.products.find({price:{$gt:18}})</span><br><span class="line">	查询stu集合中age&gt;18的数据  </span><br><span class="line"> 	把$gt换成如下的符号试试：</span><br><span class="line">    $gt=&gt;大于   great</span><br><span class="line">    $gte=&gt;大于等于 great equal</span><br><span class="line">    $lt=&gt;小于   less than</span><br><span class="line">    $lte=&gt;小于等于 less than equal</span><br><span class="line">    $ne=&gt;不等于  not equal</span><br><span class="line">    $in=&gt;在范围内</span><br><span class="line">    $nin=&gt;不在范围内</span><br><span class="line">	以上几个符号格式总结为：{ field: {符号: value}}</span><br><span class="line"></span><br><span class="line">db.products.find({name:/^华为/})</span><br><span class="line">	查找stu集合中name域中以“华为”字符的开头的数据</span><br><span class="line"></span><br><span class="line">db.products.find({name:{$in:[&#x27;手机1&#x27;,&#x27;手机2&#x27;]}})</span><br><span class="line">	查询stu集合中name=&#x27;手机1&#x27;和name=&#x27;手机2&#x27;的数据</span><br><span class="line">$in=&gt;在范围内</span><br><span class="line">$nin=&gt;不在范围内</span><br><span class="line">	以上两个符号格式为：{ field:{符号:[value1,value2,....]}}</span><br><span class="line"></span><br><span class="line">db.products.find({name:&quot;华为手机&quot;,price:800})</span><br><span class="line">	查找name=&quot;华为手机&quot;并且price:800的数据</span><br><span class="line"></span><br><span class="line">db.products.find({$or:[{name:&#x27;华为手机&#x27;},{price:{$lt:1000}}]})</span><br><span class="line">	查询products集合中name=&#x27;华为手机&#x27; 或者 price&lt;1000的数据</span><br><span class="line">    $or=&gt;或者  注意$or:[{},{},....]</span><br><span class="line">    $and=&gt;并且  格式同$or, 例：{$and:[{},{},....]}</span><br><span class="line">    $nor=&gt;not or 与$or相反， 格式同$or</span><br><span class="line"></span><br><span class="line">db.products.find({price:{$not:{$gt:100}}})</span><br><span class="line">	查询products集合中price&lt;=100的数据，不存在price属性的数据也会查询出来</span><br><span class="line">    $not=&gt;取反 </span><br><span class="line"></span><br><span class="line">db.products.find({price:{$exists: true}})</span><br><span class="line">	查询products集合中包含域名称为price的数据</span><br><span class="line"></span><br><span class="line">db.products.find({name:{$type:2}})</span><br><span class="line">	查询products集合中name属性为字符串类型的数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db.products.find({</span><br><span class="line">	$where: function(){</span><br><span class="line">		return this.name == &#x27;华为手机&#x27;</span><br><span class="line">	}</span><br><span class="line">})</span><br><span class="line">	查询products集合中name=&#x27;华为手机’的数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db.products.find({</span><br><span class="line">	$where: function(){</span><br><span class="line"> 		return  this.name.indexOf(&#x27;华为手机&#x27;) &gt; -1;</span><br><span class="line">	}</span><br><span class="line">})</span><br><span class="line">	查询products集合中name域中包含“华为手机”字符的数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db.products.update({name:&#x27;华为手机&#x27;},{$set:{price:2000}},{</span><br><span class="line">	upsert: true,</span><br><span class="line">	multi:false</span><br><span class="line">})</span><br><span class="line">	把products集合中name=&#x27;华为手机&#x27;的那条数据，把price属性设置成2000，其它属性保留</span><br><span class="line">    $set是指更改的属性列表，不在列表中其他属性会被保留，如果不加此符号，其它属性会被丢弃（_id属性比较特殊，不会丢失）</span><br><span class="line">    upsert:true如果没有符号条件的更新时，则插入一条，为false时，则不会插入, 默认是false</span><br><span class="line">    multi:false一次只能更新一条数据，为true时，可更新多条，默认是false</span><br><span class="line"></span><br><span class="line">db.students.remove({})</span><br><span class="line">	清空集合students</span><br><span class="line"></span><br><span class="line">db.products.remove({name:&#x27;abc&#x27;})</span><br><span class="line">	删除products集合中name=&#x27;abc&#x27;的数据，注意，即使把集合products中的所有数据都删除了</span><br><span class="line">	products集合仍然存在， remove()是用来删除数据的，而drop()不仅会删除数据，还会把集合的结构给删除</span><br><span class="line"></span><br><span class="line">db.products.drop()</span><br><span class="line">	把stu集合彻底从当前数据中删除，集合stu不再存在，注意与remove()的区别</span><br><span class="line"></span><br><span class="line">db.dropDatabase()</span><br><span class="line">	删除当前数据库</span><br><span class="line"></span><br><span class="line">db.users.distinct(&#x27;name&#x27;)</span><br><span class="line">	查询users集合中不重复的name属性，返回的是数组</span><br><span class="line"></span><br><span class="line">db.stu.count({name:&#x27;zhangshan&#x27;})</span><br><span class="line">	查询stu集合中name=&#x27;zhangshan&#x27;的数据数量</span><br><span class="line"></span><br><span class="line">db.stu.find().limit(5)</span><br><span class="line">	查询stu集合中前5条数据</span><br><span class="line"></span><br><span class="line">db.stu.find().skip(5)</span><br><span class="line">	查询stu集合中跳过前5条后的数据</span><br><span class="line"></span><br><span class="line">db.stu.find().sort({name:1})</span><br><span class="line">	查询stu集合中的全部数据，并按name属性正序排列  注：1：正序 -1: 倒序</span><br><span class="line"></span><br><span class="line">由于mongodb的api接口方法很多，除以上命令外，其他的命令请多看官方文档</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>IT</category>
        <category>软件</category>
        <category>数据库</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>配置</tag>
        <tag>MongoDB</tag>
        <tag>数据库</tag>
        <tag>安装</tag>
      </tags>
  </entry>
  <entry>
    <title>leanote蚂蚁笔记-私人云笔记服务器搭建</title>
    <url>/2020/02/leanote%E8%9A%82%E8%9A%81%E7%AC%94%E8%AE%B0-%E7%A7%81%E4%BA%BA%E4%BA%91%E7%AC%94%E8%AE%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1>leanote蚂蚁笔记</h1>
<p>目前在知识管理/笔记类软件领域有强大的印象笔记 (Evernote)、微软（OneNote）、国产的（为知笔记）、（有道云笔记）以及（讯飞语记）等都是非常优秀的产品，但总有一部分人会觉得“把自己的笔记放在别人兜里，心里不踏实”。<br />
我一开始用的也是讯飞语记，刚开始还不懂，只是被它的语音识别和云同步所吸引。后来懂的越来越多，愈发觉得自己的一些笔记还是不要放别人的数据库里。碰巧，在阿里云的一篇学习文章里，我发现了leanote，于是乎，我也就进入了私人云笔记时代！</p>
<span id="more"></span>
<p>个人对leanote的理解：<br />
简约、免费、开源、支持 Markdown 语法，支持程序代码高亮、笔记历史记录、支持笔记分享协作、将笔记发布成博客、云同步、多终端兼容(Windows、Mac、iOS、Linux、Android)，最关键的：搭建私人云笔记。</p>
<h2 id="介绍"><a class="header-anchor" href="#介绍"></a>介绍</h2>
<p>Leanote, 不只是笔记!</p>
<p>Leanote 蚂蚁笔记是一款国产的在线网页版云笔记软件，集知识管理、笔记、分享、博客功能于一身，界面简约但功能不简单！</p>
<p>该项目采用 Golang+MongoDB 开发，现已完全开源并能免费使用。普通用户可以直接使用 Leanote 提供的公共服务，也可以自行搭建属于自己或公司局域网内的私有云笔记平台。</p>
<p><strong>特性</strong></p>
<ul>
<li>高效笔记：Leanote 有易操作的界面, 包含富文本编辑器和Markdown编辑器，让您的笔记记录更轻松和高效。对高阶用户，还提供Vim和Emacs编辑模式，助推你的写作速度更上层楼。</li>
<li>知识管理: Leanote 灵活而强大的“笔记本-笔记-标签”系统，让它成为你个人知识管理的利器。</li>
<li>分享: 你可以通过Leanote同好友分享知识、想法和经历, 邀请好友加入你的笔记簿，通过云端交流信息。</li>
<li>协作: Leanote协助你与同事之间相互协作，激荡新思路，随时随地头脑风暴。</li>
<li>博客: Leanote也可以作为你的个人博客, 把你的知识传播的更远!</li>
</ul>
<p><strong>其它特性</strong></p>
<ul>
<li>支持Markdown编辑</li>
<li>写作模式</li>
<li>Vim 及 Emacs 编辑模式</li>
<li>支持PDF导出</li>
<li>支持批量操作</li>
<li>博客自定义主题, 实现高度定制化</li>
</ul>
<h2 id="leanote"><a class="header-anchor" href="#leanote"></a>leanote</h2>
<h2 id="下载准备-2"><a class="header-anchor" href="#下载准备-2"></a>下载准备</h2>
<p>搭建leanote需要，<code>leanote</code>本体和<code>MongoDB</code>数据库支持。</p>
<p>首先，是<a href="https://leanote.com/">leanote官方</a>的<a href="http://leanote.org/#download">下载地址</a>，<a href="https://www.mongodb.com/">MongoDB官方</a>的<a href="https://www.mongodb.com/download-center/community">下载地址</a>，用这个可以马上使用到最新的产品。</p>
<p>然后，如果大家不想那么麻烦的去官方那里下载，或者官方链接已经丢失，可以私聊我获取文件。</p>
<h2 id="写在前面"><a class="header-anchor" href="#写在前面"></a>写在前面</h2>
<p>这里，我将介绍Windows版和Linux版的搭建过程。</p>
<a class="btn" href="#Windows版安装">Windows版</a>
<a class="btn" href="#Linux版安装">Linux版</a>
<h2 id="Windows版安装"><a class="header-anchor" href="#Windows版安装"></a>Windows版安装</h2>
<p>1、将下载的文件里面的leanote-windows-amd64-v2.6.1.bin.tar.gz文件解压到C盘（本文默认解压到了 <strong>C:\leanote</strong>）。<br />
2、运行mongodb-windows-x86_64-4.4.2-signed.msi进行安装（本文默认解压到了 <strong>C:\MongoDB\Server\4.2</strong>）。<br />
接下来的MongoDB的配置<strong>极其麻烦</strong>，这里我放到另一篇文章里，<a href="/2020/02/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/" title="MongoDB数据库 安装与配置">MongoDB数据库 安装与配置</a></p>
<hr />
<h3 id="测试mongodb安装"><a class="header-anchor" href="#测试mongodb安装"></a>测试mongodb安装</h3>
<p>打开cmd，输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd C:\MongoDB\Server\4.2\bin</span><br><span class="line">mongo</span><br></pre></td></tr></table></figure>
<p>行首出现&gt; 表示进入mongo 的交互程序。此时输入：</p>
<p><code>show dbs</code></p>
<blockquote>
<p>出现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;show dbs</span><br><span class="line">&gt;admin    0.000GB</span><br><span class="line">&gt;config   0.000GB</span><br><span class="line">&gt;local    0.000GB</span><br></pre></td></tr></table></figure>
<p>即安装成功</p>
</blockquote>
<p>这个窗口可以先不要关</p>
<h3 id="导入初始数据"><a class="header-anchor" href="#导入初始数据"></a>导入初始数据</h3>
<p>打开新cmd， 运行以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd C:\MongoDB\Server\4.2\bin</span><br><span class="line">mongorestore -h localhost -d leanote --dir C:\leanote\mongodb_backup\leanote_install_data</span><br></pre></td></tr></table></figure>
<p>出现  “499 document(s) restored successfully. 0 document(s) failed to restore.”  表示结束，这样就完成了数据的导入</p>
<p>在刚才没关闭的窗口里，你再次使用show dbs命令时就会显示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show dbs</span><br><span class="line">admin    0.000GB</span><br><span class="line">config   0.000GB</span><br><span class="line">leanote  0.002GB</span><br><span class="line">local    0.000GB</span><br></pre></td></tr></table></figure>
<div class="note info"><p>有时候leanote的数据库名字不是<code>leanote</code>，而是 <code>ir</code>那后面的配置文件里的数据库名字也要跟着改变</p>
</div>
<h3 id="添加leanote数据库用户"><a class="header-anchor" href="#添加leanote数据库用户"></a>添加leanote数据库用户</h3>
<p>像MySQL一样MongoDB也有root用户, mongodb初始是没有用户的, 这样很不安全, 所以要为leanote数据库新建一个用户来连接leanote数据库(注意, 并不是为leanote的表users里新建用户, 而是新建一个连接leanote数据库的用户, 类似数据库 表管理员).</p>
<p>打开cmd，进入bin目录，然后输入mongo进入数据库，再输入下面的命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd C:\MongoDB\Server\4.2\bin</span><br><span class="line">mongo						// 进入mongodb的交互程序</span><br><span class="line">use leanote;				// 切换到leanote数据库下，如果前面数据库名字是ir，这里也是ir</span><br></pre></td></tr></table></figure>
<p>添加一个用户root, 密码是abc123</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.createUser(&#123;</span><br><span class="line">user: &#x27;root&#x27;,</span><br><span class="line">pwd: &#x27;abc123&#x27;,</span><br><span class="line">roles: [&#123;role: &#x27;dbOwner&#x27;, db: &#x27;leanote&#x27;&#125;]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>测试下是否正确</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.auth(&quot;root&quot;, &quot;abc123&quot;);</span><br></pre></td></tr></table></figure>
<p>返回1表示正确</p>
<p>用户添加好后重启下<strong>mongodb服务</strong>。 （如果不会就去网上搜：<code>重启Windows服务</code>）</p>
<hr />
<p><strong>还要修改配置文件</strong>: 修改 <u>C:\leanote\conf\app.conf</u> 文件</p>
<p>找到以下参数，并修改为你之前配置的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.host=127.0.0.1</span><br><span class="line">db.port=27017</span><br><span class="line">db.dbname=leanote 			# required</span><br><span class="line">db.username=`root` 			# if not exists, please leave blank</span><br><span class="line">db.password=`abc123` 		# if not exists, please leave blank</span><br></pre></td></tr></table></figure>
<div class="note info"><p>如果前面数据库名字是ir，这里的<code>db.dbname= </code>   也是  ir</p>
</div>
<p>除此之外，请务必修改<code>app.secret</code>一项, 在若干个随机位置处，将字符修改成一个其他的值, 否则会有安全隐患！其它的配置可暂时保持不变，或根据需要进行修改。</p>
<h3 id="运行leanote"><a class="header-anchor" href="#运行leanote"></a>运行leanote</h3>
<p>到了这一步，基本上可以宣告成功了<br />
以 <strong>管理员权限</strong> 打开cmd，输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd C:\leanote\bin</span><br><span class="line">run.bat</span><br></pre></td></tr></table></figure>
<p>最后出现以下信息证明运行成功:</p>
<blockquote>
<p>Listening on :9000…</p>
</blockquote>
<p>恭喜你, 打开浏览器输入: <a href="http://localhost:9000">http://localhost:9000</a> 体验leanote吧!</p>
<p>选择登录，默认管理员账号为admin，密码为abc123。登陆成功后选择右上角的后台管理，即可登录后台管理。</p>
<details class="note primary"><summary><p>提示</p>
</summary>
<p>做到这里，leanote已经正常运行，但在电脑重启后，还需要再依次运行MongoDB server、leanote才能够正常使用，所以把 C:\leanote\bin\ 路径下的run.bat文件，创建一个快捷方式放到系统的启动里面即可，也可以放在桌面开机的时候手动启动。</p>
<p>如果你建在服务器上，那请自行将MongoDB服务设为自启，把Leanote启动文件配置为开机自动运行。</p>

</details>
<h3 id="绑定域名"><a class="header-anchor" href="#绑定域名"></a>绑定域名</h3>
<p>修改 <u>C:\leanote\conf\app.conf</u> 文件里的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http.port=80</span><br><span class="line">site.url=http://localhost:9000</span><br></pre></td></tr></table></figure>
<p>输入<a href="http://localhost:9000">http://localhost:9000</a>，假设ip地址是111.111.111.111,把localhost换成你的IP地址111.111.111.111即可，如果有域名，也可以把localhost换成你的域名</p>
<h2 id="Linux版安装"><a class="header-anchor" href="#Linux版安装"></a>Linux版安装</h2>
<h3 id="下载"><a class="header-anchor" href="#下载"></a>下载</h3>
<p>Leanote：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"></span><br><span class="line">wget https://sourceforge.net/projects/leanote-bin/files/2.6.1/leanote-linux-amd64-v2.6.1.bin.tar.gz/download</span><br></pre></td></tr></table></figure>
<p>MongoDB：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"></span><br><span class="line">wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel80-5.0.6.tgz</span><br></pre></td></tr></table></figure>
<h3 id="解压Leanote压缩包"><a class="header-anchor" href="#解压Leanote压缩包"></a>解压Leanote压缩包</h3>
<p>假设已将文件下载到 <code>/home/</code> 目录下，打开<code>终端</code>，通过使用下面的命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"></span><br><span class="line">tar -xzvf leanote-linux-amd64-v2.6.1.bin.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /home/software</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> /home/leanote /home/software/leanote</span><br></pre></td></tr></table></figure>
<p>解压文件，从而在 <code>/home/software</code> 目录下生成 <code>leanote</code>目录</p>
<h3 id="解压MongoDB压缩包"><a class="header-anchor" href="#解压MongoDB压缩包"></a>解压MongoDB压缩包</h3>
<p>假设已将文件下载到 <code>/home/</code> 目录下，打开<code>终端</code>，通过使用下面的命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"></span><br><span class="line">tar -xzvf mongodb-linux-x86_64-rhel80-5.0.6.tgz</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> /home/mongodb-linux-x86_64-rhel80-5.0.6.tgz /home/software/mongodb-5.0.6</span><br></pre></td></tr></table></figure>
<p>解压文件，从而在 <code>/home/software</code> 目录下生成 <code>mongodb-5.0.6</code>目录</p>
<hr />
<h3 id="配置MongoDB"><a class="header-anchor" href="#配置MongoDB"></a>配置MongoDB</h3>
<p>为了快速使用<code>mongodb</code>命令, 可以配置环境变量。</p>
<p>编辑 <code>~/.profile</code>或<code>/etc/profile</code> 文件， 将<code>mongodb/bin</code>路径加入即可，打开<code>终端</code>，输入命令:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure>
<p>在<code>/etc/profile</code>中，按<code>i</code>进入编辑模式，在最下面添加以下行，注意路径：</p>
<blockquote>
<p>export PATH=$PATH:/home/software/mongodb-5.0.6/bin</p>
</blockquote>
<p>按<code>ESC</code>退出编辑模式，再输入<code>:wq</code>保存修改后，在终端运行以下命令使环境变量生效:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>
<div class="note info"><p>注意：建议重启一下，不然，每新打开一个终端，都要输入<code>source /etc/profile</code>才能使用mongo命令</p>
</div>
<p>然后，是建立数据库的存放位置和日志文件的存放位置，在终端运行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//用于存放数据库</span><br><span class="line"><span class="built_in">mkdir</span> -p /home/data/mongo-db</span><br><span class="line"></span><br><span class="line">//用于存放日志文件</span><br><span class="line"><span class="built_in">mkdir</span> -p /home/data/mongo-log</span><br></pre></td></tr></table></figure>
<p>接着，在<code>/home/software/mongodb-5.0.6</code>目录下新建一个名为 <code>mongodb.conf</code> 的配置文件，写入如下配置内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim mongodb.conf</span><br></pre></td></tr></table></figure>
<p>按<code>i</code>进入编辑模式，按<code>ESC</code>退出编辑模式，再输入<code>:wq</code>保存修改。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#端口</span><br><span class="line">port=27017</span><br><span class="line"></span><br><span class="line">#数据库存文件存放目录 </span><br><span class="line">dbpath= /home/data/mongo-db</span><br><span class="line"></span><br><span class="line">#日志文件</span><br><span class="line">logpath= /home/data/mongo-log/mongodb.log</span><br><span class="line"></span><br><span class="line">#使用追加的方式写日志</span><br><span class="line">logappend=true</span><br><span class="line"></span><br><span class="line">#不以守护程序的方式启用，即不在后台运行</span><br><span class="line">fork=false</span><br><span class="line"></span><br><span class="line">#最大同时连接数</span><br><span class="line">maxConns=100</span><br><span class="line"></span><br><span class="line">#不启用验证</span><br><span class="line">noauth=true</span><br><span class="line"></span><br><span class="line">#每次写入会记录一条操作日志（通过journal可以重新构造出写入的数据）。</span><br><span class="line">#即使宕机，启动时wiredtiger会先将数据恢复到最近一次的checkpoint点，然后重放后续的journal日志来恢复。</span><br><span class="line">journal=true</span><br><span class="line"></span><br><span class="line">#存储引擎有mmapv1、wiretiger、mongorocks</span><br><span class="line">storageEngine=wiredTiger</span><br><span class="line"></span><br><span class="line">bind_ip = 0.0.0.0  #这样就可外部访问了，例如从win10中去连虚拟机中的MongoDB</span><br></pre></td></tr></table></figure>
<p>用以下命令启动<code>mongodb</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongod --config /home/software/mongodb-5.0.6/mongodb.conf</span><br></pre></td></tr></table></figure>
<p>这时<code>mongod</code>已经启动了（这代表mongodb已经开始运行，所以请不要关闭这个窗口）</p>
<h3 id="测试mongodb安装-2"><a class="header-anchor" href="#测试mongodb安装-2"></a>测试mongodb安装</h3>
<p><strong>重新打开</strong>一个终端, 键入<code>mongo</code>进入交互程序：</p>
<p><code>mongo</code></p>
<p>行首出现 &gt; 表示进入mongo的交互程序，此时输入：</p>
<p><code>show dbs</code></p>
<blockquote>
<p>出现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;admin    0.000GB</span><br><span class="line">&gt;config   0.000GB</span><br><span class="line">&gt;local    0.000GB</span><br></pre></td></tr></table></figure>
<p>即安装成功</p>
</blockquote>
<p>这个窗口可以先不要关</p>
<h3 id="导入Leanote初始数据"><a class="header-anchor" href="#导入Leanote初始数据"></a>导入Leanote初始数据</h3>
<p><strong>MongoDB</strong>安装到此为止，下面为<strong>MongoDB</strong>导入<strong>leanote</strong>初始数据。</p>
<p><strong>leanote</strong>初始数据存放在<code>/home/software/leanote/mongodb_backup/leanote_install_data</code>中。</p>
<p>再次<strong>重新打开</strong>一个终端(此时应该要有3个终端)， 输入以下命令导入数据。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongorestore -h localhost -d leanote --dir /home/software/leanote/mongodb_backup/leanote_install_data/</span><br></pre></td></tr></table></figure>
<p>出现  “499 document(s) restored successfully. 0 document(s) failed to restore.”  表示结束，这样就完成了数据的导入</p>
<p>当你再次使用show dbs命令时就会显示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show dbs</span><br><span class="line"></span><br><span class="line">admin    0.000GB</span><br><span class="line">config   0.000GB</span><br><span class="line">leanote  0.001GB</span><br><span class="line">local    0.000GB</span><br></pre></td></tr></table></figure>
<div class="note info"><p>有时候leanote的数据库名字不是<code>leanote</code>，而是 <code>ir</code>那后面的配置文件里的数据库名字也要跟着改变</p>
</div>
<p>初始数据的<code>users</code>表中已有2个用户:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user1 username: admin, password: abc123 (管理员, 只有该用户才有权管理后台, 请及时修改密码)</span><br><span class="line">user2 username: demo@leanote.com, password: demo@leanote.com (仅供体验使用)</span><br></pre></td></tr></table></figure>
<h3 id="添加leanote数据库用户-2"><a class="header-anchor" href="#添加leanote数据库用户-2"></a>添加leanote数据库用户</h3>
<p>像MySQL一样MongoDB也有root用户, mongodb初始是没有用户的, 这样很不安全, 所以要为leanote数据库新建一个用户来连接leanote数据库(注意, 并不是为leanote的表users里新建用户, 而是新建一个连接leanote数据库的用户, 类似数据库 表管理员).</p>
<p>打开终端，进入bin目录，然后输入mongo进入数据库，再输入下面的命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /home/software/mongodb-5.0.6/bin</span><br><span class="line">mongo						// 进入mongodb的交互程序</span><br><span class="line">use leanote;				// 切换到leanote数据库下，如果前面数据库名字是ir，这里也是ir</span><br></pre></td></tr></table></figure>
<p>添加一个用户root, 密码是abc123</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.createUser(&#123;</span><br><span class="line">user: &#x27;root&#x27;,</span><br><span class="line">pwd: &#x27;abc123&#x27;,</span><br><span class="line">roles: [&#123;role: &#x27;dbOwner&#x27;, db: &#x27;leanote&#x27;&#125;]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>测试下是否正确</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.auth(&quot;root&quot;, &quot;abc123&quot;);</span><br></pre></td></tr></table></figure>
<p>返回1表示正确</p>
<hr />
<p><strong>还要修改配置文件</strong>: 修改 /home/software/leanote/conf/<code>app.conf</code>文件</p>
<p>找到以下参数，并修改为你之前配置的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.host=127.0.0.1</span><br><span class="line">db.port=27017</span><br><span class="line">db.dbname=leanote 			# required</span><br><span class="line">db.username=`root` 			# if not exists, please leave blank</span><br><span class="line">db.password=`abc123` 		# if not exists, please leave blank</span><br></pre></td></tr></table></figure>
<div class="note info"><p>如果前面数据库名字是ir，这里的<code>db.dbname= </code>   也是  ir</p>
</div>
<p>除此之外，请务必修改<code>app.secret</code>一项, 在若干个随机位置处，将字符修改成一个其他的值, 否则会有安全隐患！其它的配置可暂时保持不变，或根据需要进行修改。</p>
<h3 id="运行leanote-2"><a class="header-anchor" href="#运行leanote-2"></a>运行leanote</h3>
<p>到了这一步，基本上可以宣告成功了。</p>
<p>新开一个窗口, 运行：（<strong>注意:</strong> 在此之前请确保<code>mongodb</code>已在运行！）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash /home/software/leanote/bin/run.sh</span><br></pre></td></tr></table></figure>
<p>最后出现以下信息证明运行成功:</p>
<blockquote>
<p>Listening on :9000…</p>
</blockquote>
<p>恭喜你完成安装, 打开浏览器输入: <a href="http://localhost:9000">http://localhost:9000</a> 体验leanote吧!<br />
选择登录，默认管理员账号为admin，密码为abc123。登陆成功后选择右上角的后台管理，即可登录后台管理。</p>
<details class="note primary"><summary><p>提示</p>
</summary>
<p>做到这里，leanote已经正常运行，但在电脑重启后，还需要再依次运行MongoDB、leanote才能够启动，所以可以把 Mongodb 创建一个服务项，并设为开机自启；把 leanote 设置为启动项。</p>

</details>
<h3 id="绑定域名-2"><a class="header-anchor" href="#绑定域名-2"></a>绑定域名</h3>
<p>修改 /home/software/leanote/conf/app.conf 文件里的</p>
<blockquote>
<p>http.port=80<br />
site.url=http://localhost:9000</p>
</blockquote>
<p>输入<a href="http://localhost:9000">http://localhost:9000</a>，假设ip地址是111.111.111.111,把localhost换成你的IP地址111.111.111.111即可，如果有域名，也可以把localhost换成你的域名</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>软件</category>
        <category>程序</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>leanote</tag>
        <tag>蚂蚁笔记</tag>
        <tag>搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客搭建和简单部署</title>
    <url>/2020/03/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%92%8C%E7%AE%80%E5%8D%95%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="Hexo简介"><a class="header-anchor" href="#Hexo简介"></a>Hexo简介</h2>
<p>Hexo是一款基于Node.js的静态博客框架，可以方便的生成静态网页托管在GitHub和Coding上或者自己的服务器上，是搭建博客的首选框架。大家可以进入hexo官网进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p>
<span id="more"></span>
<h2 id="Hexo搭建步骤"><a class="header-anchor" href="#Hexo搭建步骤"></a>Hexo搭建步骤</h2>
<ol>
<li>安装Git</li>
<li>安装Node.js</li>
<li>安装Hexo</li>
<li>GitHub创建个人仓库</li>
<li>生成SSH添加到GitHub</li>
<li>将hexo部署到GitHub</li>
<li>设置个人域名</li>
<li>发布文章</li>
</ol>
<h2 id="安装Git"><a class="header-anchor" href="#安装Git"></a>安装Git</h2>
<p>windows：到<a href="https://gitforwindows.org/">git</a>官网上下载，下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。<br />
linux：只需要一行代码，<code>sudo apt-get install git</code></p>
<p>安装好后，用 <code>git --version</code> 来查看一下版本</p>
<h2 id="安装Node-js"><a class="header-anchor" href="#安装Node-js"></a>安装Node.js</h2>
<p>Hexo是基于Node.js编写的，所以需要安装一下Node.js和里面的npm工具。</p>
<p>windows：<a href="https://nodejs.org/en/download/">Node.js</a>选择LTS版本就行了。<br />
linux：也是通过命令来安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure>
<p>安装完后，在命令行输入以下代码进行验证</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>
<h2 id="安装hexo"><a class="header-anchor" href="#安装hexo"></a>安装hexo</h2>
<p>先创建一个文件夹，命名为<code>blog</code>（这里假设路径为 <u>D:\blog</u>），然后<code>cd</code>到这个文件夹下（不知道怎么操作，可以去搜索<code>命令提示符进入指定文件夹</code>）。<br />
输入命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd D:\blog</span><br><span class="line"></span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>然后用<code>hexo -v</code>命令，查看一下版本。<br />
接下来初始化一下hexo，这里的myblog可以自己取名字，作为你的博客源文件夹了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init myblog</span><br><span class="line"></span><br><span class="line">cd myblog</span><br><span class="line"></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>新建完成后，指定文件夹目录下有：</p>
<ul>
<li>node_modules: 依赖包(或插件)</li>
<li>public：存放生成的页面（这个文件夹可能会没有，但当你使用<code>hexo g</code> 构建时，就会有了。）</li>
<li>scaffolds：生成文章的一些模板</li>
<li>source：用来存放你的博客资源
<ul>
<li>_posts：用来存放你的文章</li>
</ul>
</li>
<li>themes：主题</li>
<li>_config.yml：博客的配置文件</li>
<li>package.json：一些应用程序的信息、命令的配置</li>
</ul>
<p>然后使用以下命令，生成静态文件和启动本地服务器。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p>这两个命令可以简写为<code>hexo g</code>和<code>hexo s</code>。</p>
<p>这样就打开hexo的服务，在浏览器输入 <a href="http://localhost:4000">http://localhost:4000</a> 就可以看到你生成的博客了。</p>
<details class="note primary"><summary><p>提示：清理缓存</p>
</summary>
<p>每次<u>对服务器的配置进行了大改动后</u>或<u>发现改动的配置未生效</u>，我建议使用 <code>hexo clean</code> 命令进行缓存清理，而且这样可以解决一些小问题。</p>

</details>
<h2 id="安装“部署”插件"><a class="header-anchor" href="#安装“部署”插件"></a>安装“部署”插件</h2>
<p>如果需要把你的博客简单的发布到网上，那你需要先安装deploy-git插件，也就是部署的命令,这样你才能用命令部署到coding、GitHub亦或是你自己的服务器上。</p>
<p><code>cd</code>到你的博客文件夹，输入下面的命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd D:\blog</span><br><span class="line"></span><br><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>
<h2 id="部署到coding-国内访问"><a class="header-anchor" href="#部署到coding-国内访问"></a>部署到coding(国内访问)</h2>
<div class="note danger"><p>coding已经无法再像GitHub那样部署使用了，请使用其他方式代替coding（2022年3月15日）！</p>
</div>
<ol>
<li>
<p>去<a href="https://coding.net/">coding</a>的官网，注册一个账号。</p>
</li>
<li>
<p>注册完后，新建一个<code>项目</code>并进入项目，打开<code>代码仓库</code>。</p>
</li>
<li>
<p>复制代码仓库的地址，留作后用。</p>
</li>
<li>
<p>打开你的博客文件夹里的  <abbr title="这个我是用VS code打开的，当然也可以用记事本打开">_config.yml</abbr>  文件，在最下面的<code>deploy:</code>里，</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type: &#x27;git&#x27; </span><br><span class="line">repo: </span><br><span class="line">  coding: https://e.coding.net/yunying61/blog-yunying61.git,master</span><br></pre></td></tr></table></figure>
</li>
</ol>
<div class="note info"><p><strong>注意缩进</strong>，而这里的<code>coding: </code>，注意英文冒号(:)后面还有一个空格，而这里就是刚才你复制的 已公开源码 地址，再加上(英文逗号) ,master</p>
</div>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/deploy1.jpg?x-oss-process=style/yunying61" alt="部署到coding" /></p>
<ol start="5">
<li>
<p>当你再次<code>hexo g</code> , <code>hexo d</code>的时候，就会自动推送到coding的仓库里。</p>
</li>
<li>
<p>然后去你的coding仓库，找到左侧的<code>构建与部署</code>，点击进入静态网站。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/gyb.jpg?x-oss-process=style/yunying61"></p>
</li>
<li>
<p>然后 立即发布静态网站，填写信息，保存。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/html.jpg?x-oss-process=style/yunying61"></p>
</li>
</ol>
<p>到这里，你的博客就算是部署到了coding上了，通过coding给出的访问地址就可以访问你自己搭建的博客了。</p>
<p>如果你有域名，那可以把域名绑定到coding给出的网址上，并且在coding的静态网站设置界面，添加你的域名。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/ym.jpg?x-oss-process=style/yunying61"></p>
<h2 id="部署到github-国外访问"><a class="header-anchor" href="#部署到github-国外访问"></a>部署到github(国外访问)</h2>
<ol>
<li>
<p>去<a href="https://github.com/">Github</a>的官网，注册一个账号。</p>
</li>
<li>
<p>注册完，然后<code>New repository</code>新建一个仓库，名称为 <code>你的账户名.github.io</code> （账户名就是创建者下面那个英文名） ，然后点击创建仓库。<br />
<img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/hexo_github.jpg?x-oss-process=style/yunying61"></p>
</li>
</ol>
<blockquote>
<p>名称这个一定要是这样，否则可能没有用，后续你就可以用<code>你的账户名.github.io</code> 这个直接进入你的博客了。</p>
</blockquote>
<ol start="3">
<li>然后去你电脑上的博客文件夹，右键 <code>git bash</code> 到这个文件夹下，输入以下命令</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure>
<p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。</p>
<p>可以用以下两条，检查一下你有没有输入正确</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure>
<p>至于SSH要不要配置，那看你们自己了，配置了SSH就可以控制git上传你的文件到GitHub上。</p>
<ol start="4">
<li>
<p>打开你的博客文件夹里的  <abbr title="这个我是用VS code打开的，当然也可以用记事本打开">_config.yml</abbr>  文件，在最下面的<code>deploy:</code>里，</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type: &#x27;git&#x27; </span><br><span class="line">repo: </span><br><span class="line">  github: https://github.com/yunying61/yunying61.github.io.git,master</span><br></pre></td></tr></table></figure>
</li>
</ol>
<div class="note info"><p><strong>注意缩进</strong>，而这里的<code>github: </code> ，注意英文冒号(:)后面还有一个空格，而这里就是刚才你复制的 HTTPS 地址，再加上(英文逗号) ,master</p>
</div>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/hexo/deploy2.jpg?x-oss-process=style/yunying61" alt="部署到coding" /></p>
<ol start="5">
<li>
<p>当你再次<code>hexo g</code> , <code>hexo d</code>的时候，就会自动推送到github的仓库里。<br />
注意deploy时可能要你输入username和password，就是你GitHub的账号密码。</p>
</li>
<li>
<p>推送完，就可以直接访问 https://你的名称.github.io/ 进入你的博客了</p>
</li>
</ol>
]]></content>
      <categories>
        <category>IT</category>
        <category>博客</category>
        <category>软件</category>
        <category>程序</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>搭建</tag>
        <tag>博客</tag>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 类&amp;对象</title>
    <url>/2020/05/C++-%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1>C++ 类&amp;对象</h1>
<p>C++ 在 C 语言的基础上增加了面向对象编程，C++ 支持面向对象程序设计。类是 C++ 的核心特性，通常被称为用户定义的类型。</p>
<p>类用于指定对象的形式，它包含了数据表示法和用于处理数据的方法。类中的数据和方法称为类的成员。函数在一个类中被称为类的成员。</p>
<span id="more"></span>
<p>[TOC]</p>
<h2 id="C-类定义"><a class="header-anchor" href="#C-类定义"></a>C++ 类定义</h2>
<p>定义一个类，本质上是定义一个数据类型的蓝图。这实际上并没有定义任何数据，但它定义了类的名称意味着它定义了类的对象包括了什么，以及可以在这个对象上执行哪些操作。</p>
<p>类定义是以关键字 <strong>class</strong> 开头，后跟类的名称。类的主体是包含在一对花括号中。类定义后必须跟着一个分号或一个声明列表。<u>并且其中的成员数据（变量）不能赋初始值</u>。例如，我们使用关键字 <strong>class</strong> 定义 Box 数据类型，如下所示：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Box</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">V</span><span class="params">()</span></span>&#123;v=length*breadth*height;<span class="keyword">return</span> v;&#125;		<span class="comment">//计算体积</span></span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">C</span><span class="params">()</span></span>&#123;c=<span class="number">4</span>*(length+breadth+height);<span class="keyword">return</span> c;&#125;	<span class="comment">//计算周长</span></span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">    	<span class="type">double</span> length;   <span class="comment">// 盒子的长度</span></span><br><span class="line"> 		<span class="type">double</span> breadth;  <span class="comment">// 盒子的宽度</span></span><br><span class="line"> 		<span class="type">double</span> height;   <span class="comment">// 盒子的高度</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="类成员的访问限制-权限"><a class="header-anchor" href="#类成员的访问限制-权限"></a>类成员的访问限制(权限)</h2>
<p>数据封装是面向对象编程的一个重要特点，它防止函数直接访问类类型的内部成员。类成员的访问限制是通过在类主体内部对各个区域标记 <strong>public、private、protected</strong> 来指定的。关键字 <strong>public、private、protected</strong> 称为访问修饰符。</p>
<p>一个类可以有多个 public、protected 或 private 标记区域。<code>每个标记区域在下一个标记区域开始之前</code>或者<code>在遇到类主体结束右括号之前</code>都是有效的。<u>成员和类的默认访问修饰符是 private</u>。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">		<span class="comment">// 公有成员</span></span><br><span class="line">	<span class="keyword">protected</span>:</span><br><span class="line"> 		<span class="comment">// 受保护成员</span></span><br><span class="line">	<span class="keyword">private</span>:</span><br><span class="line">		<span class="comment">// 私有成员</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="公有（public）成员"><a class="header-anchor" href="#公有（public）成员"></a>公有（public）成员</h3>
<p><strong>公有</strong>成员在程序中类的外部是可访问的。您可以不使用任何成员函数来设置和获取公有变量的值。</p>
<h3 id="私有（private）成员"><a class="header-anchor" href="#私有（private）成员"></a>私有（private）成员</h3>
<p><strong>私有</strong>成员变量或函数在类的外部是不可访问的，甚至是不可查看的。只有类和友元函数可以访问私有成员。</p>
<p>默认情况下，如果您没有使用任何访问修饰符，类的成员将被假定为私有成员。</p>
<h3 id="保护（protected）成员"><a class="header-anchor" href="#保护（protected）成员"></a>保护（protected）成员</h3>
<p><strong>保护</strong>成员变量或函数与私有成员十分相似，但有一点不同，保护成员在派生类（即子类）中是可访问的。</p>
<h4 id="代码演示："><a class="header-anchor" href="#代码演示："></a>代码演示：</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">text</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    	<span class="type">int</span> a;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">    	<span class="type">int</span> b;</span><br><span class="line">    <span class="keyword">protected</span>:</span><br><span class="line">    	<span class="type">int</span> c;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">setb</span><span class="params">(<span class="type">int</span> Bb)</span></span>&#123;b=Bb;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">t</span>::text	<span class="comment">// t 是 text 的派生类</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">setc</span><span class="params">(<span class="type">int</span> Cc)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">t::setc</span><span class="params">(<span class="type">int</span> Cc)</span> </span>&#123;c=Cc;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    text text1;</span><br><span class="line">    text1.a = <span class="number">5</span>;	<span class="comment">//这是允许的，因为 a 是公有的</span></span><br><span class="line">    text1.b = <span class="number">10</span>;	<span class="comment">//这是不允许的，因为 b 是私有的</span></span><br><span class="line">    text1.<span class="built_in">setb</span>(<span class="number">10</span>);	<span class="comment">//这是允许的，因为 b 的赋值是通过外部接口去给 b 赋值</span></span><br><span class="line">    </span><br><span class="line">    t text2;</span><br><span class="line">    t.<span class="built_in">setc</span>(<span class="number">15</span>);		<span class="comment">//这里使用了成员函数给 text 中的 c 赋值了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="定义-类-的对象"><a class="header-anchor" href="#定义-类-的对象"></a>定义 类 的对象</h2>
<p>类提供了对象的蓝图，所以基本上，对象是根据类来创建的。声明类的对象，就像声明基本类型的变量一样。下面的语句声明了类 Box 的两个对象：</p>
<p>Box Box1;          // 声明 Box1，类型为 Box<br />
Box Box2;          // 声明 Box2，类型为 Box</p>
<p>对象 Box1 和 Box2 都有它们各自的数据成员。</p>
<h2 id="访问-对象-里的数据成员"><a class="header-anchor" href="#访问-对象-里的数据成员"></a>访问 对象 里的数据成员</h2>
<p>**<u>在 类 外</u>**访问 类的对象里 的<code>公共数据成员</code>可以使用直接成员访问运算符 (.) 来访问。<br />
如使用  “对象名.成员名”  的方式访问<code>public</code>属性的成员</p>
<p>为了更好地理解这些概念，让我们尝试一下下面的实例：</p>
<h3 id="实例"><a class="header-anchor" href="#实例"></a>实例</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Box</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="type">double</span> length;   <span class="comment">// 长度</span></span><br><span class="line">      <span class="type">double</span> breadth;  <span class="comment">// 宽度</span></span><br><span class="line">      <span class="type">double</span> height;   <span class="comment">// 高度</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   Box Box1;        <span class="comment">// 声明 Box1，类型为 Box</span></span><br><span class="line">   Box Box2;        <span class="comment">// 声明 Box2，类型为 Box</span></span><br><span class="line">   <span class="type">double</span> volume = <span class="number">0.0</span>;     <span class="comment">// 用于存储体积</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">// box 1 详述</span></span><br><span class="line">   Box1.height = <span class="number">5.0</span>; </span><br><span class="line">   Box1.length = <span class="number">6.0</span>; </span><br><span class="line">   Box1.breadth = <span class="number">7.0</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// box 2 详述</span></span><br><span class="line">   Box2.height = <span class="number">10.0</span>;</span><br><span class="line">   Box2.length = <span class="number">12.0</span>;</span><br><span class="line">   Box2.breadth = <span class="number">13.0</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// box 1 的体积</span></span><br><span class="line">   volume = Box1.height * Box1.length * Box1.breadth;</span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Box1 的体积：&quot;</span> &lt;&lt; volume &lt;&lt;endl;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// box 2 的体积</span></span><br><span class="line">   volume = Box2.height * Box2.length * Box2.breadth;</span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Box2 的体积：&quot;</span> &lt;&lt; volume &lt;&lt;endl;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当上面的代码被编译和执行时，它会产生下列结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Box1 的体积：210</span><br><span class="line">Box2 的体积：1560</span><br></pre></td></tr></table></figure>
<p>需要注意的是，私有的成员和受保护的成员不能使用直接成员访问运算符 (.) 来直接访问。我们将在后续的教程中学习如何访问私有成员和受保护的成员。</p>
<h2 id="类的构造函数"><a class="header-anchor" href="#类的构造函数"></a>类的构造函数</h2>
<p>类的<strong>构造函数</strong>是类的一种特殊的成员函数，它会在每次创建类的新对象时执行。</p>
<p><strong>特点：</strong></p>
<ol>
<li>构造函数的名称与类的名称是完全相同的，</li>
<li>并且不会返回任何类型，</li>
<li>也不会返回 void。</li>
</ol>
<p>**作用：**构造函数可用于为某些成员变量设置初始值。</p>
<blockquote>
<p>在创建派生类对象时,构造函数的执行顺序：<br />
基类构造函数  -  对象成员构造函数  -  派生类本身的构造函数</p>
</blockquote>
<p>下面的实例有助于更好地理解构造函数的概念：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Line</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">		<span class="function"><span class="type">void</span> <span class="title">setLength</span><span class="params">( <span class="type">double</span> len )</span></span>;</span><br><span class="line">		<span class="function"><span class="type">double</span> <span class="title">getLength</span><span class="params">( <span class="type">void</span> )</span></span>;</span><br><span class="line">		<span class="built_in">Line</span>();  <span class="comment">// 这是不带参数的构造函数，可以用于旁白。</span></span><br><span class="line">		<span class="built_in">Line</span>(<span class="type">double</span> len);  <span class="comment">// 这是带参数的构造函数,在创建对象时就会给对象赋初始值</span></span><br><span class="line">		<span class="comment">//这里的两个Line是使用了重载函数</span></span><br><span class="line">    </span><br><span class="line">   <span class="keyword">private</span>:</span><br><span class="line">      <span class="type">double</span> length;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 成员函数定义，包括构造函数</span></span><br><span class="line">Line::<span class="built_in">Line</span>(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Object is being created&quot;</span> &lt;&lt; endl;</span><br><span class="line">    length = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">Line::<span class="built_in">Line</span>( <span class="type">double</span> len)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Object is being created, length = &quot;</span> &lt;&lt; len &lt;&lt; endl;</span><br><span class="line">    length = len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Line::setLength</span><span class="params">( <span class="type">double</span> len )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    length = len;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Line::getLength</span><span class="params">( <span class="type">void</span> )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 程序的主函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Line line1;			<span class="comment">//自动指向不带参数的</span></span><br><span class="line">    <span class="function">Line <span class="title">line2</span><span class="params">(<span class="number">10.0</span>)</span></span>;	<span class="comment">//自动指向带参数的</span></span><br><span class="line"> </span><br><span class="line">   <span class="comment">// 设置长度</span></span><br><span class="line">   line.<span class="built_in">setLength</span>(<span class="number">6.0</span>); </span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Length of line : &quot;</span> &lt;&lt; line.<span class="built_in">getLength</span>() &lt;&lt;endl;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="使用初始化列表来初始化字段"><a class="header-anchor" href="#使用初始化列表来初始化字段"></a>使用初始化列表来初始化字段</h3>
<p>主要是用于 较多参数 时的值的初始化</p>
<p>使用初始化列表来初始化字段：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Line::<span class="built_in">Line</span>( <span class="type">double</span> len): <span class="built_in">length</span>(len)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Object is being created, length = &quot;</span> &lt;&lt; len &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的语法等同于如下语法：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Line::<span class="built_in">Line</span>( <span class="type">double</span> len)</span><br><span class="line">&#123;</span><br><span class="line">    length = len;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Object is being created, length = &quot;</span> &lt;&lt; len &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>假设有一个类 C，具有多个字段 X、Y、Z 等需要进行初始化，同理地，您可以使用上面的语法，只需要在不同的字段使用逗号进行分隔，如下所示：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">C::<span class="built_in">C</span>( <span class="type">double</span> a, <span class="type">double</span> b, <span class="type">double</span> c): <span class="built_in">X</span>(a), <span class="built_in">Y</span>(b), <span class="built_in">Z</span>(c)</span><br><span class="line">&#123;</span><br><span class="line">  ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="类的析构函数"><a class="header-anchor" href="#类的析构函数"></a>类的析构函数</h2>
<p>类的<strong>析构函数</strong>是类的一种特殊的成员函数，它会在每次删除所创建的对象时执行。</p>
<p>析构函数的名称与类的名称是完全相同的，只是在前面加了个波浪号（~）作为前缀，它不会返回任何值，也不能带有任何参数。析构函数有助于在跳出程序（比如关闭文件、释放内存等）前释放资源。</p>
<blockquote>
<p>在具有继承关系的类层次体系中,析构函数执行的顺序：<br />
派生类本身的析构函数  -  对象成员析构函数  -  基类析构函数</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Line</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">setLength</span><span class="params">( <span class="type">double</span> len )</span></span>;</span><br><span class="line">      <span class="function"><span class="type">double</span> <span class="title">getLength</span><span class="params">( <span class="type">void</span> )</span></span>;</span><br><span class="line">      <span class="built_in">Line</span>();   <span class="comment">// 这是构造函数声明</span></span><br><span class="line">      ~<span class="built_in">Line</span>();  <span class="comment">// 这是析构函数声明</span></span><br><span class="line"> </span><br><span class="line">   <span class="keyword">private</span>:</span><br><span class="line">      <span class="type">double</span> length;</span><br><span class="line">&#125;;</span><br><span class="line"> <span class="comment">// 成员函数定义，包括构造函数</span></span><br><span class="line">Line::<span class="built_in">Line</span>(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;对象已被创建&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">Line::~<span class="built_in">Line</span>(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;对象已被删除&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Line::setLength</span><span class="params">( <span class="type">double</span> len )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    length = len;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Line::getLength</span><span class="params">( <span class="type">void</span> )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">// 程序的主函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Line line;</span><br><span class="line"> 	<span class="comment">// 设置长度</span></span><br><span class="line">	line.<span class="built_in">setLength</span>(<span class="number">6.0</span>); </span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;Length of line : &quot;</span> &lt;&lt; line.<span class="built_in">getLength</span>() &lt;&lt;endl;</span><br><span class="line"> 	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行后的结果为：</p>
<blockquote>
<p>对象已被创建<br />
Length of line : 6<br />
对象已被删除</p>
</blockquote>
<h2 id="类的拷贝构造函数"><a class="header-anchor" href="#类的拷贝构造函数"></a>类的拷贝构造函数</h2>
<h2 id="类的友元函数"><a class="header-anchor" href="#类的友元函数"></a>类的友元函数</h2>
<p>类的友元函数是定义在类外部，但有权访问类的所有私有（private）成员和保护（protected）成员。尽管友元函数的原型有在类的定义中出现过，但是友元函数并不是成员函数。<br />
友元可以是一个函数，该函数被称为友元函数；友元也可以是一个类，该类被称为友元类，在这种情况下，整个类及其所有成员都是友元。<br />
如果要声明函数为一个类的友元，需要在类定义中该函数原型前使用关键字 <strong><u>friend</u></strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Box</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> width;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">printWidth</span><span class="params">(Box box1)</span></span>;<span class="comment">//也可以是(Box &amp;box1)，在于是否需要形参改变实参。</span></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">class</span> <span class="title class_">BigBox</span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setWidth</span><span class="params">(<span class="type">double</span> wid)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BigBox</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> :</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">Print</span><span class="params">(<span class="type">int</span> width, Box &amp;box2)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// BigBox是Box的友元类，它可以直接访问Box类的任何成员</span></span><br><span class="line">        box2.<span class="built_in">setWidth</span>(width);</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Width of box : &quot;</span> &lt;&lt; box2.width &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 成员函数定义</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Box::setWidth</span><span class="params">(<span class="type">double</span> wid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    width = wid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请注意：printWidth() 不是任何类的成员函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printWidth</span><span class="params">(Box box1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 因为 printWidth() 是 Box 的友元，它可以直接访问该类的任何成员 */</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Width of box : &quot;</span> &lt;&lt; box1.width &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 程序的主函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Box box;</span><br><span class="line">    BigBox big;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用成员函数设置宽度</span></span><br><span class="line">    box.<span class="built_in">setWidth</span>(<span class="number">10.0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用友元函数输出宽度</span></span><br><span class="line">    <span class="built_in">printWidth</span>(box);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用友元类中的方法设置宽度</span></span><br><span class="line">    big.<span class="built_in">Print</span>(<span class="number">20</span>, box);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1>类 &amp; 对象详解</h1>
<p>到目前为止，我们已经对 C++ 的类和对象有了基本的了解。下面的列表中还列出了其他一些 C++ 类和对象相关的概念，可以点击相应的链接进行学习。</p>
<table>
<thead>
<tr>
<th style="text-align:left">概念</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-class-member-functions.html">类成员函数</a></td>
<td style="text-align:left">类的成员函数是指那些把定义和原型写在类定义内部的函数，就像类定义中的其他变量一样。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-class-access-modifiers.html">类访问修饰符</a></td>
<td style="text-align:left">类成员可以被定义为 public、private 或 protected。默认情况下是定义为 private。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-constructor-destructor.html">构造函数 &amp; 析构函数</a></td>
<td style="text-align:left">类的构造函数是一种特殊的函数，在创建一个新的对象时调用。类的析构函数也是一种特殊的函数，在删除所创建的对象时调用。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-copy-constructor.html">C++ 拷贝构造函数</a></td>
<td style="text-align:left">拷贝构造函数，是一种特殊的构造函数，它在创建对象时，是使用同一类中之前创建的对象来初始化新创建的对象。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-friend-functions.html">C++ 友元函数</a></td>
<td style="text-align:left"><strong>友元函数</strong>可以访问类的 private 和 protected 成员。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-inline-functions.html">C++ 内联函数</a></td>
<td style="text-align:left">通过内联函数，编译器试图在调用函数的地方扩展函数体中的代码。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-this-pointer.html">C++ 中的 this 指针</a></td>
<td style="text-align:left">每个对象都有一个特殊的指针 <strong>this</strong>，它指向对象本身。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-pointer-to-class.html">C++ 中指向类的指针</a></td>
<td style="text-align:left">指向类的指针方式如同指向结构的指针。实际上，类可以看成是一个带有函数的结构。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.runoob.com/cplusplus/cpp-static-members.html">C++ 类的静态成员</a></td>
<td style="text-align:left">类的数据成员和函数成员都可以被声明为静态的。</td>
</tr>
</tbody>
</table>
<h1>继承 &amp; 派生</h1>
<h2 id="单继承"><a class="header-anchor" href="#单继承"></a>单继承</h2>
<p>一个类可以派生自多个类，这意味着，它可以从多个基类继承数据和函数。定义一个派生类，我们使用一个类派生列表来指定基类。类派生列表以一个或多个基类命名，形式如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">derived_class</span>: access_specifier base_class</span><br></pre></td></tr></table></figure>
<p>其中，访问修饰符 access_specifier 是 <strong>public</strong>、<strong>protected</strong> 或 <strong>private</strong> 其中的一个，base_class 是之前定义过的某个类（基类）的名称。如果未使用访问修饰符 access_specifier，则<code>默认为 private</code>。</p>
<hr />
<h2 id="多继承"><a class="header-anchor" href="#多继承"></a>多继承</h2>
<p>多继承即一个子类可以有多个父类，它继承了多个父类的特性。</p>
<p>C++ 类可以从多个类 继承成员，语法如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> &lt;派生类名&gt;:&lt;继承方式<span class="number">1</span>&gt;&lt;基类名<span class="number">1</span>&gt;,&lt;继承方式<span class="number">2</span>&gt;&lt;基类名<span class="number">2</span>&gt;,...</span><br><span class="line">&#123;&lt;派生类类体&gt;&#125;;</span><br></pre></td></tr></table></figure>
<p>其中，访问修饰符 继承方式 是 <strong>public</strong>、<strong>protected</strong> 或 <strong>private</strong> 其中的一个，用来修饰每个基类，各个基类之间用逗号分隔。</p>
<hr />
<h2 id="按访问范围分"><a class="header-anchor" href="#按访问范围分"></a>按访问范围分</h2>
<p><strong>总结一下三种继承方式：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">继承方式</th>
<th style="text-align:left">基类的public成员</th>
<th style="text-align:left">基类的protected成员</th>
<th style="text-align:left">基类的private成员</th>
<th style="text-align:left">继承引起的访问控制关系变化概括</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">public继承</td>
<td style="text-align:left">仍为public成员</td>
<td style="text-align:left">仍为protected成员</td>
<td style="text-align:left">不可访问</td>
<td style="text-align:left">基类的非私有成员在子类的访问属性不变</td>
</tr>
<tr>
<td style="text-align:left">protected继承</td>
<td style="text-align:left">变为protected成员</td>
<td style="text-align:left">仍为protected成员</td>
<td style="text-align:left">不可访问</td>
<td style="text-align:left">基类的非私有成员都为子类的保护成员</td>
</tr>
<tr>
<td style="text-align:left">private继承</td>
<td style="text-align:left">变为private成员</td>
<td style="text-align:left">变为private成员</td>
<td style="text-align:left">不可访问</td>
<td style="text-align:left">基类中的非私有成员都称为子类的私有成员</td>
</tr>
</tbody>
</table>
<h3 id="公有继承-pubilc"><a class="header-anchor" href="#公有继承-pubilc"></a>公有继承 pubilc</h3>
<ul>
<li>基类的public和protected<code>成员</code>的访问属性在派生类中保持不变，但基类的private<code>成员</code>不可直接访问。</li>
<li>派生类中的<code>成员函数</code>可以直接访问基类中的public和protected成员，但不能直接访问基类的private成员。</li>
<li>通过派生类的<code>对象</code>只能访问基类的public成员。</li>
</ul>
<h3 id="保护继承-protected"><a class="header-anchor" href="#保护继承-protected"></a>保护继承 protected</h3>
<ul>
<li>基类的public和protected<code>成员</code>都以protected<code>权限</code>出现在派生类中，但基类的private<code>成员</code>不可直接访问。</li>
<li>派生类中的<code>成员函数</code>可以直接访问基类中的public和protected成员，但不能直接访问基类的private成员。</li>
<li>通过派生类的<code>对象</code>不能直接访问基类中的==任何成员==</li>
</ul>
<h3 id="私有继承-private"><a class="header-anchor" href="#私有继承-private"></a>私有继承 private</h3>
<ul>
<li>基类的public和protected<code>成员</code>都以private<code>权限</code>出现在派生类中，但基类的private<code>成员</code>不可直接访问，且以 <code>该派生类</code> 为 ==基类== 的派生类不能访问 <code>该基类</code> 的 ==任何成员==。</li>
<li>派生类中的<code>成员函数</code>可以直接访问基类中的public和protected成员，但不能直接访问基类的private成员。</li>
<li>通过派生类的<code>对象</code>不能直接访问基类中的==任何成员==。</li>
</ul>
<hr />
<p><strong>派生后 继承 到的 权限 所对应的：</strong></p>
<p>派生类的<code>成员</code>对基类成员的访问</p>
<p>派生类的<code>对象</code>对基类成员的访问</p>
<p><strong>一个派生类继承了所有的基类方法，但下列情况除外：</strong></p>
<ul>
<li>基类的构造函数、析构函数和拷贝构造函数。</li>
<li>基类的重载运算符。</li>
<li>基类的友元函数。</li>
</ul>
<h2 id="二义性问题"><a class="header-anchor" href="#二义性问题"></a>二义性问题</h2>
<h2 id="虚基类"><a class="header-anchor" href="#虚基类"></a>虚基类</h2>
]]></content>
      <categories>
        <category>IT</category>
        <category>编程语言</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>C++</tag>
        <tag>类</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows11程序安装或卸载 问题解决</title>
    <url>/2022/03/Windows11%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%85%E6%88%96%E5%8D%B8%E8%BD%BD-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<p><a href="https://support.microsoft.com/zh-cn/windows/%E4%BF%AE%E5%A4%8D%E9%98%BB%E6%AD%A2%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%85%E6%88%96%E5%88%A0%E9%99%A4%E7%9A%84%E9%97%AE%E9%A2%98-cca7d1b6-65a9-3d98-426b-e9f927e1eb4d">修复阻止程序安装或删除的问题 (microsoft.com)</a></p>
<span id="more"></span>
]]></content>
      <categories>
        <category>IT</category>
        <category>博客</category>
        <category>软件</category>
        <category>技巧</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>配置</tag>
        <tag>Next</tag>
        <tag>主题</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora-PicGo-阿里云OSS-搭建图床</title>
    <url>/2020/12/Typora-PicGo-%E9%98%BF%E9%87%8C%E4%BA%91OSS-%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h1>Typora+PicGo+阿里云OSS-搭建自动上传图床</h1>
<h2 id="前言"><a class="header-anchor" href="#前言"></a>前言</h2>
<blockquote>
<p>一定要注意空格啊！！！我就是因为Access Key ID开头多打了一个空格，导致一直报错，折腾了2小时，无意间在配置文件里发现这里多了一个空格！</p>
</blockquote>
<p>好了，以上是吐槽，接下来进入正题。</p>
<p>在Typora使用markdown语法写作时，是不是遇到过这样子的情况。我需要<strong>插入图片</strong>用的是本地链接。在本地，在编辑器中，我们能看到图片的展示。但是如果我们写完了，需要上传到自己的博客，或者去到某些平台发布。复制文章过去，图片并不能被复制过去，需要手动的去上传本地图片到图片服务器，然后根据URL导入文章中，再排版。十分的麻烦。</p>
<p>而PicGo+阿里云的OSS就可以<strong>自动</strong>帮我们将图片上传到网上，转换成URL，然后出现在我们文章中需要插入图片的位置，使用该URL，不管我们在什么平台发布文章，都能显示我们的图片。</p>
<span id="more"></span>
<h1>PicGo</h1>
<p>一个用于<strong>快速</strong>上传图片并获取URL链接的图床工具。</p>
<p>PicGo 本体支持如下图床：</p>
<ul>
<li>SM.MS图床</li>
<li>腾讯云COS</li>
<li>Github图床</li>
<li>七牛图床</li>
<li>Imgur图床</li>
<li><strong>阿里云OSS</strong></li>
<li>又拍云图床</li>
<li>如果你有其他图床的上传需求，还有第三方图床插件可以使用</li>
</ul>
<h2 id="特色功能"><a class="header-anchor" href="#特色功能"></a>特色功能</h2>
<ul>
<li>支持拖拽图片上传</li>
<li>支持快捷键上传剪贴板里第一张图片</li>
<li>Windows 和 macOS 支持右键图片文件通过菜单上传 (v2.1.0+)</li>
<li>上传图片后自动复制链接到剪贴板</li>
<li>支持自定义复制到剪贴板的链接格式</li>
<li>支持修改快捷键，默认快速上传快捷键：<code>command+shift+p</code>（macOS）| <code>control+shift+p</code>（Windows\Linux)</li>
<li>支持插件系统，已有插件支持 Gitee、青云等第三方图床
<ul>
<li>更多第三方插件以及使用了 PicGo 底层的应用可以在 <a href="https://github.com/PicGo/Awesome-PicGo">Awesome-PicGo</a> 找到。欢迎贡献！</li>
</ul>
</li>
<li>支持通过发送 HTTP 请求调用 PicGo 上传（v2.2.0+)</li>
</ul>
<p><strong>如果第一次使用，请参考应用 <a href="https://picgo.github.io/PicGo-Doc/zh/guide/getting-started.html">使用文档</a>。遇到问题了还可以看看 <a href="https://github.com/Molunerfinn/PicGo/blob/dev/FAQ.md">FAQ</a> 以及被关闭的 <a href="https://github.com/Molunerfinn/PicGo/issues?q=is%3Aissue+is%3Aclosed">issues</a>。</strong></p>
<h2 id="下载安装"><a class="header-anchor" href="#下载安装"></a>下载安装</h2>
<blockquote>
<p>注意：请确保你安装了 <code>Node.js</code>， 并且版本 &gt;= 8。</p>
</blockquote>
<p>点击此处下载 <a href="https://github.com/Molunerfinn/PicGo/releases">应用</a>。</p>
<h3 id="Windows"><a class="header-anchor" href="#Windows"></a>Windows</h3>
<p>Windows 用户请下载最新版本的 <code>exe</code> 文件。</p>
<p><strong>还可以使用 <a href="https://scoop.sh/">Scoop</a> 来安装 PicGo: <code>scoop bucket add helbing https://github.com/helbing/scoop-bucket</code> &amp; <code>scoop install picgo</code>。 感谢 @helbing 的贡献！</strong></p>
<p><strong>还可以使用 <a href="https://chocolatey.org/">Chocolatey</a> 来安装 PicGo: <code>choco install picgo</code>。 感谢 @iYato 的贡献！</strong></p>
<h3 id="macOS"><a class="header-anchor" href="#macOS"></a>macOS</h3>
<p>macOS 用户请下载最新版本的 <code>dmg</code> 文件。</p>
<p><strong>还可以使用 <code>brew cask</code> 来安装 PicGo: <code>brew cask install picgo</code>。感谢 @womeimingzi11 的贡献！</strong></p>
<h3 id="Linux"><a class="header-anchor" href="#Linux"></a>Linux</h3>
<p>Linux 用户请下载 <code>AppImage</code> 文件。</p>
<p><strong>如果你是 Arch 类的 Linux 用户，可以直接通过 <code>aurman -S picgo-appimage</code> 来安装 PicGo。感谢 @houbaron 的贡献！</strong></p>
<h2 id="应用截图"><a class="header-anchor" href="#应用截图"></a>应用截图</h2>
<p><img data-src="https://user-images.githubusercontent.com/12621342/34242310-b5056510-e655-11e7-8568-60ffd4f71910.gif" alt="" /></p>
<h2 id="PicGo配置"><a class="header-anchor" href="#PicGo配置"></a>PicGo配置</h2>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/picgo-alyoss.png" alt="" /></p>
<p>阿里云OSS配置项及说明：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;accessKeyId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;accessKeySecret&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;bucket&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 存储空间名</span></span><br><span class="line">  <span class="attr">&quot;area&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 存储区域代号</span></span><br><span class="line">  <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 自定义存储路径</span></span><br><span class="line">  <span class="attr">&quot;customUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 自定义域名，注意要加http://或者https://</span></span><br><span class="line">  <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<div class="note info"><p>注意空格啊！！！不要像我一样怀疑了半天的人生，结果就是多打了一个空格！</p>
</div>
<p>&lt;abbr title:”没有就去阿里买一个OSS，很便宜的”&gt;默认你已经有了阿里云的OSS</abbr>，而且知道阿里云的<strong>RAM访问控制</strong>。</p>
<ul>
<li>*设定Keyld（accessKeyId）：这是你的<code>accessKeyId</code></li>
<li>*设定KeySecret（accessKeySecret）：这是你的<code>accessKeySecret</code></li>
<li>*设定存储空间名（bucket）：这是你的bucket名称</li>
<li>*确认存储区域（area）：这是你bucket所在的地域，一般都为oss-cn-城市拼音</li>
<li>指定存储路径（path）：默认为空，则放在bucket根目录下；如果有需求，则存储路径一定要以<code>/</code>结尾！</li>
<li>设定网址后缀（options）：如果你的OSS有设置网址后缀，请注意是否要加上这个后缀。</li>
<li>设定自定义域名（customUrl）：自定义域名，注意要加http://或者https://</li>
</ul>
<blockquote>
<p>在Typora的偏好设置 - 图像，按照下图进行设置就可以了。</p>
</blockquote>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/picgo-typora.png?x-oss-process=style/yunying61" alt="" />)</p>
<blockquote>
<p>以上配置是在PicGo软件上上传图片然后复制到URL进行使用的，而且在日常写作中，PicGo也是要开启才能使用，所以下面我将介绍一个更为方便的PicGo-Core，它是以命令行形式运行的，用完即退出进程，不会一直占用系统资源。</p>
</blockquote>
<h2 id="PicGo-Core配置"><a class="header-anchor" href="#PicGo-Core配置"></a>PicGo-Core配置</h2>
<p>官网<a href="https://picgo.github.io/PicGo-Core-Doc/">PicGo-Core</a></p>
<p>安装：<code>注意请确保你的 Node.js 版本 &gt;= 8</code>。</p>
<p>使用 <code>npm install picgo -g</code> 全局安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#简单使用</span></span><br><span class="line"><span class="comment"># 上传具体路径图片</span></span><br><span class="line">picgo upload /xxx/xxx.jpg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传剪贴板里的第一张图片（上传时会将格式转成png）</span></span><br><span class="line">picgo upload</span><br></pre></td></tr></table></figure>
<h3 id="默认配置文件"><a class="header-anchor" href="#默认配置文件"></a>默认配置文件</h3>
<p>首先，先在命令窗口使用命令 <code>picgo -h</code> 查看picgo的命令，同时会生成配置文件。</p>
<p>picgo 的默认配置文件为<code>~/.picgo/config.json</code>。其中<code>~</code>为用户目录。不同系统的用户目录不太一样。</p>
<p>linux 和 macOS 均为<code>~/.picgo/config.json</code>。</p>
<p>windows 则为<code>C:\Users\你的用户名\.picgo\config.json</code>。</p>
<p>将配置文件填入如下，具体配置请根据上面的说明，把各项信息填好，并保存：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;picBed&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;uploader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aliyun&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aliyun&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aliyun&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;accessKeyId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;accessKeySecret&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;bucket&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;area&quot;</span><span class="punctuation">:</span> <span class="string">&quot;oss-cn-shanghai&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;customUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PicGo/&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;picgoPlugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>在Typora的偏好设置 - 图像，按照下图进行设置就可以了。</p>
</blockquote>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/picgo-core-typora.png?x-oss-process=style/yunying61" alt="" /></p>
<h2 id="后记"><a class="header-anchor" href="#后记"></a>后记</h2>
<p>至此，你就可以在Typora直接插入图片，PicGo-Core会自动帮你把图片上传到阿里云OSS，并且将链接替换成网页URL。在平时，也可以通过PicGo软件上传图片到远程服务器中进行备份。</p>
<p>而PicGo-Core只会将图片按原名称进行上传，意味着不能改名。</p>
<p>PicGo_APP可以在上传前修改图片名称，再上传。</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>技术</category>
        <category>软件</category>
        <category>程序</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>Typora</tag>
        <tag>PicGo</tag>
        <tag>OSS</tag>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo部署到个人服务器</title>
    <url>/2020/03/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h1></h1>
<span id="more"></span>
<p>查看当前git账户：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global --list</span><br></pre></td></tr></table></figure>
<p>修改文件权限，并编辑sudoers文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-61.oss-cn-shanghai.aliyuncs.com/img/PicGo/image-20220308114231895.png?x-oss-process=style/yunying61" alt="image-20220308114231895" /></p>
<p>添加（将yunying61改为你刚才查找到的git账户名）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yunying61 	ALL=(ALL) 	ALL</span><br></pre></td></tr></table></figure>
<p>保存退出（按 Esc 键退出编辑模式，输入”:wq”回车）并改回权限:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 400 /etc/sudoers</span><br></pre></td></tr></table></figure>
<h2 id="保存ssh公钥"><a class="header-anchor" href="#保存ssh公钥"></a>保存ssh公钥</h2>
<p>将本地端生成的SSH秘钥保存到服务器端的 authorized_keys 文件中保存</p>
<p>请在搜索引擎上搜索关键词：<strong>生成SSH公钥并保存</strong> ，本文不介绍如何操作</p>
<h2 id="测试SSH连接"><a class="header-anchor" href="#测试SSH连接"></a>测试SSH连接</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -v root@SERVER</span><br></pre></td></tr></table></figure>
<h2 id="新建git仓库"><a class="header-anchor" href="#新建git仓库"></a>新建git仓库</h2>
<h2 id="新建网站仓库"><a class="header-anchor" href="#新建网站仓库"></a>新建网站仓库</h2>
<h2 id="新建Git钩子"><a class="header-anchor" href="#新建Git钩子"></a>新建Git钩子</h2>
]]></content>
      <categories>
        <category>IT</category>
        <category>博客</category>
        <category>软件</category>
        <category>技巧</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客</tag>
        <tag>网站</tag>
        <tag>部署</tag>
      </tags>
  </entry>
  <entry>
    <title>考研-数二-2022年考试大纲</title>
    <url>/2022/03/%E8%80%83%E7%A0%94-%E6%95%B0%E4%BA%8C-2022%E5%B9%B4%E8%80%83%E8%AF%95%E5%A4%A7%E7%BA%B2/</url>
    <content><![CDATA[<p>[TOC]</p>
<span id="more"></span>
<h2 id="考试形式和试卷结构"><a class="header-anchor" href="#考试形式和试卷结构"></a>考试形式和试卷结构</h2>
<p>一、试卷满分及考试时间</p>
<p>​		试卷满分为150分，考试时间为180分钟.</p>
<p>二、答题方式</p>
<p>​		答题方式为闭卷、笔试.</p>
<p>三、试卷内容结构</p>
<ul>
<li>高等教学　约80%</li>
<li>线性代数　约20%</li>
</ul>
<p>四、试卷题型结构</p>
<ul>
<li>单项选择题 10小题，每小题5分，共50分</li>
<li>填空题 6小题，每小题5分，共30分</li>
<li>解答题(包括证明题) 7小题，共70分</li>
</ul>
<h2 id="高等数学"><a class="header-anchor" href="#高等数学"></a>高等数学</h2>
<h3 id="函数、极限、连续"><a class="header-anchor" href="#函数、极限、连续"></a>函数、极限、连续</h3>
<p>考试内容：</p>
<ul>
<li>
<p>函数的概念及表示法</p>
</li>
<li>
<p>函数的有界性、单调性、周期性和奇偶性</p>
</li>
<li>
<p>复合函数、反函数、分段函数和隐函数</p>
</li>
<li>
<p>基本初等函数的性质及其图形</p>
</li>
<li>
<p>初等函数 函数关系的建立</p>
</li>
<li>
<p>数列极限与函数极限的定义及其性质</p>
</li>
<li>
<p>函数的左极限和右极限</p>
</li>
<li>
<p>无穷小量和无穷大量的概念及其关系</p>
</li>
<li>
<p>无穷小量的性质及无穷小量的比较</p>
</li>
<li>
<p>极限的四则运算</p>
</li>
<li>
<p>极限存在的两个准则：单调有界准则和夹逼准则</p>
</li>
<li>
<p>两个重要极限：<br />
$$<br />
\lim _{x \rightarrow 0} \frac{\sin x}{x}=1<br />
$$</p>
<p>$$<br />
\lim _{x \rightarrow \infty}\left(1+\frac{1}{x}\right)^{x}=e<br />
$$</p>
</li>
<li>
<p>函数连续的概念</p>
</li>
<li>
<p>函数间断点的类型</p>
</li>
<li>
<p>初等函数的连续性</p>
</li>
<li>
<p>闭区间上连续函数的性质</p>
</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解函数的概念，掌握函数的表示法，并会建立应用问题的函数关系。</li>
<li>了解函数的有界性、单调性、周期性和奇偶性.</li>
<li>理解复合函数及分段函数的概念、了解反函数及隐函数的概念、掌握基本初等函数的性质及其图形、了解初等函数的概念、理解极限的概念、理解函数左极限与右极限的概念以及函数极限存在与左极限、右极限之间的关系.</li>
<li>掌握极限的性质及四则运算法则.</li>
<li>掌握极限存在的两个准则，并会利用它们求极限，掌握利用两个重要极限求极限的方法.</li>
<li>理解无穷小量、无穷大量的概念，掌握无穷小量的比较方法,会用等价无穷小量求极限.</li>
<li>理解函数连续性的概念(含左连续与右连续)，会判别函数间断点的类型.</li>
<li>了解连续函数的性质和初等函数的连续性,理解闭区间上连续函数的性质(有界性、最大值和最小值定理、介值定理)，并会应用这些性质.</li>
</ol>
<h3 id="一元函数微分学"><a class="header-anchor" href="#一元函数微分学"></a>一元函数微分学</h3>
<p>考试内容：</p>
<div class="tabs" id="一元函数微分学"><ul class="nav-tabs"><li class="tab active"><a href="#一元函数微分学-1">1</a></li><li class="tab"><a href="#一元函数微分学-2">2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="一元函数微分学-1"><ul>
<li>导数和微分的概念</li>
<li>导数的几何意义和物理意义</li>
<li>函数的可导性与连续性之间的关系</li>
<li>平面曲线的切线和法线</li>
<li>导数和微分的四则运算</li>
<li>基本初等函数的导数</li>
<li>复合函数、反函数、隐函数以及参数方程所确定的函数的微分法</li>
<li>高阶导数</li>
<li>一阶微分形式的不变性</li>
<li>微分中值定理洛必达法则</li>
<li>函数单调性的判别</li>
<li>函数的极值</li>
<li>函数图形的凹凸性</li>
<li>拐点及渐近线</li>
<li>函数图形的描绘</li>
<li>函数的最大值与最小值</li>
<li>弧微分</li>
<li>曲率的概念</li>
<li>曲率圆与曲率半径</li>
</ul></div><div class="tab-pane" id="一元函数微分学-2"><ul>
<li>导数和微分</li>
<li>函数的可导性与连续性</li>
<li>导数的四则运算法则</li>
<li>复合函数的求导法则</li>
<li>基本初等函数的导数公式</li>
<li>微分的四则运算法则</li>
<li>一阶微分形式的不变性</li>
<li>高阶导数的概念</li>
<li>分段函数的导数</li>
<li>隐函数、由参数方程所确定的函数、反函数的导数</li>
<li>罗尔定理、拉格朗日中值定理、泰勒定理、柯西中值定理</li>
<li>洛必达法则</li>
<li>函数的极值概念，掌握用导数判断函数的单调性</li>
<li>函数图形的凹凸性</li>
<li>曲率、曲率圆和曲率半径</li>
</ul></div></div></div>
<p>考试要求</p>
<ol>
<li>理解导数和微分的概念，理解导数和微分的关系，理解函数的可导性与连续性之间的关系.</li>
<li>掌握导数的四则运算法则和复合函数的求导法则，掌握基本初等函数的导数公式.了解微分的四则运算法则和一阶微分形式的不变性，会求函数的微分.</li>
<li>了解高阶导数的概念，会求简单函数的高阶导数.</li>
<li>会求分段函数的导数，会求隐函数和由参数方程所确定的函数以及反函数的导数.</li>
<li>理解并会用罗尔（Rolle）定理、拉格朗日（Lagrange）中值定理和泰勒（Taylor）定理，了解并会用柯西( Cauchy ）中值定理.</li>
<li>掌握用洛必达法则求未定式极限的方法.</li>
<li>理解函数的极值概念，掌握用导数判断函数的单调性和求函数极值的方法，掌握函数最大值和最小值的求法及其应用.</li>
<li>会用导数判断函数图形的凹凸性(注:在区间(a,b)内，设函数(x)具有二阶导数当 $f(x)‘’&gt;0$ 时，f(x)的图形是凹的;当 $f(x)‘’&lt;0$ 时，f(X)的图形是凸的)，会求函数图形的拐点以及水平、铅直和斜渐近线,会描绘函数的图形.</li>
<li>了解曲率、曲率圆和曲率半径的概念，会计算曲率和曲率半径.</li>
</ol>
<h3 id="一元函数积分学"><a class="header-anchor" href="#一元函数积分学"></a>一元函数积分学</h3>
<p>考试内容：</p>
<ul>
<li>原函数和不定积分的概念</li>
<li>不定积分的基本性质</li>
<li>基本<a href="https://baike.baidu.com/item/%E7%A7%AF%E5%88%86%E5%85%AC%E5%BC%8F">积分公式</a></li>
<li>定积分的概念和基本性质</li>
<li>定积分中值定理</li>
<li>积分上限的函数及其导数</li>
<li>牛顿-莱布尼茨公式</li>
<li>不定积分和定积分的换元积分法与分部积分法</li>
<li>有理函数、三角函数的有理式和简单无理函数的积分反常（广义）积分</li>
<li>定积分的应用</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解原函数的概念，理解不定积分和定积分的概念.</li>
<li>掌握不定积分的基本公式，掌握不定积分和定积分的性质及定积分中值定理，掌握换元积分法与分部积分法.</li>
<li>会求有理函数、三角函数有理式和简单无理函数的积分.</li>
<li>理解积分上限的函数，会求它的导数，掌握牛顿一莱布尼茨公式.</li>
<li>了解反常积分的概念，了解反常积分收敛的比较判别法，会计算反常积分.</li>
<li>掌握用定积分表达和计算一些几何量与物理量（平面图形的面积、平面曲线的弧长、旋转体的体积及侧面积、平行截面面积为已知的立体体积、功、引力、压力、质心、形心等）及函数的平均值.</li>
</ol>
<h3 id="多元函数微积分学"><a class="header-anchor" href="#多元函数微积分学"></a>多元函数微积分学</h3>
<p>考试内容：</p>
<ul>
<li>多元函数的概念</li>
<li>二元函数的几何意义</li>
<li>二元函数的极限与连续的概念</li>
<li>有界闭区域上，二元连续函数的性质</li>
<li>多元函数的偏导数和全微分</li>
<li>多元复合函数</li>
<li>隐函数的求导法</li>
<li>二阶偏导数</li>
<li>多元函数的极值和条件极值、最大值和最小值</li>
<li>二重积分的概念、基本性质和计算.</li>
</ul>
<p>考试要求</p>
<ol>
<li>了解多元函数的概念，了解二元函数的几何意义.</li>
<li>了解二元函数的极限与连续的概念，了解有界闭区域上二元连续函数的性质.</li>
<li>了解多元函数偏导数与全微分的概念，会求多元复合函数一阶、二阶偏导数，会求全微分，了解隐函数存在定理，会求多元隐函数的偏导数.</li>
<li>了解多元函数极值和条件极值的概念，掌握多元函数极值存在的必要条件，了解二元函数极值存在的充分条件，会求二元函数的极值，会用拉格朗日乘数法求条件极值，会求简单多元函数的最大值和最小值，并求解一些简单的应用问题.</li>
<li>理解二重积分的概念，了解二重积分的基本性质，了解二重积分的中值定理，掌握二重积分的计算方法（直角坐标、极坐标）.</li>
</ol>
<h3 id="常微分方程"><a class="header-anchor" href="#常微分方程"></a>常微分方程</h3>
<p>考试内容：</p>
<ul>
<li>常微分方程的基本概念</li>
<li>变量可分离的微分方程</li>
<li>齐次微分方程</li>
<li>一阶线性微分方程</li>
<li>可降阶的高阶微分方程</li>
<li>线性微分方程解的性质及解的结构定理</li>
<li>二阶常系数齐次线性微分方程</li>
<li>高于二阶的某些常系数齐次线性微分方程</li>
<li>简单的二阶常系数非齐次线性微分方程</li>
<li>微分方程的简单应用</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>了解微分方程及其阶、解、通解、初始条件和特解等概念.</li>
<li>掌握变量可分离的微分方程及一阶线性微分方程的解法，会解齐次微分方程.</li>
<li>会用降阶法解下列形式的微分方程：$y’‘=f(x)$ 、$y’‘=f(x,y’)$ 和 $y’‘=f(y,y’)$.</li>
<li>理解<a href="https://baike.baidu.com/item/%E7%BA%BF%E6%80%A7%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/946736">线性微分方程</a>解的性质及解的结构.</li>
<li>掌握二阶常系数齐次线性微分方程的解法，并会解某些高于二阶的常系数齐次线性微分方程.</li>
<li>会解自由项为多项式、指数函数、正弦函数、余弦函数以及它们的和与积的二阶常系数非齐次线性微分方程.</li>
<li>会用微分方程解决一些简单的应用问题.</li>
</ol>
<h2 id="线性代数"><a class="header-anchor" href="#线性代数"></a>线性代数</h2>
<h3 id="行列式"><a class="header-anchor" href="#行列式"></a>行列式</h3>
<p>考试内容：</p>
<ul>
<li>行列式的概念和基本性质</li>
<li>行列式按行（列）展开定理</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>了解行列式的概念，掌握行列式的性质.</li>
<li>会应用行列式的性质和行列式按行（列）展开定理计算行列式.</li>
</ol>
<h3 id="矩阵"><a class="header-anchor" href="#矩阵"></a>矩阵</h3>
<p><strong>考试内容：</strong></p>
<ul>
<li>矩阵的概念</li>
<li>矩阵的线性运算</li>
<li>矩阵的乘法</li>
<li>方阵的幂</li>
<li>方阵乘积的行列式</li>
<li>矩阵的转置</li>
<li>逆矩阵的概念和性质</li>
<li>矩阵可逆的充分必要条件</li>
<li>伴随矩阵</li>
<li>矩阵的初等变换</li>
<li>初等矩阵</li>
<li>矩阵的秩</li>
<li>矩阵的等价分块矩阵及其运算</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解矩阵的概念，了解单位矩阵、数量矩阵、对角矩阵、三角矩阵、对称矩阵、反对称矩阵和正交矩阵以及它们的性质.</li>
<li>掌握矩阵的线性运算、乘法、转置以及它们的运算规律，了解方阵的幂与方阵乘积的行列式的性质.</li>
<li>理解逆矩阵的概念，掌握逆矩阵的性质以及矩阵可逆的充分必要条件.理解伴随矩阵的概念，会用伴随矩阵求逆矩阵.</li>
<li>了解矩阵初等变换的概念，了解初等矩阵的性质和矩阵等价的概念，理解矩阵的秩的概念，掌握用初等变换求矩阵的秩和逆矩阵的方法.</li>
<li>了解分块矩阵及其运算.</li>
</ol>
<h3 id="向量"><a class="header-anchor" href="#向量"></a>向量</h3>
<p>考试内容：</p>
<ul>
<li>向量的概念</li>
<li>向量的线性组合和线性表示</li>
<li>向量组的线性相关与线性无关</li>
<li>向量组的极大线性无关组</li>
<li><a href="https://baike.baidu.com/item/%E7%AD%89%E4%BB%B7%E5%90%91%E9%87%8F%E7%BB%84/1267576">等价向量组</a></li>
<li>向量组的秩</li>
<li>向量组的秩与矩阵的秩之间的关系</li>
<li>向量的内积</li>
<li>线性无关向量组的正交规范化方法</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解n维向量、向量的线性组合与线性表示的概念.</li>
<li>理解向量组线性相关、线性无关的概念，掌握向量组线性相关、线性无关的有关性质及判别法.</li>
<li>了解向量组的极大线性无关组和向量组的秩的概念，会求向量组的极大线性无关组及秩.</li>
<li>了解向量组等价的概念，了解矩阵的秩与其行（列）向量组的秩的关系.</li>
<li>了解内积的概念，掌握线性无关向量组正交规范化的施密特（Schmidt）方法.</li>
</ol>
<h3 id="线性方程组"><a class="header-anchor" href="#线性方程组"></a>线性方程组</h3>
<p>考试内容：</p>
<ul>
<li>线性方程组的克莱姆（Cramer）法则</li>
<li>齐次线性方程组有非零解的充分必要条件</li>
<li>非齐次线性方程组有解的充分必要条件</li>
<li>线性方程组解的性质和解的结构</li>
<li>齐次线性方程组的基础解系和通解</li>
<li>非齐次线性方程组的通解</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>会用克莱姆法则.</li>
<li>理解齐次线性方程组有非零解的充分必要条件及非齐次线性方程组有解的充分必要条件.</li>
<li>理解齐次线性方程组的基础解系及通解的概念，掌握齐次线性方程组的基础解系和通解的求法.</li>
<li>理解非齐次线性方程组的解的结构及通解的概念.</li>
<li>会用初等行变换求解线性方程组.</li>
</ol>
<h3 id="矩阵的特征值和特征向量"><a class="header-anchor" href="#矩阵的特征值和特征向量"></a>矩阵的特征值和特征向量</h3>
<p>考试内容：</p>
<ul>
<li>矩阵的特征值和特征向量的概念、性质</li>
<li>相似矩阵的概念及性质</li>
<li>矩阵可相似对角化的充分必要条件及相似对角矩阵</li>
<li>实对称矩阵的特征值、特征向量及其相似对角矩阵</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>理解矩阵的特征值和特征向量的概念及性质，会求矩阵的特征值和特征向量.</li>
<li>理解相似矩阵的概念、性质及矩阵可相似对角化的充分必要条件，掌握将矩阵化为相似对角矩阵的方法.</li>
<li>掌握实对称矩阵的特征值和特征向量的性质.</li>
</ol>
<h3 id="二次型"><a class="header-anchor" href="#二次型"></a>二次型</h3>
<p>考试内容：</p>
<ul>
<li>二次型及其矩阵表示</li>
<li>合同变换与合同矩阵</li>
<li>二次型的秩</li>
<li>惯性定理</li>
<li>二次型的标准形和规范形用正交变换和配方法化二次型为标准形</li>
<li>二次型及其矩阵的正定性</li>
</ul>
<p><strong>考试要求</strong></p>
<ol>
<li>掌握二次型及其矩阵表示，了解二次型秩的概念，了解合同变换与合同矩阵的概念，了解二次型的标准形、规范形的概念以及惯性定理.</li>
<li>掌握用正交变换化二次型为标准形的方法，会用配方法化二次型为标准形.</li>
<li>理解正定二次型、正定矩阵的概念，并掌握其判别法</li>
</ol>
]]></content>
      <categories>
        <category>个人</category>
        <category>学习</category>
        <category>考研</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>考研</tag>
        <tag>高数</tag>
      </tags>
  </entry>
  <entry>
    <title>考研-高数复习笔记</title>
    <url>/2022/03/%E8%80%83%E7%A0%94-%E9%AB%98%E6%95%B0%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>[TOC]</p>
<span id="more"></span>
<h2 id="其他"><a class="header-anchor" href="#其他"></a>其他</h2>
<h3 id="导函数"><a class="header-anchor" href="#导函数"></a>导函数</h3>
<p>注：来源于 <a href="https://blog.csdn.net/sunbobosun56801/article/details/77892321">数学笔记——导数1(导数的基本概念)_我是8位的-CSDN博客_导数的概念</a></p>
<p>从物理意义上讲，导数就是求解变化率的问题；从几何意义上讲，导数就是求函数在某一点上的切线的斜率。</p>
<p>我们熟知的速度公式：v = s/t，这求解的是平均速度，实际上往往需要知道瞬时速度：</p>
<p>$$<br />
v = \frac{ s-s_{0} }{ t-t_{0} }<br />
$$<br />
　　当t趋近于t0，即t-t0趋近于0时，得到的就是顺时速度。设Δt=t-t0，s是t的函数s=f(t)，瞬时速度用数学表示就是：</p>
<p>$$<br />
v=\lim_{\Delta t \to 0} \frac{ f(t)-f(t_{0}) }{ \Delta t }<br />
$$<br />
　　从几何意义上讲，导数是函数在某一点处的切线的斜率：</p>
<p><img data-src="https://img-61.oss-cn-shanghai.aliyuncs.com/img/PicGo/dao_shu_qie_xian.png" alt="dao_shu_qie_xian" /></p>
<pre><code>	直线a与曲线相切于点Q，直线b与曲线相割于点Q和点P。b的斜率是k=(y-y0)/(x-x0)，当b以Q为轴心沿着曲线旋转时，铉长|PQ|趋近于0，即x→x0时，极限存在：
</code></pre>
<p>$$<br />
k = \lim_{x \to x_{0}} \frac{ y-y_{0} }{ x-x_{0} }<br />
$$<br />
由上述两个问题可以看出，变化率和切线的问题都可以归结为下面的公式：<br />
$$<br />
\lim <em>{x \rightarrow x</em>{0}} \frac{f(x)-f\left(x_{0}\right)}{x-x_{0}}<br />
$$<br />
　　令Δx = x-x0, Δy = y - y0 = f(x) – f(x0) = f(x0 + Δx) - f(x0)，上面的公式可以写成：<br />
$$<br />
\lim <em>{\Delta x \rightarrow 0} \frac{\Delta y}{\Delta x} \text { 或 } \lim <em>{\Delta x \rightarrow 0} \frac{f\left(x</em>{0}+\Delta x\right)-f\left(x</em>{0}\right)}{\Delta x}<br />
$$<br />
由此得出导数的概念，设函数y=f(x)在点x0的某个邻域内有定义，当自变量x在x0处取得增量Δx，且x0+Δx仍在该邻域内时，y取得增量Δy；如果Δy与Δx之比在Δx→0时存在极限，则称函数y=f(x)在点x0处可导，并称这个极限为函数y=f(x)在点x0处的导数，记作f’(x0) ：<br />
$$<br />
f’(x_{0}) = \lim_{\Delta x \to 0} \frac{ \Delta y}{ \Delta x } = \lim_{\Delta x \to 0} \frac{ f(x_{0}+\Delta x)-f(x_{0}) }{\Delta x }<br />
$$</p>
<div class="tabs" id="dao-shu"><ul class="nav-tabs"><li class="tab active"><a href="#dao-shu-1">1/x求导</a></li></ul><div class="tab-content"><div class="tab-pane active" id="dao-shu-1"><p>例如，1/x求导</p>
<p>根据导数公式，代入f(x) = 1/x</p>
<p>$$<br />
f^{\prime}(x)=\lim _{\Delta x \rightarrow 0} \frac{\frac{1}{x+\Delta x}-\frac{1}{x}}{\Delta x}<br />
$$<br />
　　这就OK了，所以说导数很简单，因为它仅有一个公式。但没完，因为上式没有任何意义，仅仅是看起来更复杂了。如果我们直接观察导数公式，对于所有求导，当Δx→0时，分母都为0，所以必须将导数进一步简化。</p>
<p>$$<br />
\begin{array}{c}<br />
\frac{\frac{1}{x+\Delta x}-\frac{1}{x}}{\Delta x}=\frac{1}{\Delta x}\left(\frac{1}{x+\Delta x}-\frac{1}{x}\right)= \<br />
\frac{1}{\Delta x}\left(\frac{-\Delta x}{(x+\Delta x) x}\right)=\frac{-1}{x^{2}+x \Delta x}  \<br />
f^{\prime}(x)=\lim _{\Delta x \rightarrow 0} \frac{-1}{x^{2}+x \Delta x}=\frac{-1}{x^{2}}<br />
\end{array}<br />
$$<br />
　　 “求f(x)的导数”或“对f(x)求导”有两种解释，一种是求f(x)的导函数，此时的结果是一个函数；另一种是求f(x)在定义域某一点的导数，此时的结果是将该点的值代入导函数，最终得到一个具体的数值。</p></div></div></div>
<h4 id="基本初等函数的导数"><a class="header-anchor" href="#基本初等函数的导数"></a>基本初等函数的导数</h4>
<table>
<thead>
<tr>
<th><strong>函数</strong></th>
<th><strong>原函数</strong></th>
<th><strong>导函数</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%B8%B8%E5%87%BD%E6%95%B0">常函数</a></strong>（即<a href="https://baike.baidu.com/item/%E5%B8%B8%E6%95%B0">常数</a>）</td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/6f48ec146bf185699bc793e94d05f60c.svg" alt="img" /> （***C***为常数)</td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/5e230f5a0da4d25df0aa7e2d5516e42a.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E6%8C%87%E6%95%B0%E5%87%BD%E6%95%B0">指数函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/e3ce5e293d27391048a34d21dcfc3567.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/c21a21b4809f4409f9ef5eacd103a67b.svg" alt="img" /></td>
</tr>
<tr>
<td></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/05e9641809287619ff141f1164b91e53.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/06e6eb3b4a0424439aa9f5b6a7777dd1.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%B9%82%E5%87%BD%E6%95%B0">幂函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/ef7655a674eb56e73d9d99106359cacc.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/77959c08aecc6b58d6ee46e034a28371.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%AF%B9%E6%95%B0%E5%87%BD%E6%95%B0">对数函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/e3a5370faa1c321a77c71dd984575883.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/31d55db131061436c43da6fa49521c6c.svg" alt="img" /></td>
</tr>
<tr>
<td></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/8b558ab39806296fad8e943051cbbcc0.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/04522b1455260aae6b2cd8fcbf4e38a0.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E6%AD%A3%E5%BC%A6%E5%87%BD%E6%95%B0">正弦函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/0f2cbbfff8dfdeb1795031afd5f4a447.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/9b173723cd04f95cfe4baf428379aad7.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E4%BD%99%E5%BC%A6%E5%87%BD%E6%95%B0">余弦函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/30270e38ed05100aa0d81333c4e23c7b.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/dc299b291d088d3610622cd8b0fc1ac6.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E6%AD%A3%E5%88%87%E5%87%BD%E6%95%B0">正切函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/0dd48f9fe0bac0914637e5681228b6b3.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/f5384f2521c4739922680bd28169b921.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E4%BD%99%E5%88%87%E5%87%BD%E6%95%B0">余切函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/268e7f44dade45f540c5b7c7b1cbe1a2.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/4cfb86aa2f73f9515e04e8f524fa119e.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E6%AD%A3%E5%89%B2%E5%87%BD%E6%95%B0">正割函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/ea45be3b8ffb045e9fb3d47302b51821.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/6898483dc7d7c955731191e622149a14.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E4%BD%99%E5%89%B2%E5%87%BD%E6%95%B0">余割函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/a2970da37d9e09326df1d5d179731f0b.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/c05bee31e3e0544ce7249db303a6d9b9.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%8F%8D%E6%AD%A3%E5%BC%A6%E5%87%BD%E6%95%B0">反正弦函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/a8ed3000d5b75b60f541968571db44ed.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/c41fb542290f578b45c5ed357218b457.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%8F%8D%E4%BD%99%E5%BC%A6%E5%87%BD%E6%95%B0">反余弦函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/be4fe67defefcb2eac6169117c181c75.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/133f624a66aacaf29fb99b9a817e5243.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%8F%8D%E6%AD%A3%E5%88%87%E5%87%BD%E6%95%B0">反正切函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/e205cc5545e96047c124a85cfd2ffd4b.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/cbd133df57d7a708144f6d6045437cb7.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%8F%8D%E4%BD%99%E5%88%87%E5%87%BD%E6%95%B0">反余切函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/5321da938d4f77b15cfd7fcb8a96708c.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/e5ea6b41b6741a475c3e935700b4e543.svg" alt="img" /></td>
</tr>
<tr>
<td><strong><a href="https://baike.baidu.com/item/%E5%8F%8C%E6%9B%B2%E7%BA%BF%E5%87%BD%E6%95%B0">双曲线函数</a></strong></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/10e067f173633456b45f91334f1e56ef.svg" alt="img" /></td>
<td><img data-src="https://bkimg.cdn.bcebos.com/formula/7c508809a7081cc904bd5e143e6b701a.svg" alt="img" /></td>
</tr>
</tbody>
</table>
<h3 id="反函数"><a class="header-anchor" href="#反函数"></a>反函数</h3>
]]></content>
      <categories>
        <category>个人</category>
        <category>学习</category>
        <category>考研</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>考研</tag>
        <tag>高数</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-Next主题-相关配置</title>
    <url>/2022/03/Hexo-Next%E4%B8%BB%E9%A2%98-%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="取消“全文预览”，启用“阅读全文”"><a class="header-anchor" href="#取消“全文预览”，启用“阅读全文”"></a>取消“全文预览”，启用“阅读全文”</h2>
<p>在md文章中任意位置插入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure>
<p>位于其下方的内容将不在首页<code>“全文预览”</code>，而是采用<code>“阅读全文”</code>的按钮打开文章，阅读全部内容。</p>
<span id="more"></span>
<h2 id="居中标签"><a class="header-anchor" href="#居中标签"></a>居中标签</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/#Centered-Quote">Tag Plugins | NexT</a></p>
<p>此标记将生成一对引号，位于前后两行，并且引用的文本位于中间行并居中显示。使用居中引号时，如果我们有多行文本，并且每行都有不同的长度，则引号不会是对称的，因此建议在只有单行文本时使用。例如，在文章之前或所有文章之后做一个总结。</p>
<h3 id="用法"><a class="header-anchor" href="#用法"></a>用法</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% centerquote %&#125;Something&#123;% endcenterquote %&#125;</span><br><span class="line">或</span><br><span class="line">&#123;% cq %&#125;Something&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center">
<p>代码优雅，核心简单</p>

</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% cq %&#125;代码优雅，核心简单&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="按钮标签"><a class="header-anchor" href="#按钮标签"></a>按钮标签</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/button.html#">Button | NexT</a></p>
<h3 id="用法-2"><a class="header-anchor" href="#用法-2"></a><strong>用法</strong></h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% button url, text, icon [class], [title] %&#125;</span><br><span class="line"><span class="comment">&lt;!-- Tag Alias 标签别名 --&gt;</span></span><br><span class="line">&#123;% btn url, text, icon [class], [title] %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>url</code>：URL 的绝对或相对路径。</li>
<li><code>text</code>：按钮文本。如果未指定<code>图标</code>，则为必需。</li>
<li><code>icon</code>：<strong>Font Awesome</strong> 图标名称。如果未指定<code>文本</code>，则为必需。</li>
<li><code>[class]</code>：<em>可选参数</em>。 <strong>Font Awesome</strong> 类： | | | | |<code>fa-fw``fa-lg``fa-2x``fa-3x``fa-4x``fa-5x</code></li>
<li><code>[title]</code>：<em>可选参数</em>。鼠标悬停时的工具提示。</li>
</ul>
<h3 id="例子"><a class="header-anchor" href="#例子"></a><strong>例子</strong></h3>
<p>​	<a class="btn" href="#按钮标签">文本</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% button #按钮标签, 文本 %&#125;</span><br></pre></td></tr></table></figure>
<p>​	<a class="btn" href="#例子" title="提示">文本与提示</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% btn #例子, 文本与提示,, 提示 %&#125;</span><br></pre></td></tr></table></figure>
<h4 id="具有相对-URL-的按钮"><a class="header-anchor" href="#具有相对-URL-的按钮"></a>具有相对 URL 的按钮</h4>
<div class="text-center"><a class="btn" href="#" title="Previous Chapter (Full Image)"><i class="fa fa-arrow-left fa-fw fa-lg"></i>Previous Chapter</a> <a class="btn" href="#" title="Next Chapter (Label)"><i class="fa fa-arrow-right fa-fw fa-lg"></i>Next Chapter</a></div>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="line">&#123;% btn #, Previous Chapter, arrow-left fa-fw fa-lg, Previous Chapter (Full Image) %&#125;</span><br><span class="line">&#123;% btn #, Next Chapter, arrow-right fa-fw fa-lg, Next Chapter (Label) %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="图片组"><a class="header-anchor" href="#图片组"></a>图片组</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/group-pictures.html">Group Pictures | NexT </a></p>
<h3 id="用法-3"><a class="header-anchor" href="#用法-3"></a><strong>用法</strong></h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% grouppicture [number]-[layout] %&#125;&#123;% endgrouppicture %&#125;</span><br><span class="line"><span class="comment">&lt;!-- Tag Alias 标签别名 --&gt;</span></span><br><span class="line">&#123;% gp [number]-[layout] %&#125;&#123;% endgp %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p><code>[number]</code>：*可选参数。*要添加到组图片中的图片总数。</p>
</li>
<li>
<p><code>[layout]</code>：*可选参数。*布局的索引，可以根据下图获得。</p>
</li>
</ul>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/group-picture-1.png" alt="" /></p>
<p><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/group-picture-2.png" alt="" /></p>
<h3 id="例子-2"><a class="header-anchor" href="#例子-2"></a><strong>例子</strong></h3>
<p>例如，有3张图，先设置图片总数为3，再选用 <strong>“3张图布局”</strong> 中的第2种布局，代码如下：</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/next.svg" alt="" /></div><div class="group-picture-column"><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/next.svg" alt="" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://picgo-yunying61.oss-cn-guangzhou.aliyuncs.com/picgo_app/next.svg" alt="" /></div></div></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% grouppicture 3-2 %&#125;</span><br><span class="line">![](<span class="link">/images/next.svg</span>)</span><br><span class="line">![](<span class="link">/images/next.svg</span>)</span><br><span class="line">![](<span class="link">/images/next.svg</span>)</span><br><span class="line">&#123;% endgrouppicture %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="标签（文本高亮）"><a class="header-anchor" href="#标签（文本高亮）"></a>标签（文本高亮）</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/label.html">Label | NexT </a></p>
<h3 id="用法-4"><a class="header-anchor" href="#用法-4"></a><strong>用法</strong></h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% label [class]@text %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>[class]</code>：*可选参数。*支持的值：default | primary | success | info | warning | danger<br />
如果未指定，则将使用浏览器的默认样式，该样式在不同的浏览器中可能会有所不同。</li>
<li><code>text</code>：可以指定带或不带空格</li>
</ul>
<h3 id="例子-3"><a class="header-anchor" href="#例子-3"></a><strong>例子</strong></h3>
<p>Lorem <mark class="label ">ipsum</mark> <mark class="label primary">dolor sit</mark> amet, consectetur <mark class="label success">adipiscing elit,</mark> sed <mark class="label info">do eiusmod</mark> tempor incididunt ut labore et dolore magna aliqua.</p>
<p>Ut enim <em><mark class="label warning">ad</mark></em> minim veniam, quis <strong><mark class="label danger">nostrud</mark></strong> exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
<p>Duis aute irure dolor in reprehenderit in voluptate <s><mark class="label default">velit</mark></s> <mark>esse</mark> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">Lorem &#123;% label @ipsum %&#125; &#123;% label primary@dolor sit %&#125; amet, consectetur &#123;% label success@adipiscing elit, %&#125; sed &#123;% label info@do eiusmod %&#125; tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line"></span><br><span class="line">Ut enim *&#123;% label warning @ad %&#125;* minim veniam, quis **&#123;% label danger@nostrud %&#125;** exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</span><br><span class="line"></span><br><span class="line">Duis aute irure dolor in reprehenderit in voluptate ~~&#123;% label default @velit %&#125;~~ <span class="tag">&lt;<span class="name">mark</span>&gt;</span>esse<span class="tag">&lt;/<span class="name">mark</span>&gt;</span> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>
<h2 id="链接网格"><a class="header-anchor" href="#链接网格"></a>链接网格</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/link-grid.html">Link Grid | NexT </a></p>
<h3 id="用法-5"><a class="header-anchor" href="#用法-5"></a><strong>用法</strong></h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% linkgrid [image] [delimiter] [comment] %&#125;&#123;% endlinkgrid %&#125;</span><br><span class="line"><span class="comment">&lt;!-- Tag Alias --&gt;</span></span><br><span class="line">&#123;% lg [image] [delimiter] [comment] %&#125;&#123;% endlg %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>[image]</code>：*可选参数。*默认图像网址。</li>
<li><code>[delimiter]</code>：*可选参数。*如果给定了可选的分隔符参数，则将其解释为每行中项的分隔符。</li>
<li><code>[comment]</code>：*可选参数。*如果给出了可选的注释参数，则将其解释为注释掉一行的符号。</li>
</ul>
<h2 id="图表、流程图（Mermaid）"><a class="header-anchor" href="#图表、流程图（Mermaid）"></a>图表、流程图（Mermaid）</h2>
<p>以类似于标记的方式从文本中生成图表和流程图</p>
<p>Mermaid 是一个基于 Javascript 的图表绘制工具，通过解析类 Markdown 的文本语法来实现图表的创建和动态修改。Mermaid 诞生的主要目的是让文档的更新能够及时跟上开发进度。</p>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/mermaid.html">Mermaid | NexT</a> ，GitHub： <a href="https://github.com/mermaid-js/mermaid">mermaid</a> 官方中文介绍： <a href="https://github.com/mermaid-js/mermaid/blob/develop/README.zh-CN.md">mermaid/README.zh-CN.md </a></p>
<hr />
<p>个人的第一印象：用法很复杂，在我看来还不如用其他软件绘图，然后导出图片，再传到博客上。</p>
<p>第一感觉：</p>
<ul>
<li>有点复杂</li>
<li>非常清晰的格式化；</li>
<li>无法直接被爬取 “流程图” ；</li>
<li>显示清楚；</li>
<li>代码党福音（不用考虑绘图的琐事）。</li>
</ul>
<p>官方表述：</p>
<ul>
<li>减少绘图和编写文档的时间</li>
<li>提高了内容的智能化和可重用性</li>
<li>易于维护和更新</li>
</ul>
<blockquote>
<p>本博客已启用此功能，以后或许会用吧</p>
</blockquote>
<h3 id="用法-6"><a class="header-anchor" href="#用法-6"></a><strong>用法</strong></h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid type %&#125;</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="例子-4"><a class="header-anchor" href="#例子-4"></a><strong>例子</strong></h3>
<pre class="mermaid">
graph TD
A[Hard] --&gt;|Text| B(Round)
B --&gt; C{Decision}
C --&gt;|One| D[Result 1]
C --&gt;|Two| E[Result 2]
</pre>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid graph TD %&#125;</span><br><span class="line">A[Hard] --&gt;|Text| B(Round)</span><br><span class="line">B --&gt; C&#123;Decision&#125;</span><br><span class="line">C --&gt;|One| D[Result 1]</span><br><span class="line">C --&gt;|Two| E[Result 2]</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>
<pre class="mermaid">
pie
&quot;Dogs&quot; : 386
&quot;Cats&quot; : 85
&quot;Rats&quot; : 15
</pre>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid pie %&#125;</span><br><span class="line">&quot;Dogs&quot; : 386</span><br><span class="line">&quot;Cats&quot; : 85</span><br><span class="line">&quot;Rats&quot; : 15</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="批注（提示、注意）"><a class="header-anchor" href="#批注（提示、注意）"></a>批注（提示、注意）</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/note.html">Note (Bootstrap Callout) | NexT</a></p>
<h3 id="用法-7"><a class="header-anchor" href="#用法-7"></a><strong>用法</strong></h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] [summary] %&#125;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>[class]</code>：*可选参数。*支持的值：default | primary | success | info | warning | danger.</li>
<li><code>[no-icon]</code>：*可选参数。*禁用批注中的图标。</li>
<li><code>[summary]</code>：<em>可选参数。</em> 可选的隐藏摘要。</li>
</ul>
<p>所有参数都是可选的。</p>
<h3 id="例子-5"><a class="header-anchor" href="#例子-5"></a><strong>例子</strong></h3>
<div class="note "><h4 id="页眉"><a class="header-anchor" href="#页眉"></a>页眉</h4>
<p>（不带定义类样式）</p>
</div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note %&#125;</span><br><span class="line"><span class="section">#### 页眉</span></span><br><span class="line">（不带定义类样式）</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note info"><h4 id="信息标题"><a class="header-anchor" href="#信息标题"></a>信息标题</h4>
<p><strong>欢迎来到</strong> <a href="https://hexo.io">Hexo!</a></p>
</div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note info %&#125;</span><br><span class="line"><span class="section">#### 信息标题</span></span><br><span class="line"><span class="strong">**欢迎来到**</span> [<span class="string">Hexo!</span>](<span class="link">https://hexo.io</span>)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note warning"><h4 id="警告标头"><a class="header-anchor" href="#警告标头"></a>警告标头</h4>
<p><strong>Welcome</strong> to <a href="https://hexo.io">Hexo!</a></p>
</div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note warning %&#125;</span><br><span class="line"><span class="section">#### 警告标头</span></span><br><span class="line"><span class="strong">**Welcome**</span> to [<span class="string">Hexo!</span>](<span class="link">https://hexo.io</span>)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note danger"><h4 id="危险标头"><a class="header-anchor" href="#危险标头"></a>危险标头</h4>
<p><strong>Welcome</strong> to <a href="https://hexo.io">Hexo!</a></p>
</div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note danger %&#125;</span><br><span class="line"><span class="section">#### 危险标头</span></span><br><span class="line"><span class="strong">**Welcome**</span> to [<span class="string">Hexo!</span>](<span class="link">https://hexo.io</span>)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<details class="note primary"><summary><p>这是一个摘要</p>
</summary>
<h4 id="详细信息和摘要"><a class="header-anchor" href="#详细信息和摘要"></a>详细信息和摘要</h4>
<p>附注摘要：<code>note primary This is a summary</code></p>

</details>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note primary This is a summary %&#125;</span><br><span class="line"><span class="section">#### 详细信息和摘要</span></span><br><span class="line">附注摘要：<span class="code">`note primary This is a summary`</span></span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note success"><h4 id="批注中的代码块"><a class="header-anchor" href="#批注中的代码块"></a>批注中的代码块</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br></pre></td></tr></table></figure></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note success %&#125;</span><br><span class="line"><span class="section">#### 批注中的代码块</span></span><br><span class="line">&#123;% code %&#125;</span><br><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br><span class="line">&#123;% endcode %&#125;</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="PDF支持"><a class="header-anchor" href="#PDF支持"></a>PDF支持</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/pdf.html">PDF | NexT</a></p>
<p>这是一个插件，允许在博客页面中预览PDF文件。</p>
<p>如果浏览器本身支持嵌入式 PDF，NexT 将创建一个标签，并在您的网站上包含 PDF 文件。否则，它将创建一个标签并使用PDF.js通过@mozilla来呈现pdf文件。</p>
<h2 id="选项卡"><a class="header-anchor" href="#选项卡"></a>选项卡</h2>
<p>详细用法请参考 <a href="https://theme-next.js.org/docs/tag-plugins/tabs.html">Tabs | NexT</a></p>
<p>让选项卡的导航条嵌入内容之中，用以在同一行通过选项卡呈现不同的内容</p>
<h3 id="用法-8"><a class="header-anchor" href="#用法-8"></a><strong>用法</strong></h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line"><span class="comment">&lt;!-- tab [Tab caption] [@icon] --&gt;</span></span><br><span class="line">Any content (support inline tags too).</span><br><span class="line"><span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>Unique name</code>：选项卡块标记的唯一名称，不带逗号。<br />
将在#id用作每个选项卡及其索引号的前缀。<br />
如果名称中有空格，则对于生成#id所有空格都将替换为短划线。<br />
仅对于帖子/页面的当前网址必须是唯一的！</li>
<li><code>[index]</code>：活动选项卡的索引号。<br />
如果未指定，将选择第一个选项卡 （1）。<br />
如果索引为 -1，则不会选择任何选项卡。这将是类似剧透的东西。<br />
可选参数。</li>
<li><code>[Tab caption]</code>：当前选项卡的标题。<br />
如果未指定标题，则带有选项卡索引后缀的唯一名称将用作选项卡的标题。<br />
如果未指定标题，但指定了图标，则标题将为空。<br />
可选参数。</li>
<li><code>[@icon]</code>：Font Awesome 图标名称。<br />
可以指定带或不带空格;例如，&quot;Tab caption @icon&quot;与&quot;Tab caption@icon&quot;相同。<br />
可选参数。</li>
</ul>
<h3 id="例子-6"><a class="header-anchor" href="#例子-6"></a><strong>例子</strong></h3>
<h4 id="选中了第-3-个选项卡的选项卡"><a class="header-anchor" href="#选中了第-3-个选项卡的选项卡"></a>选中了第 3 个选项卡的选项卡</h4>
<div class="tabs" id="second-unique-name"><ul class="nav-tabs"><li class="tab"><a href="#second-unique-name-1">Second unique name 1</a></li><li class="tab"><a href="#second-unique-name-2">Second unique name 2</a></li><li class="tab active"><a href="#second-unique-name-3">Second unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="second-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="second-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane active" id="second-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Second unique name, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<h4 id="未选择选项卡的选项卡"><a class="header-anchor" href="#未选择选项卡的选项卡"></a>未选择选项卡的选项卡</h4>
<div class="tabs" id="third-unique-name"><ul class="nav-tabs"><li class="tab"><a href="#third-unique-name-1">Third unique name 1</a></li><li class="tab"><a href="#third-unique-name-2">Third unique name 2</a></li><li class="tab"><a href="#third-unique-name-3">Third unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="third-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="third-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="third-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Third unique name, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<h4 id="带有图标和自定义标签名称的选项卡"><a class="header-anchor" href="#带有图标和自定义标签名称的选项卡"></a>带有图标和自定义标签名称的选项卡</h4>
<div class="tabs" id="fourth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fourth-unique-name-1"><i class="fa fa-text-width"></i>解决方案1</a></li><li class="tab"><a href="#fourth-unique-name-2"><i class="fa fa-font"></i>解决方案2</a></li><li class="tab"><a href="#fourth-unique-name-3"><i class="fa fa-bold"></i>解决方案3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="fourth-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="fourth-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="fourth-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Fourth unique name %&#125;</span><br><span class="line">&lt;!-- tab 解决方案1@text-width --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 解决方案2@font --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 解决方案3@bold --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<h4 id="标签永久链接测试"><a class="header-anchor" href="#标签永久链接测试"></a>标签永久链接测试</h4>
<div class="note info"><p>名称中有空格，则对于生成#id所有空格都将替换为短划线。</p>
</div>
<p>链接至 &gt; <a href="#tab-one">Tab one</a>.<br />
链接至 &gt; <a href="#tab-one-1">Tab one 1</a>.<br />
链接至 &gt; <a href="#tab-one-2">Tab one 2</a>.<br />
链接至 &gt; <a href="#tab-one-3">Tab one 3</a>.</p>
<p>链接至 &gt; <a href="#tab-two">Tab two</a>.<br />
链接至 &gt; <a href="#tab-two-1">Tab two 1</a>.<br />
链接至 &gt; <a href="#tab-two-2">Tab two 2</a>.<br />
链接至 &gt; <a href="#tab-two-3">Tab two 3</a>.</p>
<div class="tabs" id="tab-one"><ul class="nav-tabs"><li class="tab active"><a href="#tab-one-1">Tab one 1</a></li><li class="tab"><a href="#tab-one-2">Tab one 2</a></li><li class="tab"><a href="#tab-one-3">Tab one 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-one-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="tab-one-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="tab-one-3"><p><strong>This is Tab 3.</strong></p></div></div></div>
<div class="tabs" id="tab-two"><ul class="nav-tabs"><li class="tab active"><a href="#tab-two-1">Tab two 1</a></li><li class="tab"><a href="#tab-two-2">Tab two 2</a></li><li class="tab"><a href="#tab-two-3">Tab two 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-two-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="tab-two-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="tab-two-3"><p><strong>This is Tab 3.</strong></p></div></div></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">链接至 &gt; [<span class="string">Tab one</span>](<span class="link">#tab-one</span>).</span><br><span class="line">链接至 &gt; [<span class="string">Tab one 1</span>](<span class="link">#tab-one-1</span>).</span><br><span class="line">链接至 &gt; [<span class="string">Tab one 2</span>](<span class="link">#tab-one-2</span>).</span><br><span class="line">链接至 &gt; [<span class="string">Tab one 3</span>](<span class="link">#tab-one-3</span>).</span><br><span class="line"></span><br><span class="line">链接至 &gt; [<span class="string">Tab two</span>](<span class="link">#tab-two</span>).</span><br><span class="line">链接至 &gt; [<span class="string">Tab two 1</span>](<span class="link">#tab-two-1</span>).</span><br><span class="line">链接至 &gt; [<span class="string">Tab two 2</span>](<span class="link">#tab-two-2</span>).</span><br><span class="line">链接至 &gt; [<span class="string">Tab two 3</span>](<span class="link">#tab-two-3</span>).</span><br><span class="line"></span><br><span class="line">&#123;% tabs Tab one %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tabs Tab two %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<h4 id="嵌套选项卡"><a class="header-anchor" href="#嵌套选项卡"></a>嵌套选项卡</h4>
<div class="tabs" id="tags"><ul class="nav-tabs"><li class="tab active"><a href="#tags-1">Tags 1</a></li><li class="tab"><a href="#tags-2">Tags 2</a></li><li class="tab"><a href="#tags-3">Tags 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tags-1"><p><strong>This is Tab 1.</strong></p>
<ol>
<li>One</li>
<li>Two</li>
<li>Three</li>
</ol>
<p>Indented code block:</p>
<pre><code>nano /etc
</code></pre>
<p>Tagged code block:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code tag</span><br><span class="line">code tag</span><br><span class="line">code tag</span><br></pre></td></tr></table></figure>
<div class="note default"><p>Note default tag.</p>
</div></div><div class="tab-pane" id="tags-2"><p><strong>This is Tab 2.</strong></p>
<ul>
<li>Five</li>
<li>Six</li>
<li>Seven</li>
</ul>
<div class="note primary"><div class="video-container"><iframe src="https://www.youtube.com/embed/Kt7u5kr_P5o" frameborder="0" loading="lazy" allowfullscreen></iframe></div></div></div><div class="tab-pane" id="tags-3"><p><strong>This is Tab 3.</strong></p>
<div class="tabs" id="sub-tabs"><ul class="nav-tabs"><li class="tab active"><a href="#sub-tabs-1">Sub Tabs 1</a></li><li class="tab"><a href="#sub-tabs-2">Sub Tabs 2</a></li><li class="tab"><a href="#sub-tabs-3">Sub Tabs 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sub-tabs-1"><p><strong>This is Sub Tab 1.</strong></p>
<div class="note success"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>
<div class="note warning"><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>
</div>
<p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>
</div></div><div class="tab-pane" id="sub-tabs-2"><p><strong>This is Sub Tab 2.</strong></p>
<div class="note success"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>
<p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>
<div class="note danger"><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>
</div></div></div><div class="tab-pane" id="sub-tabs-3"><p><strong>This is Sub Tab 3.</strong></p>
<div class="tabs" id="sub-sub-tabs"><ul class="nav-tabs"><li class="tab active"><a href="#sub-sub-tabs-1">Sub-Sub Tabs 1</a></li><li class="tab"><a href="#sub-sub-tabs-2">Sub-Sub Tabs 2</a></li><li class="tab"><a href="#sub-sub-tabs-3">Sub-Sub Tabs 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sub-sub-tabs-1"><p><strong>This is Sub-Sub Tab 1 of Sub Tab 3.</strong></p>
<div class="note success"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>
<p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>
<p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>
</div></div><div class="tab-pane" id="sub-sub-tabs-2"><p><strong>This is Sub-Sub Tab 2 of Sub Tab 3.</strong></p>
<div class="note success"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>
<div class="note warning"><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>
<p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>
</div>
</div></div><div class="tab-pane" id="sub-sub-tabs-3"><p><strong>This is Sub-Sub Tab 3 of Sub Tab 3.</strong></p>
<div class="note success"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>
<div class="note warning"><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>
<div class="note danger"><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>
</div>
</div>
</div></div></div></div></div></div></div></div></div></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Tags %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> One</span><br><span class="line"><span class="bullet">2.</span> Two</span><br><span class="line"><span class="bullet">3.</span> Three</span><br><span class="line"></span><br><span class="line">Indented code block:</span><br><span class="line"></span><br><span class="line"><span class="code">    nano /etc</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">Tagged code block:</span><br><span class="line"></span><br><span class="line">&#123;% code %&#125;</span><br><span class="line">code tag</span><br><span class="line">code tag</span><br><span class="line">code tag</span><br><span class="line">&#123;% endcode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default %&#125;</span><br><span class="line">Note default tag.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> Five</span><br><span class="line"><span class="bullet">*</span> Six</span><br><span class="line"><span class="bullet">*</span> Seven</span><br><span class="line"></span><br><span class="line">&#123;% note primary %&#125;</span><br><span class="line">&#123;% youtube Kt7u5kr<span class="emphasis">_P5o %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&lt;!-- tab --&gt;</span></span><br><span class="line"><span class="emphasis"><span class="strong">**This is Tab 3.**</span></span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% subtabs Sub Tabs %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- tab --&gt;</span></span><br><span class="line"><span class="emphasis"><span class="strong">**This is Sub Tab 1.**</span></span></span><br><span class="line"><span class="emphasis">&#123;% note success %&#125;</span></span><br><span class="line"><span class="emphasis">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% note warning %&#125;</span></span><br><span class="line"><span class="emphasis">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&lt;!-- tab --&gt;</span></span><br><span class="line"><span class="emphasis"><span class="strong">**This is Sub Tab 2.**</span></span></span><br><span class="line"><span class="emphasis">&#123;% note success %&#125;</span></span><br><span class="line"><span class="emphasis">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% note danger %&#125;</span></span><br><span class="line"><span class="emphasis">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&lt;!-- tab --&gt;</span></span><br><span class="line"><span class="emphasis"><span class="strong">**This is Sub Tab 3.**</span></span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% subtabs Sub-Sub Tabs %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- tab --&gt;</span></span><br><span class="line"><span class="emphasis"><span class="strong">**This is Sub-Sub Tab 1 of Sub Tab 3.**</span></span></span><br><span class="line"><span class="emphasis">&#123;% note success %&#125;</span></span><br><span class="line"><span class="emphasis">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&lt;!-- tab --&gt;</span></span><br><span class="line"><span class="emphasis"><span class="strong">**This is Sub-Sub Tab 2 of Sub Tab 3.**</span></span></span><br><span class="line"><span class="emphasis">&#123;% note success %&#125;</span></span><br><span class="line"><span class="emphasis">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% note warning %&#125;</span></span><br><span class="line"><span class="emphasis">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&lt;!-- tab --&gt;</span></span><br><span class="line"><span class="emphasis"><span class="strong">**This is Sub-Sub Tab 3 of Sub Tab 3.**</span></span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% note success %&#125;</span></span><br><span class="line"><span class="emphasis">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% note warning %&#125;</span></span><br><span class="line"><span class="emphasis">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% note danger %&#125;</span></span><br><span class="line"><span class="emphasis">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis">&#123;% endsubtabs %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis">&#123;% endsubtabs %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="emphasis">&#123;% endtabs %&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>IT</category>
        <category>博客</category>
        <category>软件</category>
        <category>技巧</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>配置</tag>
        <tag>Next</tag>
        <tag>主题</tag>
      </tags>
  </entry>
  <entry>
    <title>Node.js 安装与配置</title>
    <url>/2022/03/Node-js-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1>Node.js</h1>
<span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set prefix &quot;C:/Program Files/nodejs/npm_global&quot;	 //设置全局包目录</span><br><span class="line">npm config set cache &quot;C:/Program Files/nodejs/npm_cache&quot; 	//设置缓存目录</span><br></pre></td></tr></table></figure>
<p>注意的是：prefix 修改后，原来安装在默认目录下的npm包也还是生效的，并不需要再次安装:</p>
<p>npm config list -l //查看所有配置</p>
<p>npm本地安装与全局安装有什么区别？<br />
npm install grunt // 本地安装，则是将模块下载到当前命令行所在目录。<br />
npm install -g grunt//全局安装，模块将被下载安装到【全局目录】中；</p>
<p>npm如何获取全局安装的默认目录？<br />
npm config get prefix</p>
<p>npm如何设置全局安装的默认目录？<br />
npm config set prefix “directory”</p>
]]></content>
      <categories>
        <category>IT</category>
        <category>软件</category>
        <category>程序</category>
        <category>搭建与配置</category>
      </categories>
      <tags>
        <tag>安装</tag>
        <tag>Node</tag>
      </tags>
  </entry>
</search>
